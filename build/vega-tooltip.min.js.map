{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/d3-format/build/d3-format.js","node_modules/d3-selection/dist/d3-selection.js","node_modules/d3-time-format/build/d3-time-format.js","node_modules/d3-time/build/d3-time.js","node_modules/json-stable-stringify/index.js","node_modules/jsonify/index.js","node_modules/jsonify/lib/parse.js","node_modules/jsonify/lib/stringify.js","node_modules/vega-lite/src/aggregate.ts","node_modules/vega-lite/src/bin.ts","node_modules/vega-lite/src/channel.ts","node_modules/vega-lite/src/compositemark/boxplot.ts","node_modules/vega-lite/src/compositemark/common.ts","node_modules/vega-lite/src/compositemark/errorbar.ts","node_modules/vega-lite/src/compositemark/index.ts","node_modules/vega-lite/src/datetime.ts","node_modules/vega-lite/src/encoding.ts","node_modules/vega-lite/src/fielddef.ts","node_modules/vega-lite/src/log.ts","node_modules/vega-lite/src/logical.ts","node_modules/vega-lite/src/mark.ts","node_modules/vega-lite/src/scale.ts","node_modules/vega-lite/src/spec.ts","node_modules/vega-lite/src/stack.ts","node_modules/vega-lite/src/timeunit.ts","node_modules/vega-lite/src/type.ts","node_modules/vega-lite/src/util.ts","node_modules/vega-util/build/vega-util.js","src/formatFieldValue.ts","src/index.ts","src/options.ts","src/parseOption.ts","src/supplementField.ts","src/tooltipDisplay.ts"],"names":["f","exports","module","define","amd","window","global","self","this","vegaTooltip","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","prefixExponent","formatDecimal","x","p","toExponential","indexOf","coefficient","slice","exponent","Math","abs","NaN","formatRounded","d","Array","join","formatTypes","","out","i1","toPrecision","i0","%","toFixed","b","round","toString","c","g","max","min","floor","X","toUpperCase","re","formatSpecifier","specifier","FormatSpecifier","match","exec","fill","align","sign","symbol","zero","width","comma","precision","type","prototype","locale","identity","prefixes","formatLocale","numerals","grouping","thousands","group","value","j","push","substring","reverse","currency","decimal","replace","percent","newFormat","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","format","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","padding","formatPrefix","k","pow","defaultLocale","definition","formatDefaultLocale","precisionFixed","step","precisionPrefix","precisionRound","Object","defineProperty","factory","d3","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","name","hasOwnProperty","space","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","none","selector","querySelector","empty","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","constructor","appendChild","child","insertBefore","next","keyPrefix","bindIndex","enter","exit","data","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","ascending","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","string","trim","split","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","add","classedRemove","remove","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","parentNode","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","setAttribute","splice","contains","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","m","removeEventListener","capture","onAdd","wrap","addEventListener","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","root","Selection","groups","parents","_groups","_parents","selection","select","subgroups","subnode","subgroup","selectAll","filter","size","each","bind","enterGroup","updateGroup","previous","_enter","_exit","map","merge","selection$$1","groups0","groups1","m0","m1","merges","group0","group1","order","sort","compare","compareNode","sortgroups","sortgroup","callback","arguments","apply","nodes","attr","getAttributeNS","removeAttributeNS","removeAttribute","v","setAttributeNS","priority","removeProperty","setProperty","property","classed","text","html","append","create","insert","before","clone","deep","typenames","dispatch","nextId","Local","_","sourceEvent","source","current","point","ownerSVGElement","createSVGPoint","clientX","y","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","left","clientLeft","top","clientTop","get","id","set","mouse","changedTouches","clientPoint","touch","touches","identifier","points","customEvent","that","args","d3Time","localDate","date","Date","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","getDay","A","getMonth","B","formatDayOfMonth","formatMicroseconds","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","getHours","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","w","formatWeekdayNumberSunday","W","formatWeekNumberMonday","formatYear","Y","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","getUTCDay","getUTCMonth","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","getUTCHours","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","week","day","utcMonday","ceil","utcDay","offset","getUTCFullYear","getUTCDate","timeMonday","timeDay","getFullYear","getDate","parse","utcFormat","utcParse","-","0","numberRe","percentRe","requoteRe","requote","RegExp","count","timeYear","getMilliseconds","getMinutes","getSeconds","timeSunday","timeThursday","z","getTimezoneOffset","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","dow","utcSunday","utcThursday","timeFormat","timeParse","isoSpecifier","formatIso","toISOString","parseIso","isNaN","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","t0","t1","newInterval","floori","offseti","field","interval","d0","d1","range","start","stop","setTime","end","every","isFinite","millisecond","milliseconds","durationMinute","durationHour","durationWeek","second","seconds","minute","minutes","hour","hours","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","year","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","setUTCHours","setUTCDate","utcDays","utcWeekday","utcTuesday","utcWednesday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDays","timeWeek","timeWeeks","timeSundays","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYears","utcWeek","utcWeeks","json","JSON","obj","opts","cmp","cycles","replacer","aobj","bobj","seen","stringify","level","indent","colonSeparator","toJSON","undefined","isArray","item","TypeError","keys","objectKeys","has","at","ch","escapee","\"","\\","/","error","message","number","hex","uffff","parseInt","String","fromCharCode","white","object","array","word","reviver","result","walk","holder","gap","rep","escapable","meta","\b","\t","\n","\f","\r","quote","lastIndex","str","partial","mind","util_1","AGGREGATE_OP_INDEX","values","valid","missing","distinct","sum","mean","average","variance","variancep","stdev","stdevp","median","q1","q3","ci0","ci1","argmin","argmax","AGGREGATE_OPS","flagKeys","isAggregateOp","COUNTING_OPS","isCountingAggregateOp","aggregate","SUM_OPS","SHARED_DOMAIN_OPS","SHARED_DOMAIN_OP_INDEX","toSet","channel_1","binToString","bin","isBoolean","autoMaxBins","channel","ROW","COLUMN","SIZE","COLOR","OPACITY","SHAPE","Channel","X2","Y2","TEXT","ORDER","DETAIL","TOOLTIP","HREF","UNIT_CHANNEL_INDEX","x2","y2","shape","color","opacity","tooltip","href","CHANNEL_INDEX","__assign","row","column","CHANNELS","SINGLE_DEF_CHANNEL_INDEX","__rest","SINGLE_DEF_CHANNELS","isChannel","UNIT_CHANNELS","NONPOSITION_CHANNEL_INDEX","NONPOSITION_CHANNELS","POSITION_SCALE_CHANNEL_INDEX","POSITION_SCALE_CHANNELS","NONPOSITION_SCALE_CHANNEL_INDEX","NONPOSITION_SCALE_CHANNELS","SCALE_CHANNEL_INDEX","getSupportedMark","tick","rule","circle","square","bar","line","area","geoshape","SCALE_CHANNELS","isScaleChannel","supportMark","mark","rangeType","vega_util_1","encoding_1","encoding_2","fielddef_1","log","common_1","isBoxPlotDef","BOXPLOT","BOXPLOT_STYLES","VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX","box","boxWhisker","boxMid","supportedChannels","filterUnsupportedChannels","spec","encoding","reduce","newEncoding","fieldDef","warn","incompatibleChannel","normalizeBoxPlot","config","outerSpec","projection","kIQRScalar","extent","isNumber","_a","orient","continuousAxisChannelDef","continuousAxis","continuousAxisWithoutAggregate","boxContinousAxis","isMinMax","op","as","postAggregateCalculates","calculate","groupby","bins","timeUnits","encodingWithoutContinuousAxis","forEach","channelDef","isFieldDef","vgField","transformedField","timeUnit","transform","concat","boxParams","isContinuous","boxOrient","encodingWithoutSizeColorAndContinuousAxis","sizeMixins","getMarkSpecificConfigMixins","continuousAxisScaleAndAxis","scale","axis","layer","_b","_c","_d","_e","markSpecificConfig","ERRORBAR","normalizeErrorBar","encodingWithoutSize","encodingWithoutX2Y2","encodingWithoutX_X2_Y_Y2","mark_1","boxplot_1","errorbar_1","normalizerRegistry","normalizer","COMPOSITE_MARK_STYLES","VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX","normalize","isMarkDef","SUNDAY_YEAR","isDateTime","quarter","MONTHS","SHORT_MONTHS","substr","DAYS","SHORT_DAYS","dateTimeExpr","units","droppedDay","duplicate","lowerM","monthIndex","shortM","shortMonthIndex","invalidTimeUnit","normalizeMonth","q","normalizeQuarter","lowerD","dayIndex","shortD","shortDayIndex","normalizeDay","_i","utc","channelHasField","some","hasConditionalFieldDef","isAggregate","getFieldDef","normalizeEncoding","normalizedEncoding","defs","normalizeFieldDef","emptyFieldDef","isValueDef","isConditionalDef","isRanged","fieldDefs","arr","def","condition","mapping","thisArg","init","r1","aggregate_1","bin_1","timeunit_1","type_1","isDiscrete","invalidFieldType","isCount","verbalTitleFormatter","countTitle","getTimeUnitParts","titlecase","functionalTitleFormatter","fn","isConditionalSelection","isRepeatRef","isString","hasConditionalValueDef","isStringFieldDef","isScaleFieldDef","opt","nofn","binSuffix","expr","accessPath","defaultTitleFormatter","fieldTitle","titleFormatter","setTitleFormatter","formatter","defaultType","fieldDefWithoutAggregate","invalidAggregate","normalizeTimeUnit","normalizeBin","fullType","getFullName","invalidFieldTypeForCountAggregate","newType","emptyOrInvalidFieldType","channelCompatibility","compatible","warning","maxbins","resetTitleFormatter","title","primitiveType","primitiveChannelDef","COMPATIBLE","facetChannelShouldBeDiscrete","isNumberFieldDef","isTimeFieldDef","main","logger","Warn","LocalLogger","warns","infos","debugs","info","debug","reset","newLogger","INVALID_SPEC","FIT_NON_SINGLE","CANNOT_FIX_RANGE_STEP_WITH_FIT","cannotProjectOnChannelWithoutField","nearestNotSupportForContinuous","selectionNotFound","SCALE_BINDINGS_CONTINUOUS","noSuchRepeatedValue","CONCAT_CANNOT_SHARE_AXIS","REPEAT_CANNOT_SHARE_AXIS","cannotSetTitleAnchor","unrecognizedParse","differentParse","ancestor","invalidTransformIgnored","NO_FIELDS_NEEDS_AS","markOrFacet","when","discreteChannelCannotEncode","BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL","unclearOrientContinuous","unclearOrientDiscreteOrEmpty","orientOverridden","original","actual","CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN","cannotUseScalePropertyWithNonColor","prop","unaggregateDomainHasNoEffectForRawField","unaggregateDomainWithNonSharedDomainOp","unaggregatedDomainWithLogScale","cannotUseSizeFieldWithBandSize","positionChannel","cannotApplySizeToNonOrientedMark","rangeStepDropped","scaleTypeNotWorkWithChannel","scaleType","defaultScaleType","scaleTypeNotWorkWithFieldDef","scalePropertyNotWorkWithScaleType","propName","scaleTypeNotWorkWithMark","mergeConflictingProperty","propertyOf","v1","v2","independentScaleMeansIndependentGuide","conflictedDomain","domainSortDropped","UNABLE_TO_MERGE_DOMAINS","MORE_THAN_ONE_SORT","INVALID_CHANNEL_FOR_AXIS","cannotStackRangedMark","cannotStackNonLinearScale","stackNonSummativeAggregate","unitName","dayReplacedWithDate","fullTimeUnit","isLogicalOr","or","isLogicalAnd","and","isLogicalNot","not","forEachLeave","normalizeLogicalOperand","Mark","AREA","BAR","LINE","POINT","RECT","RULE","TICK","CIRCLE","SQUARE","GEOSHAPE","MARK_INDEX","isMark","PRIMITIVE_MARKS","PRIMITIVE_MARK_INDEX","isPrimitiveMark","STROKE_CONFIG","FILL_CONFIG","FILL_STROKE_CONFIG","VL_ONLY_MARK_CONFIG_PROPERTIES","VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX","defaultMarkConfig","defaultBarConfig","binSpacing","continuousBandSize","defaultTickConfig","thickness","ScaleType","LINEAR","BIN_LINEAR","LOG","POW","SQRT","TIME","SEQUENTIAL","QUANTILE","QUANTIZE","THRESHOLD","ORDINAL","BIN_ORDINAL","BAND","SCALE_CATEGORY_INDEX","linear","sqrt","bin-linear","sequential","ordinal","bin-ordinal","band","SCALE_TYPES","scaleCompatible","scaleType1","scaleType2","scaleCategory1","scaleCategory2","SCALE_PRECEDENCE_INDEX","scaleTypePrecedence","CONTINUOUS_TO_CONTINUOUS_SCALES","CONTINUOUS_TO_CONTINUOUS_INDEX","CONTINUOUS_DOMAIN_SCALES","CONTINUOUS_DOMAIN_INDEX","DISCRETE_DOMAIN_SCALES","DISCRETE_DOMAIN_INDEX","BIN_SCALES_INDEX","hasContinuousDomain","isContinuousToContinuous","TIME_SCALE_TYPES","hasDiscreteDomain","isBinScale","defaultScaleConfig","textXRangeStep","rangeStep","pointPadding","bandPaddingInner","facetSpacing","minBandSize","minFontSize","maxFontSize","minOpacity","maxOpacity","minSize","minStrokeWidth","maxStrokeWidth","isExtendedScheme","scheme","isSelectionDomain","domain","SCALE_PROPERTY_INDEX","clamp","nice","base","interpolate","paddingInner","paddingOuter","SCALE_PROPERTIES","NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTY_INDEX","NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES","scaleTypeSupportProperty","channelScalePropertyIncompatability","channelSupportScaleType","compositeMark","vlEncoding","stack_1","isFacetSpec","isUnitSpec","isLayerSpec","isRepeatSpec","isConcatSpec","isVConcatSpec","isHConcatSpec","subspec","rest","vconcat","hconcat","height","normalizeLayer","normalizeNonFacetUnit","hasRow","hasColumn","facet","hasX","hasY","hasX2","hasY2","normalizedSpec","normalizeRangedUnit","overlayConfig","overlay","overlayWithLine","overlayWithPoint","stackProps","stack","overlayEncoding","stackFieldChannel","fieldChannel","filled","normalizeOverlay","accumulate","dict","pureFieldDef","hash","vals","fieldDefIndex","isStacked","scale_1","STACK_OFFSET_INDEX","center","isStackOffset","STACKABLE_MARKS","STACK_BY_DEFAULT_MARKS","stackConfig","xDef","yDef","potentialStackedChannel","stackedFieldDef","stackedField","dimensionChannel","dimensionDef","dimensionField","stackBy","sc","cDef","groupbyChannel","impute","TimeUnit","datetime_1","YEAR","MONTH","DAY","DATE","HOURS","MINUTES","SECONDS","MILLISECONDS","YEARMONTH","YEARMONTHDATE","YEARMONTHDATEHOURS","YEARMONTHDATEHOURSMINUTES","YEARMONTHDATEHOURSMINUTESSECONDS","MONTHDATE","HOURSMINUTES","HOURSMINUTESSECONDS","MINUTESSECONDS","SECONDSMILLISECONDS","QUARTER","YEARQUARTER","QUARTERMONTH","YEARQUARTERMONTH","UTCYEAR","UTCMONTH","UTCDAY","UTCDATE","UTCHOURS","UTCMINUTES","UTCSECONDS","UTCMILLISECONDS","UTCYEARMONTH","UTCYEARMONTHDATE","UTCYEARMONTHDATEHOURS","UTCYEARMONTHDATEHOURSMINUTES","UTCYEARMONTHDATEHOURSMINUTESSECONDS","UTCMONTHDATE","UTCHOURSMINUTES","UTCHOURSMINUTESSECONDS","UTCMINUTESSECONDS","UTCSECONDSMILLISECONDS","UTCQUARTER","UTCYEARQUARTER","UTCQUARTERMONTH","UTCYEARQUARTERMONTH","LOCAL_SINGLE_TIMEUNIT_INDEX","TIMEUNIT_PARTS","isLocalSingleTimeUnit","UTC_SINGLE_TIMEUNIT_INDEX","utcyear","utcquarter","utcmonth","utcday","utcdate","utchours","utcminutes","utcseconds","utcmilliseconds","isUtcSingleTimeUnit","UTC_MULTI_TIMEUNIT_INDEX","utcyearquarter","utcyearquartermonth","utcyearmonth","utcyearmonthdate","utcyearmonthdatehours","utcyearmonthdatehoursminutes","utcyearmonthdatehoursminutesseconds","utcquartermonth","utcmonthdate","utchoursminutes","utchoursminutesseconds","utcminutesseconds","utcsecondsmilliseconds","UTC_TIMEUNIT_INDEX","isUTCTimeUnit","getLocalTimeUnit","TIMEUNIT_INDEX","yearquarter","yearquartermonth","yearmonth","yearmonthdate","yearmonthdatehours","yearmonthdatehoursminutes","yearmonthdatehoursminutesseconds","quartermonth","monthdate","hoursminutes","hoursminutesseconds","minutesseconds","secondsmilliseconds","TIMEUNITS","isTimeUnit","SET_DATE_METHOD","dateMethods","singleUnit","isUtc","rawSetDateMethod","setDateMethod","getDateMethod","containsTimeUnit","convert","unit","isUTC","TIMEUNIT_PARTS_1","timeUnitPart","getDateMethod_1","parts","part","fieldExpr","fieldRef","dateExpr","tu","formatExpression","shortTimeLabels","isUTCScale","dateComponents","expression","hasYear","timeComponents","dateTimeComponents","Type","QUANTITATIVE","TEMPORAL","NOMINAL","LATITUDE","LONGITUDE","GEOJSON","TYPE_INDEX","quantitative","temporal","nominal","latitude","longitude","geojson","isType","stableStringify","logical_1","vega_util_2","without","excludedItems","mergeDeep","dest","src","src_1","deepMerge_","isObject","truncate","stringValue","splitAccessPath","pick","props","copy","props_1","omit","props_2","h","union","other","flatten","arrays","unique","results","values_1","val","differ","hasIntersection","isNumeric","num","differArray","_vals","varName","alphanumericS","logicalExpr","cb","deleteNestedProperty","orderedProps","isEmpty","pop","path","accessor","fields","fname","accessorFields","$","Function","one","truthy","falsy","method","input","console","peek","toNumber","exp","log$1","pan","delta","lift","ground","dd","zoom","anchor","da","isFunction","NULL","isDate","repeat","reps","defaultParser","accessorName","None","Info","Debug","panLinear","panLog","panPow","zoomLinear","zoomLog","zoomPow","orders","lt","gt","idx","ord","constant","debounce","delay","handler","tid","evt","clearTimeout","setTimeout","extend","len","extentIndex","fastmap","delete","clear","clean","inherits","proto","isRegExp","flat","array0","array1","output","n0","n1","merged","padchar","toBoolean","toDate","parser","ellipsis","visitArray","visitor","vega","d3_format_1","d3_time_1","d3_time_format_1","autoNumberFormat","autoTimeFormat","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","customFormat","autoFormat","d3_selection_1","options_1","parseOption_1","supplementField_1","tooltipDisplay_1","tooltipPromise","tooltipActive","vgView","options","shouldShowTooltip","cancelPromise","DELAY","updatePosition","onMove","clearData","clearColorTheme","clearPosition","onDisappear","tooltipPlaceholder","getTooltipPlaceholder","tooltipData","getTooltipData","bindData","updateColorTheme","onAppear","_facetID","copyOptions","newOptions","showAllFields","isComposition","destroy","vegaLite","vlSpec","supplementOptions","formatFieldValue_1","prepareCustomFieldsData","itemData","fieldOption","titleStr","titleFn","valueAccessor","getValue","formattedValue","rawValue","render","accessors","firstAccessor","shift","prepareAllFieldsData","fieldOptions","optionField","removeFields","dataMap","removeKeys","removeDuplicateTimeFields","optFields","optField","removeOriginalTemporalField","combineBinFields","binFieldRange","binFieldStart","binFieldMid","binFieldEnd","startValue","endValue","dropFieldsForLineArea","marktype","quanKeys","sortStr","sortFn","localeCompare","vl","spec_1","formatTypeMap","getFieldOption","fieldOptions_1","fieldOptions_2","fieldOptions_3","fieldDefs_1","supplementFieldOption","supplementedFieldOption","originalTemporalField","fieldDefs_2","items","defaultConfig","defaultTitle","legend","numberFormat","supplementedFields","tooltipRows","sel","offsetX","offsetY","tooltipHeight","innerHeight","tooltipWidth","innerWidth","colorTheme"],"mappings":"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","file":"build/vega-tooltip.min.js.map","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","// https://d3js.org/d3-format/ Version 1.2.2. Copyright 2018 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n};\n\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-selection/ Version 1.3.0. Copyright 2018 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nfunction namespace(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nfunction creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nfunction none() {}\n\nfunction selector(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\nfunction selection_select(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction empty() {\n  return [];\n}\n\nfunction selectorAll(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nfunction selection_selectAll(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nfunction selection_filter(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction sparse(update) {\n  return new Array(update.length);\n}\n\nfunction selection_enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction selection_data(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nfunction selection_exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nfunction selection_merge(selection$$1) {\n\n  for (var groups0 = this._groups, groups1 = selection$$1._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nfunction selection_order() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction selection_sort(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction selection_call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nfunction selection_nodes() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n\nfunction selection_node() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nfunction selection_size() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n\nfunction selection_empty() {\n  return !this.node();\n}\n\nfunction selection_each(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nfunction selection_attr(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nfunction defaultView(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nfunction selection_style(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nfunction selection_property(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nfunction selection_classed(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_text(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_html(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nfunction selection_raise() {\n  return this.each(raise);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nfunction selection_lower() {\n  return this.each(lower);\n}\n\nfunction selection_append(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nfunction selection_insert(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nfunction selection_remove() {\n  return this.each(remove);\n}\n\nfunction selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nfunction selection_clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\nfunction selection_datum(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nfunction selection_on(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nfunction selection_dispatch(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nfunction select(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nfunction create(name) {\n  return select(creator(name).call(document.documentElement));\n}\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction sourceEvent() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n\nfunction point(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n\nfunction mouse(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n\nfunction selectAll(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n\nfunction touch(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n\nfunction touches(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n\nexports.create = create;\nexports.creator = creator;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.clientPoint = point;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-time-format/ Version 2.1.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);\n          week = d3Time.utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);\n          week = d3Time.timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);\n  return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);\n  return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale;\n\n\n\n\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.timeFormat = locale.format;\n  exports.timeParse = locale.parse;\n  exports.utcFormat = locale.utcFormat;\n  exports.utcParse = locale.utcParse;\n  return locale;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","// https://d3js.org/d3-time/ Version 1.0.8. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar t0 = new Date;\nvar t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n","exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n","var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n","import {contains, Flag, flagKeys, toSet} from './util';\n\n\nexport type AggregateOp = 'argmax' | 'argmin' | 'average' | 'count'\n  | 'distinct' | 'max' | 'mean' | 'median' | 'min' | 'missing'\n  | 'q1' | 'q3' | 'ci0' | 'ci1' | 'stdev' | 'stdevp' | 'sum' | 'valid' | 'values' | 'variance'\n  | 'variancep';\n\n\nconst AGGREGATE_OP_INDEX: Flag<AggregateOp> = {\n  values: 1,\n  count: 1,\n  valid: 1,\n  missing: 1,\n  distinct: 1,\n  sum: 1,\n  mean: 1,\n  average: 1,\n  variance: 1,\n  variancep: 1,\n  stdev: 1,\n  stdevp: 1,\n  median: 1,\n  q1: 1,\n  q3: 1,\n  ci0: 1,\n  ci1: 1,\n  min: 1,\n  max: 1,\n  argmin: 1,\n  argmax: 1,\n};\n\nexport const AGGREGATE_OPS = flagKeys(AGGREGATE_OP_INDEX);\n\nexport function isAggregateOp(a: string): a is AggregateOp {\n  return !!AGGREGATE_OP_INDEX[a];\n}\n\nexport const COUNTING_OPS: AggregateOp[] = ['count', 'valid', 'missing', 'distinct'];\n\nexport function isCountingAggregateOp(aggregate: string): boolean {\n  return aggregate && contains(COUNTING_OPS, aggregate);\n}\n\n/** Additive-based aggregation operations.  These can be applied to stack. */\nexport const SUM_OPS: AggregateOp[] = [\n    'count',\n    'sum',\n    'distinct',\n    'valid',\n    'missing'\n];\n\n/**\n * Aggregation operators that always produce values within the range [domainMin, domainMax].\n */\nexport const SHARED_DOMAIN_OPS: AggregateOp[] = [\n    'mean',\n    'average',\n    'median',\n    'q1',\n    'q3',\n    'min',\n    'max',\n];\n\nexport const SHARED_DOMAIN_OP_INDEX = toSet(SHARED_DOMAIN_OPS);\n","import {Channel, COLOR, COLUMN, OPACITY, ROW, SHAPE, SIZE} from './channel';\nimport {isBoolean, keys} from './util';\n\n\nexport interface BaseBin {\n  /**\n   * The number base to use for automatic bin determination (default is base 10).\n   *\n   * __Default value:__ `10`\n   *\n   */\n  base?: number;\n  /**\n   * An exact step size to use between bins.\n   *\n   * __Note:__ If provided, options such as maxbins will be ignored.\n   */\n  step?: number;\n  /**\n   * An array of allowable step sizes to choose from.\n   * @minItems 1\n   */\n  steps?: number[];\n  /**\n   * A minimum allowable step size (particularly useful for integer values).\n   */\n  minstep?: number;\n  /**\n   * Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints.\n   *\n   * __Default value:__ `[5, 2]`\n   *\n   * @minItems 1\n   */\n  divide?: number[];\n  /**\n   * Maximum number of bins.\n   *\n   * __Default value:__ `6` for `row`, `column` and `shape` channels; `10` for other channels\n   *\n   * @minimum 2\n   */\n  maxbins?: number;\n  /**\n   * If true (the default), attempts to make the bin boundaries use human-friendly boundaries, such as multiples of ten.\n   */\n  nice?: boolean;\n}\n\n\n/**\n * Binning properties or boolean flag for determining whether to bin data or not.\n */\nexport interface BinParams extends BaseBin {\n  /**\n   * A two-element (`[min, max]`) array indicating the range of desired bin values.\n   * @minItems 2\n   * @maxItems 2\n   */\n  extent?: number[];  // VgBinTransform uses a different extent so we need to pull this out.\n}\n\nexport function binToString(bin: BinParams | boolean) {\n  if (isBoolean(bin)) {\n    return 'bin';\n  }\n  return 'bin' + keys(bin).map(p => `_${p}_${bin[p]}`.replace(',', '_')).join('');\n}\n\nexport function autoMaxBins(channel: Channel): number {\n  switch (channel) {\n    case ROW:\n    case COLUMN:\n    case SIZE:\n    case COLOR:\n    case OPACITY:\n      // Facets and Size shouldn't have too many bins\n      // We choose 6 like shape to simplify the rule\n    case SHAPE:\n      return 6; // Vega's \"shape\" has 6 distinct values\n    default:\n      return 10;\n  }\n}\n","/*\n * Constants and utilities for encoding channels (Visual variables)\n * such as 'x', 'y', 'color'.\n */\n\nimport {RangeType} from './compile/scale/type';\nimport {Encoding} from './encoding';\nimport {FacetMapping} from './facet';\nimport {Mark} from './mark';\nimport {Flag, flagKeys} from './util';\n\nexport namespace Channel {\n  // Facet\n  export const ROW: 'row' = 'row';\n  export const COLUMN: 'column' = 'column';\n\n  // Position\n  export const X: 'x' = 'x';\n  export const Y: 'y' = 'y';\n  export const X2: 'x2' = 'x2';\n  export const Y2: 'y2' = 'y2';\n\n  // Mark property with scale\n  export const COLOR: 'color' = 'color';\n  export const SHAPE: 'shape' = 'shape';\n  export const SIZE: 'size' = 'size';\n  export const OPACITY: 'opacity' = 'opacity';\n\n  // Non-scale channel\n  export const TEXT: 'text' = 'text';\n  export const ORDER: 'order' = 'order';\n  export const DETAIL: 'detail' = 'detail';\n  export const TOOLTIP: 'tooltip' = 'tooltip';\n  export const HREF: 'href' = 'href';\n}\n\nexport type Channel = keyof Encoding<any> | keyof FacetMapping<any>;\n\nexport const X = Channel.X;\nexport const Y = Channel.Y;\nexport const X2 = Channel.X2;\nexport const Y2 = Channel.Y2;\nexport const ROW = Channel.ROW;\nexport const COLUMN = Channel.COLUMN;\nexport const SHAPE = Channel.SHAPE;\nexport const SIZE = Channel.SIZE;\nexport const COLOR = Channel.COLOR;\nexport const TEXT = Channel.TEXT;\nexport const DETAIL = Channel.DETAIL;\nexport const ORDER = Channel.ORDER;\nexport const OPACITY = Channel.OPACITY;\nexport const TOOLTIP = Channel.TOOLTIP;\nexport const HREF = Channel.HREF;\n\nconst UNIT_CHANNEL_INDEX: Flag<keyof Encoding<any>> = {\n  x: 1,\n  y: 1,\n  x2: 1,\n  y2: 1,\n  size: 1,\n  shape: 1,\n  color: 1,\n  order: 1,\n  opacity: 1,\n  text: 1,\n  detail: 1,\n  tooltip: 1,\n  href: 1,\n};\n\nconst FACET_CHANNEL_INDEX: Flag<keyof FacetMapping<any>> = {\n  row: 1,\n  column: 1\n};\n\nconst CHANNEL_INDEX = {\n  ...UNIT_CHANNEL_INDEX,\n  ...FACET_CHANNEL_INDEX\n};\n\nexport const CHANNELS = flagKeys(CHANNEL_INDEX);\n\nconst {order: _o, detail: _d, ...SINGLE_DEF_CHANNEL_INDEX} = CHANNEL_INDEX;\n/**\n * Channels that cannot have an array of channelDef.\n * model.fieldDef, getFieldDef only work for these channels.\n *\n * (The only two channels that can have an array of channelDefs are \"detail\" and \"order\".\n * Since there can be multiple fieldDefs for detail and order, getFieldDef/model.fieldDef\n * are not applicable for them.  Similarly, selection projection won't work with \"detail\" and \"order\".)\n */\n\nexport const SINGLE_DEF_CHANNELS: SingleDefChannel[] = flagKeys(SINGLE_DEF_CHANNEL_INDEX);\n\n// Using the following line leads to TypeError: Cannot read property 'elementTypes' of undefined\n// when running the schema generator\n// export type SingleDefChannel = typeof SINGLE_DEF_CHANNELS[0];\nexport type SingleDefChannel = 'x' | 'y' | 'x2' | 'y2' | 'row' | 'column' | 'size' | 'shape' | 'color' | 'opacity' | 'text' | 'tooltip' | 'href';\n\n\n\nexport function isChannel(str: string): str is Channel {\n  return !!CHANNEL_INDEX[str];\n}\n\n// CHANNELS without COLUMN, ROW\nexport const UNIT_CHANNELS = flagKeys(UNIT_CHANNEL_INDEX);\n\n\n// NONPOSITION_CHANNELS = UNIT_CHANNELS without X, Y, X2, Y2;\nconst {\n  x: _x, y: _y,\n  // x2 and y2 share the same scale as x and y\n  x2: _x2, y2: _y2,\n  // The rest of unit channels then have scale\n  ...NONPOSITION_CHANNEL_INDEX\n} = UNIT_CHANNEL_INDEX;\n\nexport const NONPOSITION_CHANNELS = flagKeys(NONPOSITION_CHANNEL_INDEX);\nexport type NonPositionChannel = typeof NONPOSITION_CHANNELS[0];\n\n// POSITION_SCALE_CHANNELS = X and Y;\nconst POSITION_SCALE_CHANNEL_INDEX: {x:1, y:1} = {x:1, y:1};\nexport const POSITION_SCALE_CHANNELS = flagKeys(POSITION_SCALE_CHANNEL_INDEX);\nexport type PositionScaleChannel = typeof POSITION_SCALE_CHANNELS[0];\n\n// NON_POSITION_SCALE_CHANNEL = SCALE_CHANNELS without X, Y\nconst {\n  // x2 and y2 share the same scale as x and y\n  // text and tooltip have format instead of scale,\n  // href has neither format, nor scale\n  text: _t, tooltip: _tt, href: _hr,\n  // detail and order have no scale\n  detail: _dd, order: _oo,\n  ...NONPOSITION_SCALE_CHANNEL_INDEX\n} = NONPOSITION_CHANNEL_INDEX;\nexport const NONPOSITION_SCALE_CHANNELS = flagKeys(NONPOSITION_SCALE_CHANNEL_INDEX);\nexport type NonPositionScaleChannel = typeof NONPOSITION_SCALE_CHANNELS[0];\n\n// Declare SCALE_CHANNEL_INDEX\nconst SCALE_CHANNEL_INDEX = {\n  ...POSITION_SCALE_CHANNEL_INDEX,\n  ...NONPOSITION_SCALE_CHANNEL_INDEX\n};\n\n/** List of channels with scales */\nexport const SCALE_CHANNELS = flagKeys(SCALE_CHANNEL_INDEX);\nexport type ScaleChannel = typeof SCALE_CHANNELS[0];\n\nexport function isScaleChannel(channel: Channel): channel is ScaleChannel {\n  return !!SCALE_CHANNEL_INDEX[channel];\n}\n\nexport interface SupportedMark {\n  point?: boolean;\n  tick?: boolean;\n  rule?: boolean;\n  circle?: boolean;\n  square?: boolean;\n  bar?: boolean;\n  rect?: boolean;\n  line?: boolean;\n  geoshape?: boolean;\n  area?: boolean;\n  text?: boolean;\n}\n\n/**\n * Return whether a channel supports a particular mark type.\n * @param channel  channel name\n * @param mark the mark type\n * @return whether the mark supports the channel\n */\nexport function supportMark(channel: Channel, mark: Mark) {\n  return mark in getSupportedMark(channel);\n}\n\n/**\n * Return a dictionary showing whether a channel supports mark type.\n * @param channel\n * @return A dictionary mapping mark types to boolean values.\n */\nexport function getSupportedMark(channel: Channel): SupportedMark {\n  switch (channel) {\n    case COLOR:\n    case DETAIL:\n    case TOOLTIP:\n    case HREF:\n    case ORDER:    // TODO: revise (order might not support rect, which is not stackable?)\n    case OPACITY:\n    case ROW:\n    case COLUMN:\n      return { // all marks\n        point: true, tick: true, rule: true, circle: true, square: true,\n        bar: true, rect: true, line: true, area: true, text: true, geoshape: true\n      };\n    case X:\n    case Y:\n      return { // all marks except geoshape. geoshape does not use X, Y -- it uses a projection\n        point: true, tick: true, rule: true, circle: true, square: true,\n        bar: true, rect: true, line: true, area: true, text: true\n      };\n    case X2:\n    case Y2:\n      return {\n        rule: true, bar: true, rect: true, area: true\n      };\n    case SIZE:\n      return {\n        point: true, tick: true, rule: true, circle: true, square: true,\n        bar: true, text: true, line: true\n      };\n    case SHAPE:\n      return {point: true, geoshape: true};\n    case TEXT:\n      return {text: true};\n  }\n}\n\nexport function rangeType(channel: Channel): RangeType {\n  switch (channel) {\n    case X:\n    case Y:\n    case SIZE:\n    case OPACITY:\n    // X2 and Y2 use X and Y scales, so they similarly have continuous range.\n    case X2:\n    case Y2:\n      return 'continuous';\n\n    case ROW:\n    case COLUMN:\n    case SHAPE:\n    // TEXT, TOOLTIP, and HREF have no scale but have discrete output\n    case TEXT:\n    case TOOLTIP:\n    case HREF:\n      return 'discrete';\n\n    // Color can be either continuous or discrete, depending on scale type.\n    case COLOR:\n      return 'flexible';\n\n    // No scale, no range type.\n    case DETAIL:\n    case ORDER:\n      return undefined;\n  }\n  /* istanbul ignore next: should never reach here. */\n  throw new Error('getSupportedRole not implemented for ' + channel);\n}\n","import {isNumber} from 'vega-util';\nimport {Channel} from '../channel';\nimport {Config} from '../config';\nimport {reduce} from '../encoding';\nimport {AggregatedFieldDef, BinTransform, CalculateTransform, TimeUnitTransform} from '../transform';\nimport {Encoding, forEach} from './../encoding';\nimport {Field, FieldDef, isContinuous, isFieldDef, PositionFieldDef, vgField} from './../fielddef';\nimport * as log from './../log';\nimport {MarkConfig} from './../mark';\nimport {GenericUnitSpec, LayerSpec} from './../spec';\nimport {Orient} from './../vega.schema';\nimport {getMarkSpecificConfigMixins} from './common';\n\n\nexport const BOXPLOT: 'box-plot' = 'box-plot';\nexport type BOXPLOT = typeof BOXPLOT;\nexport type BoxPlotStyle = 'boxWhisker' | 'box' | 'boxMid';\n\n\nexport interface BoxPlotDef {\n  /**\n   * Type of the mark.  For box plots, this should always be `\"box-plot\"`.\n   * [boxplot](compositemark.html#boxplot)\n   */\n  type: BOXPLOT;\n\n  /**\n   * Orientation of the box plot.  This is normally automatically determined, but can be specified when the orientation is ambiguous and cannot be automatically determined.\n   */\n  orient?: Orient;\n\n  /**\n   * Extent is used to determine where the whiskers extend to. The options are\n   * - `\"min-max\": min and max are the lower and upper whiskers respectively.\n   * - `\"number\": A scalar (integer or floating point number) that will be multiplied by the IQR and the product will be added to the third quartile to get the upper whisker and subtracted from the first quartile to get the lower whisker.\n   * __Default value:__ `\"min-max\"`.\n   */\n  extent?: 'min-max' | number;\n}\n\nexport function isBoxPlotDef(mark: BOXPLOT | BoxPlotDef): mark is BoxPlotDef {\n  return !!mark['type'];\n}\n\nexport const BOXPLOT_STYLES: BoxPlotStyle[] = ['boxWhisker', 'box', 'boxMid'];\n\nexport interface BoxPlotConfig extends MarkConfig {\n  /** Size of the box and mid tick of a box plot */\n  size?: number;\n}\n\nexport interface BoxPlotConfigMixins {\n  /**\n   * Box Config\n   * @hide\n   */\n  box?: BoxPlotConfig;\n\n  /**\n   * @hide\n   */\n  boxWhisker?: MarkConfig;\n\n  /**\n   * @hide\n   */\n  boxMid?: MarkConfig;\n}\n\nexport const VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX: {\n  [k in keyof BoxPlotConfigMixins]?: (keyof BoxPlotConfigMixins[k])[]\n} = {\n  box: ['size', 'color'],\n  boxWhisker: ['color'],\n  boxMid: ['color']\n};\n\nconst supportedChannels: Channel[] = ['x', 'y', 'color', 'detail', 'opacity', 'size'];\nexport function filterUnsupportedChannels(spec: GenericUnitSpec<Encoding<string>, BOXPLOT | BoxPlotDef>): GenericUnitSpec<Encoding<string>, BOXPLOT | BoxPlotDef> {\n  return {\n    ...spec,\n    encoding: reduce(spec.encoding, (newEncoding, fieldDef, channel) => {\n      if (supportedChannels.indexOf(channel) > -1) {\n        newEncoding[channel] = fieldDef;\n      } else {\n        log.warn(log.message.incompatibleChannel(channel, BOXPLOT));\n      }\n      return newEncoding;\n    }, {}),\n  };\n}\n\nexport function normalizeBoxPlot(spec: GenericUnitSpec<Encoding<string>, BOXPLOT | BoxPlotDef>, config: Config): LayerSpec {\n  spec = filterUnsupportedChannels(spec);\n  // TODO: use selection\n  const {mark, encoding, selection, projection: _p, ...outerSpec} = spec;\n\n  let kIQRScalar: number = undefined;\n  if (isBoxPlotDef(mark)) {\n    if (mark.extent) {\n      if(isNumber(mark.extent)) {\n        kIQRScalar = mark.extent;\n      }\n    }\n  }\n\n  const orient: Orient = boxOrient(spec);\n  const {transform, continuousAxisChannelDef, continuousAxis, encodingWithoutContinuousAxis} = boxParams(spec, orient, kIQRScalar);\n\n  const {color, size, ...encodingWithoutSizeColorAndContinuousAxis} = encodingWithoutContinuousAxis;\n\n  // Size encoding or the default config.box.size is applied to box and boxMid\n  const sizeMixins = size ? {size} : getMarkSpecificConfigMixins(config.box, 'size');\n\n  const continuousAxisScaleAndAxis = {};\n  if (continuousAxisChannelDef.scale) {\n    continuousAxisScaleAndAxis['scale'] = continuousAxisChannelDef.scale;\n  }\n  if (continuousAxisChannelDef.axis) {\n    continuousAxisScaleAndAxis['axis'] = continuousAxisChannelDef.axis;\n  }\n\n  return {\n    ...outerSpec,\n    transform,\n    layer: [\n      { // lower whisker\n        mark: {\n          type: 'rule',\n          style: 'boxWhisker'\n        },\n        encoding: {\n          [continuousAxis]: {\n            field: 'lower_whisker_' + continuousAxisChannelDef.field,\n            type: continuousAxisChannelDef.type,\n            ...continuousAxisScaleAndAxis\n          },\n          [continuousAxis + '2']: {\n            field: 'lower_box_' + continuousAxisChannelDef.field,\n            type: continuousAxisChannelDef.type\n          },\n          ...encodingWithoutSizeColorAndContinuousAxis,\n          ...getMarkSpecificConfigMixins(config.boxWhisker, 'color')\n        }\n      }, { // upper whisker\n        mark: {\n          type: 'rule',\n          style: 'boxWhisker'\n        },\n        encoding: {\n          [continuousAxis]: {\n            field: 'upper_box_' + continuousAxisChannelDef.field,\n            type: continuousAxisChannelDef.type\n          },\n          [continuousAxis + '2']: {\n            field: 'upper_whisker_' + continuousAxisChannelDef.field,\n            type: continuousAxisChannelDef.type\n          },\n          ...encodingWithoutSizeColorAndContinuousAxis,\n          ...getMarkSpecificConfigMixins(config.boxWhisker, 'color')\n        }\n      }, { // box (q1 to q3)\n        ...(selection ? {selection} : {}),\n        mark: {\n          type: 'bar',\n          style: 'box'\n        },\n        encoding: {\n          [continuousAxis]: {\n            field: 'lower_box_' + continuousAxisChannelDef.field,\n            type: continuousAxisChannelDef.type\n          },\n          [continuousAxis + '2']: {\n            field: 'upper_box_' + continuousAxisChannelDef.field,\n            type: continuousAxisChannelDef.type\n          },\n          ...encodingWithoutContinuousAxis,\n          ...(encodingWithoutContinuousAxis.color ? {} : getMarkSpecificConfigMixins(config.box, 'color')),\n          ...sizeMixins,\n        }\n      }, { // mid tick\n        mark: {\n          type: 'tick',\n          style: 'boxMid'\n        },\n        encoding: {\n          [continuousAxis]: {\n            field: 'mid_box_' + continuousAxisChannelDef.field,\n            type: continuousAxisChannelDef.type\n          },\n          ...encodingWithoutSizeColorAndContinuousAxis,\n          ...getMarkSpecificConfigMixins(config.boxMid, 'color'),\n          ...sizeMixins,\n        }\n      }\n    ]\n  };\n}\n\nfunction boxOrient(spec: GenericUnitSpec<Encoding<Field>, BOXPLOT | BoxPlotDef>): Orient {\n  const {mark: mark, encoding: encoding, projection: _p, ..._outerSpec} = spec;\n\n  if (isFieldDef(encoding.x) && isContinuous(encoding.x)) {\n    // x is continuous\n    if (isFieldDef(encoding.y) && isContinuous(encoding.y)) {\n      // both x and y are continuous\n      if (encoding.x.aggregate === undefined && encoding.y.aggregate === BOXPLOT) {\n        return 'vertical';\n      } else if (encoding.y.aggregate === undefined && encoding.x.aggregate === BOXPLOT) {\n        return 'horizontal';\n      } else if (encoding.x.aggregate === BOXPLOT && encoding.y.aggregate === BOXPLOT) {\n        throw new Error('Both x and y cannot have aggregate');\n      } else {\n        if (isBoxPlotDef(mark) && mark.orient) {\n          return mark.orient;\n        }\n\n        // default orientation = vertical\n        return 'vertical';\n      }\n    }\n\n    // x is continuous but y is not\n    return 'horizontal';\n  } else if (isFieldDef(encoding.y) && isContinuous(encoding.y)) {\n    // y is continuous but x is not\n    return 'vertical';\n  } else {\n    // Neither x nor y is continuous.\n    throw new Error('Need a valid continuous axis for boxplots');\n  }\n}\n\n\nfunction boxContinousAxis(spec: GenericUnitSpec<Encoding<string>, BOXPLOT | BoxPlotDef>, orient: Orient) {\n  const {mark: mark, encoding: encoding, projection: _p, ..._outerSpec} = spec;\n\n  let continuousAxisChannelDef: PositionFieldDef<string>;\n  let continuousAxis: 'x' | 'y';\n\n  if (orient === 'vertical') {\n    continuousAxis = 'y';\n    continuousAxisChannelDef = encoding.y as FieldDef<string>; // Safe to cast because if y is not continuous fielddef, the orient would not be vertical.\n  } else {\n    continuousAxis = 'x';\n    continuousAxisChannelDef = encoding.x as FieldDef<string>; // Safe to cast because if x is not continuous fielddef, the orient would not be horizontal.\n  }\n\n  if (continuousAxisChannelDef && continuousAxisChannelDef.aggregate) {\n    const {aggregate, ...continuousAxisWithoutAggregate} = continuousAxisChannelDef;\n    if (aggregate !== BOXPLOT) {\n      log.warn(`Continuous axis should not have customized aggregation function ${aggregate}`);\n    }\n    continuousAxisChannelDef = continuousAxisWithoutAggregate;\n  }\n\n  return {\n    continuousAxisChannelDef,\n    continuousAxis\n  };\n}\n\nfunction boxParams(spec: GenericUnitSpec<Encoding<string>, BOXPLOT | BoxPlotDef>, orient: Orient, kIQRScalar: 'min-max' | number) {\n\n  const {continuousAxisChannelDef, continuousAxis} = boxContinousAxis(spec, orient);\n  const encoding = spec.encoding;\n\n  const isMinMax = kIQRScalar === undefined;\n  const aggregate: AggregatedFieldDef[] = [\n    {\n      op: 'q1',\n      field: continuousAxisChannelDef.field,\n      as: 'lower_box_' + continuousAxisChannelDef.field\n    },\n    {\n      op: 'q3',\n      field: continuousAxisChannelDef.field,\n      as: 'upper_box_' + continuousAxisChannelDef.field\n    },\n    {\n      op: 'median',\n      field: continuousAxisChannelDef.field,\n      as: 'mid_box_' + continuousAxisChannelDef.field\n    }\n  ];\n  let postAggregateCalculates: CalculateTransform[] = [];\n\n  aggregate.push({\n    op: 'min',\n    field: continuousAxisChannelDef.field,\n    as: (isMinMax ? 'lower_whisker_' : 'min_') + continuousAxisChannelDef.field\n  });\n  aggregate.push({\n    op: 'max',\n    field: continuousAxisChannelDef.field,\n    as:  (isMinMax ? 'upper_whisker_' : 'max_') + continuousAxisChannelDef.field\n  });\n\n  if (!isMinMax) {\n    postAggregateCalculates = [\n      {\n        calculate: `datum.upper_box_${continuousAxisChannelDef.field} - datum.lower_box_${continuousAxisChannelDef.field}`,\n        as: 'iqr_' + continuousAxisChannelDef.field\n      },\n      {\n        calculate: `min(datum.upper_box_${continuousAxisChannelDef.field} + datum.iqr_${continuousAxisChannelDef.field} * ${kIQRScalar}, datum.max_${continuousAxisChannelDef.field})`,\n        as: 'upper_whisker_' + continuousAxisChannelDef.field\n      },\n      {\n        calculate: `max(datum.lower_box_${continuousAxisChannelDef.field} - datum.iqr_${continuousAxisChannelDef.field} * ${kIQRScalar}, datum.min_${continuousAxisChannelDef.field})`,\n        as: 'lower_whisker_' + continuousAxisChannelDef.field\n      }\n    ];\n  }\n\n  const groupby: string[] = [];\n  const bins: BinTransform[] = [];\n  const timeUnits: TimeUnitTransform[] = [];\n\n  const encodingWithoutContinuousAxis: Encoding<string> = {};\n  forEach(encoding, (channelDef, channel) => {\n    if (channel === continuousAxis) {\n      // Skip continuous axis as we already handle it separately\n      return;\n    }\n    if (isFieldDef(channelDef)) {\n      if (channelDef.aggregate && channelDef.aggregate !== BOXPLOT) {\n        aggregate.push({\n          op: channelDef.aggregate,\n          field: channelDef.field,\n          as: vgField(channelDef)\n        });\n      } else if (channelDef.aggregate === undefined) {\n        const transformedField = vgField(channelDef);\n\n        // Add bin or timeUnit transform if applicable\n        const bin = channelDef.bin;\n        if (bin) {\n          const {field} = channelDef;\n          bins.push({bin, field, as: transformedField});\n        } else if (channelDef.timeUnit) {\n          const {timeUnit, field} = channelDef;\n          timeUnits.push({timeUnit, field, as: transformedField});\n        }\n\n        groupby.push(transformedField);\n      }\n      // now the field should refer to post-transformed field instead\n      encodingWithoutContinuousAxis[channel] = {\n        field: vgField(channelDef),\n        type: channelDef.type\n      };\n    } else {\n      // For value def, just copy\n      encodingWithoutContinuousAxis[channel] = encoding[channel];\n    }\n  });\n\n  return {\n    transform: [].concat(\n      bins,\n      timeUnits,\n      [{aggregate, groupby}],\n      postAggregateCalculates\n    ),\n    continuousAxisChannelDef,\n    continuousAxis,\n    encodingWithoutContinuousAxis\n  };\n}\n","import {NonPositionChannel} from '../channel';\nimport {MarkConfig} from '../mark';\n\nexport function getMarkSpecificConfigMixins(markSpecificConfig: MarkConfig, channel: NonPositionChannel) {\n  const value = markSpecificConfig[channel];\n  return value !== undefined ? {[channel]: {value}} : {};\n}\n","import {Field} from '../fielddef';\nimport {Encoding} from './../encoding';\nimport {GenericUnitSpec, LayerSpec} from './../spec';\n\n\nexport const ERRORBAR: 'error-bar' = 'error-bar';\nexport type ERRORBAR = typeof ERRORBAR;\n\nexport function normalizeErrorBar(spec: GenericUnitSpec<Encoding<Field>, ERRORBAR>): LayerSpec {\n  // TODO: use selection\n  const {mark: _m, selection: _sel, projection: _p, encoding, ...outerSpec} = spec;\n  const {size: _s, ...encodingWithoutSize} = encoding;\n  const {x2: _x2, y2: _y2, ...encodingWithoutX2Y2} = encoding;\n  const {x: _x, y: _y, ...encodingWithoutX_X2_Y_Y2} = encodingWithoutX2Y2;\n\n  if (!encoding.x2 && !encoding.y2) {\n    throw new Error('Neither x2 or y2 provided');\n  }\n\n  return {\n    ...outerSpec,\n    layer: [\n      {\n        mark: 'rule',\n        encoding: encodingWithoutSize\n      },{ // Lower tick\n        mark: 'tick',\n        encoding: encodingWithoutX2Y2\n      }, { // Upper tick\n        mark: 'tick',\n        encoding: encoding.x2 ? {\n          x: encoding.x2,\n          y: encoding.y,\n          ...encodingWithoutX_X2_Y_Y2\n        } : {\n          x: encoding.x,\n          y: encoding.y2,\n          ...encodingWithoutX_X2_Y_Y2\n        }\n      }\n    ]\n  };\n}\n","import {Config} from './../config';\nimport {AnyMark, isMarkDef} from './../mark';\nimport {GenericUnitSpec, LayerSpec} from './../spec';\nimport {BOXPLOT, BOXPLOT_STYLES, BoxPlotConfigMixins, BoxPlotDef, normalizeBoxPlot, VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX} from './boxplot';\nimport {ERRORBAR, normalizeErrorBar} from './errorbar';\n\n\nexport {BoxPlotConfig} from './boxplot';\nexport type UnitNormalizer = (spec: GenericUnitSpec<any, any>, config: Config)=> LayerSpec;\n\n/**\n * Registry index for all composite mark's normalizer\n */\nconst normalizerRegistry: {[mark: string]: UnitNormalizer} = {};\n\nexport function add(mark: string, normalizer: UnitNormalizer) {\n  normalizerRegistry[mark] = normalizer;\n}\n\nexport function remove(mark: string) {\n  delete normalizerRegistry[mark];\n}\n\nexport type CompositeMark = BOXPLOT | ERRORBAR;\n\nexport type CompositeMarkDef = BoxPlotDef;\n\nexport type CompositeAggregate = BOXPLOT;\n\nexport const COMPOSITE_MARK_STYLES = BOXPLOT_STYLES;\nexport type CompositeMarkStyle = typeof COMPOSITE_MARK_STYLES[0];\n\nexport interface CompositeMarkConfigMixins extends BoxPlotConfigMixins {}\n\nexport const VL_ONLY_COMPOSITE_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = {\n  ...VL_ONLY_BOXPLOT_CONFIG_PROPERTY_INDEX\n};\n\nadd(BOXPLOT, normalizeBoxPlot);\nadd(ERRORBAR, normalizeErrorBar);\n\n/**\n * Transform a unit spec with composite mark into a normal layer spec.\n */\nexport function normalize(\n    // This GenericUnitSpec has any as Encoding because unit specs with composite mark can have additional encoding channels.\n    spec: GenericUnitSpec<any, AnyMark>,\n    config: Config\n  ): LayerSpec {\n\n  const mark = isMarkDef(spec.mark) ? spec.mark.type : spec.mark;\n  const normalizer = normalizerRegistry[mark];\n  if (normalizer) {\n    return normalizer(spec, config);\n  }\n\n  throw new Error(`Unregistered composite mark ${mark}`);\n}\n","// DateTime definition object\n\nimport * as log from './log';\nimport {duplicate, isNumber, keys} from './util';\n\n\n/*\n * A designated year that starts on Sunday.\n */\nconst SUNDAY_YEAR = 2006;\n\n/**\n * @minimum 1\n * @maximum 12\n * @TJS-type integer\n */\nexport type Month = number;\n\n/**\n * @minimum 1\n * @maximum 7\n */\nexport type Day = number;\n\n/**\n * Object for defining datetime in Vega-Lite Filter.\n * If both month and quarter are provided, month has higher precedence.\n * `day` cannot be combined with other date.\n * We accept string for month and day names.\n */\nexport interface DateTime {\n  /**\n   * Integer value representing the year.\n   * @TJS-type integer\n   */\n  year?: number;\n\n  /**\n   * Integer value representing the quarter of the year (from 1-4).\n   * @minimum 1\n   * @maximum 4\n   * @TJS-type integer\n   */\n  quarter?: number;\n\n  /** One of: (1) integer value representing the month from `1`-`12`. `1` represents January;  (2) case-insensitive month name (e.g., `\"January\"`);  (3) case-insensitive, 3-character short month name (e.g., `\"Jan\"`). */\n  month?: Month | string;\n\n  /**\n   * Integer value representing the date from 1-31.\n   * @minimum 1\n   * @maximum 31\n   * @TJS-type integer\n   */\n  date?: number;\n\n  /**\n   * Value representing the day of a week.  This can be one of: (1) integer value -- `1` represents Monday; (2) case-insensitive day name (e.g., `\"Monday\"`);  (3) case-insensitive, 3-character short day name (e.g., `\"Mon\"`).   <br/> **Warning:** A DateTime definition object with `day`** should not be combined with `year`, `quarter`, `month`, or `date`.\n   */\n  day?: Day | string;\n\n  /**\n   * Integer value representing the hour of a day from 0-23.\n   * @minimum 0\n   * @maximum 23\n   * @TJS-type integer\n   */\n  hours?: number;\n\n  /**\n   * Integer value representing the minute segment of time from 0-59.\n   * @minimum 0\n   * @maximum 59\n   * @TJS-type integer\n   */\n  minutes?: number;\n\n  /**\n   * Integer value representing the second segment (0-59) of a time value\n   * @minimum 0\n   * @maximum 59\n   * @TJS-type integer\n   */\n  seconds?: number;\n\n  /**\n   * Integer value representing the millisecond segment of time.\n   * @minimum 0\n   * @maximum 999\n   * @TJS-type integer\n   */\n  milliseconds?: number;\n\n  /**\n   * A boolean flag indicating if date time is in utc time. If false, the date time is in local time\n   */\n  utc?: boolean;\n}\n\n\n/**\n * Internal Object for defining datetime expressions.\n * This is an expression version of DateTime.\n * If both month and quarter are provided, month has higher precedence.\n * `day` cannot be combined with other date.\n */\nexport interface DateTimeExpr {\n  year?: string;\n  quarter?: string;\n  month?: string;\n  date?: string;\n  day?: string;\n  hours?: string;\n  minutes?: string;\n  seconds?: string;\n  milliseconds?: string;\n  utc?: boolean;\n}\n\nexport function isDateTime(o: any): o is DateTime {\n  return !!o && (!!o.year || !!o.quarter || !!o.month || !!o.date || !!o.day ||\n    !!o.hours || !!o.minutes || !!o.seconds || !!o.milliseconds);\n}\n\nexport const MONTHS = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nexport const SHORT_MONTHS = MONTHS.map((m) => m.substr(0, 3));\n\nexport const DAYS = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\nexport const SHORT_DAYS = DAYS.map((d) => d.substr(0,3));\n\nfunction normalizeQuarter(q: number | string) {\n  if (isNumber(q)) {\n    if (q > 4) {\n      log.warn(log.message.invalidTimeUnit('quarter', q));\n    }\n    // We accept 1-based quarter, so need to readjust to 0-based quarter\n    return (q - 1) + '';\n  } else {\n    // Invalid quarter\n    throw new Error(log.message.invalidTimeUnit('quarter', q));\n  }\n}\n\nfunction normalizeMonth(m: string | number) {\n  if (isNumber(m)) {\n    // We accept 1-based month, so need to readjust to 0-based month\n    return (m - 1) + '';\n  } else {\n    const lowerM = m.toLowerCase();\n    const monthIndex = MONTHS.indexOf(lowerM);\n    if (monthIndex !== -1) {\n      return monthIndex + ''; // 0 for january, ...\n    }\n    const shortM = lowerM.substr(0, 3);\n    const shortMonthIndex = SHORT_MONTHS.indexOf(shortM);\n    if (shortMonthIndex !== -1) {\n      return shortMonthIndex + '';\n    }\n    // Invalid month\n    throw new Error(log.message.invalidTimeUnit('month', m));\n  }\n}\n\nfunction normalizeDay(d: string | number) {\n  if (isNumber(d)) {\n    // mod so that this can be both 0-based where 0 = sunday\n    // and 1-based where 7=sunday\n    return (d % 7) + '';\n  } else {\n    const lowerD = d.toLowerCase();\n    const dayIndex = DAYS.indexOf(lowerD);\n    if (dayIndex !== -1) {\n      return dayIndex + ''; // 0 for january, ...\n    }\n    const shortD = lowerD.substr(0, 3);\n    const shortDayIndex = SHORT_DAYS.indexOf(shortD);\n    if (shortDayIndex !== -1) {\n      return shortDayIndex + '';\n    }\n    // Invalid day\n    throw new Error(log.message.invalidTimeUnit('day', d));\n  }\n}\n\n/**\n * Return Vega Expression for a particular date time.\n * @param d\n * @param normalize whether to normalize quarter, month, day.\n */\nexport function dateTimeExpr(d: DateTime | DateTimeExpr, normalize = false) {\n  const units: (string | number)[] = [];\n\n  if (normalize && d.day !== undefined) {\n    if (keys(d).length > 1) {\n      log.warn(log.message.droppedDay(d));\n      d = duplicate(d);\n      delete d.day;\n    }\n  }\n\n  if (d.year !== undefined) {\n    units.push(d.year);\n  } else if (d.day !== undefined) {\n    // Set year to 2006 for working with day since January 1 2006 is a Sunday\n    units.push(SUNDAY_YEAR);\n  } else {\n    units.push(0);\n  }\n\n  if (d.month !== undefined) {\n    const month = normalize ? normalizeMonth(d.month) : d.month;\n    units.push(month);\n  } else if (d.quarter !== undefined) {\n    const quarter = normalize ? normalizeQuarter(d.quarter) : d.quarter;\n    units.push(quarter + '*3');\n  } else {\n    units.push(0); // months start at zero in JS\n  }\n\n  if (d.date !== undefined) {\n    units.push(d.date);\n  } else if (d.day !== undefined) {\n    // HACK: Day only works as a standalone unit\n    // This is only correct because we always set year to 2006 for day\n    const day = normalize ? normalizeDay(d.day) : d.day;\n    units.push(day + '+1');\n  } else {\n    units.push(1); // Date starts at 1 in JS\n  }\n\n  // Note: can't use TimeUnit enum here as importing it will create\n  // circular dependency problem!\n  for (const timeUnit of ['hours', 'minutes', 'seconds', 'milliseconds']) {\n    if (d[timeUnit] !== undefined) {\n      units.push(d[timeUnit]);\n    } else {\n      units.push(0);\n    }\n  }\n\n  if (d.utc) {\n    return `utc(${units.join(', ')})`;\n  } else {\n    return `datetime(${units.join(', ')})`;\n  }\n}\n","\nimport {Channel, CHANNELS, supportMark} from './channel';\nimport {FacetMapping} from './facet';\nimport {\n  ChannelDef,\n  Field,\n  FieldDef,\n  FieldDefWithCondition,\n  getFieldDef,\n  hasConditionalFieldDef,\n  isConditionalDef,\n  isFieldDef,\n  isValueDef,\n  MarkPropFieldDef,\n  normalize,\n  normalizeFieldDef,\n  OrderFieldDef,\n  PositionFieldDef,\n  TextFieldDef,\n  ValueDef,\n  ValueDefWithCondition\n} from './fielddef';\nimport * as log from './log';\nimport {Mark} from './mark';\nimport {isArray, keys, some} from './util';\n\nexport interface Encoding<F> {\n  /**\n   * X coordinates of the marks, or width of horizontal `\"bar\"` and `\"area\"`.\n   */\n  x?: PositionFieldDef<F> | ValueDef;\n\n  /**\n   * Y coordinates of the marks, or height of vertical `\"bar\"` and `\"area\"`.\n   */\n  y?: PositionFieldDef<F> | ValueDef;\n\n  /**\n   * X2 coordinates for ranged  `\"area\"`, `\"bar\"`, `\"rect\"`, and  `\"rule\"`.\n   */\n  // TODO: Ham need to add default behavior\n  x2?: FieldDef<F> | ValueDef;\n\n  /**\n   * Y2 coordinates for ranged  `\"area\"`, `\"bar\"`, `\"rect\"`, and  `\"rule\"`.\n   */\n  // TODO: Ham need to add default behavior\n  y2?: FieldDef<F> | ValueDef;\n\n  /**\n   * Color of the marks – either fill or stroke color based on mark type.\n   * By default, `color` represents fill color for `\"area\"`, `\"bar\"`, `\"tick\"`,\n   * `\"text\"`, `\"circle\"`, and `\"square\"` / stroke color for `\"line\"` and `\"point\"`.\n   *\n   * __Default value:__ If undefined, the default color depends on [mark config](config.html#mark)'s `color` property.\n   *\n   * _Note:_ See the scale documentation for more information about customizing [color scheme](scale.html#scheme).\n   */\n  color?: FieldDefWithCondition<MarkPropFieldDef<F>> | ValueDefWithCondition<MarkPropFieldDef<F>>;\n\n  /**\n   * Opacity of the marks – either can be a value or a range.\n   *\n   * __Default value:__ If undefined, the default opacity depends on [mark config](config.html#mark)'s `opacity` property.\n   */\n  opacity?: FieldDefWithCondition<MarkPropFieldDef<F>> | ValueDefWithCondition<MarkPropFieldDef<F>>;\n\n  /**\n   * Size of the mark.\n   * - For `\"point\"`, `\"square\"` and `\"circle\"`, – the symbol size, or pixel area of the mark.\n   * - For `\"bar\"` and `\"tick\"` – the bar and tick's size.\n   * - For `\"text\"` – the text's font size.\n   * - Size is currently unsupported for `\"line\"`, `\"area\"`, and `\"rect\"`.\n   */\n  size?: FieldDefWithCondition<MarkPropFieldDef<F>> | ValueDefWithCondition<MarkPropFieldDef<F>>;\n\n  /**\n   * For `point` marks the supported values are\n   * `\"circle\"` (default), `\"square\"`, `\"cross\"`, `\"diamond\"`, `\"triangle-up\"`,\n   * or `\"triangle-down\"`, or else a custom SVG path string.\n   * For `geoshape` marks it should be a field definition of the geojson data\n   *\n   * __Default value:__ If undefined, the default shape depends on [mark config](config.html#point-config)'s `shape` property.\n   */\n  shape?: FieldDefWithCondition<MarkPropFieldDef<F>> | ValueDefWithCondition<MarkPropFieldDef<F>>; // TODO: maybe distinguish ordinal-only\n\n  /**\n   * Additional levels of detail for grouping data in aggregate views and\n   * in line and area marks without mapping data to a specific visual channel.\n   */\n  detail?: FieldDef<F> | FieldDef<F>[];\n\n  /**\n   * Text of the `text` mark.\n   */\n  text?: FieldDefWithCondition<TextFieldDef<F>> | ValueDefWithCondition<TextFieldDef<F>>;\n\n  /**\n   * The tooltip text to show upon mouse hover.\n   */\n  tooltip?: FieldDefWithCondition<TextFieldDef<F>> | ValueDefWithCondition<TextFieldDef<F>>;\n\n  /**\n   * A URL to load upon mouse click.\n   */\n  href?: FieldDefWithCondition<FieldDef<F>> | ValueDefWithCondition<FieldDef<F>>;\n\n  /**\n   * Stack order for stacked marks or order of data points in line marks for connected scatter plots.\n   *\n   * __Note__: In aggregate plots, `order` field should be `aggregate`d to avoid creating additional aggregation grouping.\n   */\n  order?: OrderFieldDef<F> | OrderFieldDef<F>[];\n}\n\nexport interface EncodingWithFacet<F> extends Encoding<F>, FacetMapping<F> {}\n\nexport function channelHasField(encoding: EncodingWithFacet<Field>, channel: Channel): boolean {\n  const channelDef = encoding && encoding[channel];\n  if (channelDef) {\n    if (isArray(channelDef)) {\n      return some(channelDef, (fieldDef) => !!fieldDef.field);\n    } else {\n      return isFieldDef(channelDef) || hasConditionalFieldDef(channelDef);\n    }\n  }\n  return false;\n}\n\n\nexport function isAggregate(encoding: EncodingWithFacet<Field>) {\n  return some(CHANNELS, (channel) => {\n    if (channelHasField(encoding, channel)) {\n      const channelDef = encoding[channel];\n      if (isArray(channelDef)) {\n        return some(channelDef, (fieldDef) => !!fieldDef.aggregate);\n      } else {\n        const fieldDef = getFieldDef(channelDef);\n        return fieldDef && !!fieldDef.aggregate;\n      }\n    }\n    return false;\n  });\n}\n\nexport function normalizeEncoding(encoding: Encoding<string>, mark: Mark): Encoding<string> {\n  return keys(encoding).reduce((normalizedEncoding: Encoding<string>, channel: Channel) => {\n    if (!supportMark(channel, mark)) {\n      // Drop unsupported channel\n\n      log.warn(log.message.incompatibleChannel(channel, mark));\n      return normalizedEncoding;\n    }\n\n    // Drop line's size if the field is aggregated.\n    if (channel === 'size' && mark === 'line') {\n      const fieldDef = getFieldDef(encoding[channel]);\n      if (fieldDef && fieldDef.aggregate) {\n        log.warn(log.message.incompatibleChannel(channel, mark, 'when the field is aggregated.'));\n        return normalizedEncoding;\n      }\n    }\n\n    if (channel === 'detail' || channel === 'order') {\n      const channelDef = encoding[channel];\n      if (channelDef) {\n        // Array of fieldDefs for detail channel (or production rule)\n        normalizedEncoding[channel] = (isArray(channelDef) ? channelDef : [channelDef])\n          .reduce((defs: FieldDef<string>[], fieldDef: FieldDef<string>) => {\n            if (!isFieldDef(fieldDef)) {\n              log.warn(log.message.emptyFieldDef(fieldDef, channel));\n            } else {\n              defs.push(normalizeFieldDef(fieldDef, channel));\n            }\n            return defs;\n          }, []);\n      }\n    } else {\n      // FIXME: remove this casting.  (I don't know why Typescript doesn't infer this correctly here.)\n      const channelDef = encoding[channel] as ChannelDef<string>;\n      if (!isFieldDef(channelDef) && !isValueDef(channelDef) && !isConditionalDef(channelDef)) {\n        log.warn(log.message.emptyFieldDef(channelDef, channel));\n        return normalizedEncoding;\n      }\n      normalizedEncoding[channel] = normalize(channelDef, channel);\n    }\n    return normalizedEncoding;\n  }, {});\n}\n\n\nexport function isRanged(encoding: EncodingWithFacet<any>) {\n  return encoding && ((!!encoding.x && !!encoding.x2) || (!!encoding.y && !!encoding.y2));\n}\n\nexport function fieldDefs(encoding: EncodingWithFacet<Field>): FieldDef<Field>[] {\n  const arr: FieldDef<Field>[] = [];\n  CHANNELS.forEach(function(channel) {\n    if (channelHasField(encoding, channel)) {\n      const channelDef = encoding[channel];\n      (isArray(channelDef) ? channelDef : [channelDef]).forEach((def) => {\n        if (isFieldDef(def)) {\n          arr.push(def);\n        } else if (hasConditionalFieldDef(def)) {\n          arr.push(def.condition);\n        }\n      });\n    }\n  });\n  return arr;\n}\n\nexport function forEach(mapping: any,\n    f: (fd: FieldDef<string>, c: Channel) => void,\n    thisArg?: any) {\n  if (!mapping) {\n    return;\n  }\n\n  for (const channel of keys(mapping)) {\n    if (isArray(mapping[channel])) {\n      mapping[channel].forEach(function(channelDef: ChannelDef<string>) {\n        f.call(thisArg, channelDef, channel);\n      });\n    } else {\n      f.call(thisArg, mapping[channel], channel);\n    }\n  }\n}\n\nexport function reduce<T, U extends {[k in Channel]?: any}>(mapping: U,\n    f: (acc: any, fd: FieldDef<string>, c: Channel) => U,\n    init: T, thisArg?: any) {\n  if (!mapping) {\n    return init;\n  }\n\n  return keys(mapping).reduce((r, channel) => {\n    const map = mapping[channel];\n    if (isArray(map)) {\n      return map.reduce((r1: T, channelDef: ChannelDef<string>) => {\n        return f.call(thisArg, r1, channelDef, channel);\n      }, r);\n    } else {\n      return f.call(thisArg, r, map, channel);\n    }\n  }, init);\n}\n","// Declaration and utility for variants of a field definition object\nimport {AggregateOp, isAggregateOp, isCountingAggregateOp} from './aggregate';\nimport {Axis} from './axis';\nimport {autoMaxBins, BinParams, binToString} from './bin';\nimport {Channel, rangeType} from './channel';\nimport {CompositeAggregate} from './compositemark';\nimport {Config} from './config';\nimport {Legend} from './legend';\nimport * as log from './log';\nimport {LogicalOperand} from './logical';\nimport {Predicate} from './predicate';\nimport {Scale} from './scale';\nimport {SortField, SortOrder} from './sort';\nimport {StackOffset} from './stack';\nimport {getTimeUnitParts, normalizeTimeUnit, TimeUnit} from './timeunit';\nimport {getFullName, Type} from './type';\nimport {accessPath, isArray, isBoolean, isNumber, isString, titlecase} from './util';\n\n/**\n * Definition object for a constant value of an encoding channel.\n */\nexport interface ValueDef {\n  /**\n   * A constant value in visual domain (e.g., `\"red\"` / \"#0099ff\" for color, values between `0` to `1` for opacity).\n   */\n  value: number | string | boolean;\n}\n\n/**\n * Generic type for conditional channelDef.\n * F defines the underlying FieldDef type.\n */\nexport type ChannelDefWithCondition<F extends FieldDef<any>> = FieldDefWithCondition<F> | ValueDefWithCondition<F>;\n\nexport type Conditional<T> = ConditionalPredicate<T> | ConditionalSelection<T>;\n\nexport type ConditionalPredicate<T> = {\n  test: LogicalOperand<Predicate>;\n} & T;\n\nexport type ConditionalSelection<T> = {\n  /**\n   * A [selection name](https://vega.github.io/vega-lite/docs/selection.html), or a series of [composed selections](https://vega.github.io/vega-lite/docs/selection.html#compose).\n   */\n  selection: LogicalOperand<string>;\n} & T;\n\nexport function isConditionalSelection<T>(c: Conditional<T>): c is ConditionalSelection<T> {\n  return c['selection'];\n}\n\n/**\n * A FieldDef with Condition<ValueDef>\n * {\n *   condition: {value: ...},\n *   field: ...,\n *   ...\n * }\n */\nexport type FieldDefWithCondition<F extends FieldDef<any>> = F & {\n  /**\n   * One or more value definition(s) with a selection predicate.\n   *\n   * __Note:__ A field definition's `condition` property can only contain [value definitions](https://vega.github.io/vega-lite/docs/encoding.html#value-def)\n   * since Vega-Lite only allows at most one encoded field per encoding channel.\n   */\n  condition?: Conditional<ValueDef> | Conditional<ValueDef>[];\n};\n\n/**\n * A ValueDef with Condition<ValueDef | FieldDef>\n * {\n *   condition: {field: ...} | {value: ...},\n *   value: ...,\n * }\n */\nexport interface ValueDefWithCondition<F extends FieldDef<any>> {\n  /**\n   * A field definition or one or more value definition(s) with a selection predicate.\n   */\n  condition?: Conditional<F> | Conditional<ValueDef> | Conditional<ValueDef>[];\n\n  /**\n   * A constant value in visual domain.\n   */\n  value?: number | string | boolean;\n}\n\n/**\n * Reference to a repeated value.\n */\nexport type RepeatRef = {\n  repeat: 'row' | 'column'\n};\n\nexport type Field = string | RepeatRef;\n\nexport function isRepeatRef(field: Field): field is RepeatRef {\n  return field && !isString(field) && 'repeat' in field;\n}\n\n/** @hide */\nexport type HiddenCompositeAggregate = CompositeAggregate;\n\nexport type Aggregate = AggregateOp | HiddenCompositeAggregate;\n\nexport interface FieldDefBase<F> {\n\n  /**\n   * __Required.__ A string defining the name of the field from which to pull a data value\n   * or an object defining iterated values from the [`repeat`](https://vega.github.io/vega-lite/docs/repeat.html) operator.\n   *\n   * __Note:__ Dots (`.`) and brackets (`[` and `]`) can be used to access nested objects (e.g., `\"field\": \"foo.bar\"` and `\"field\": \"foo['bar']\"`).\n   * If field names contain dots or brackets but are not nested, you can use `\\\\` to escape dots and brackets (e.g., `\"a\\\\.b\"` and `\"a\\\\[0\\\\]\"`).\n   * See more details about escaping in the [field documentation](https://vega.github.io/vega-lite/docs/field.html).\n   *\n   * __Note:__ `field` is not required if `aggregate` is `count`.\n   */\n  field?: F;\n\n  // function\n\n  /**\n   * Time unit (e.g., `year`, `yearmonth`, `month`, `hours`) for a temporal field.\n   * or [a temporal field that gets casted as ordinal](https://vega.github.io/vega-lite/docs/type.html#cast).\n   *\n   * __Default value:__ `undefined` (None)\n   */\n  timeUnit?: TimeUnit;\n\n  /**\n   * A flag for binning a `quantitative` field, or [an object defining binning parameters](https://vega.github.io/vega-lite/docs/bin.html#params).\n   * If `true`, default [binning parameters](https://vega.github.io/vega-lite/docs/bin.html) will be applied.\n   *\n   * __Default value:__ `false`\n   */\n  bin?: boolean | BinParams;\n\n  /**\n   * Aggregation function for the field\n   * (e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n   *\n   * __Default value:__ `undefined` (None)\n   */\n  aggregate?: Aggregate;\n}\n\n/**\n *  Definition object for a data field, its type and transformation of an encoding channel.\n */\nexport interface FieldDef<F> extends FieldDefBase<F> {\n  /**\n   * The encoded field's type of measurement (`\"quantitative\"`, `\"temporal\"`, `\"ordinal\"`, or `\"nominal\"`).\n   * It can also be a geo type (`\"latitude\"`, `\"longitude\"`, and `\"geojson\"`) when a [geographic projection](https://vega.github.io/vega-lite/docs/projection.html) is applied.\n   */\n  // * or an initial character of the type name (`\"Q\"`, `\"T\"`, `\"O\"`, `\"N\"`).\n  // * This property is case-insensitive.\n  type: Type;\n}\n\nexport interface ScaleFieldDef<F> extends FieldDef<F> {\n  /**\n   * An object defining properties of the channel's scale, which is the function that transforms values in the data domain (numbers, dates, strings, etc) to visual values (pixels, colors, sizes) of the encoding channels.\n   *\n   * __Default value:__ If undefined, default [scale properties](https://vega.github.io/vega-lite/docs/scale.html) are applied.\n   */\n  scale?: Scale;\n\n  /**\n   * Sort order for the encoded field.\n   * Supported `sort` values include `\"ascending\"`, `\"descending\"` and `null` (no sorting).\n   * For fields with discrete domains, `sort` can also be a [sort field definition object](https://vega.github.io/vega-lite/docs/sort.html#sort-field).\n   *\n   * __Default value:__ `\"ascending\"`\n   */\n  sort?: SortOrder | SortField<F> | null;\n}\n\nexport interface PositionFieldDef<F> extends ScaleFieldDef<F> {\n  /**\n   * An object defining properties of axis's gridlines, ticks and labels.\n   * If `null`, the axis for the encoding channel will be removed.\n   *\n   * __Default value:__ If undefined, default [axis properties](https://vega.github.io/vega-lite/docs/axis.html) are applied.\n   */\n  axis?: Axis | null;\n\n  /**\n   * Type of stacking offset if the field should be stacked.\n   * `stack` is only applicable for `x` and `y` channels with continuous domains.\n   * For example, `stack` of `y` can be used to customize stacking for a vertical bar chart.\n   *\n   * `stack` can be one of the following values:\n   * - `\"zero\"`: stacking with baseline offset at zero value of the scale (for creating typical stacked [bar](https://vega.github.io/vega-lite/docs/stack.html#bar) and [area](https://vega.github.io/vega-lite/docs/stack.html#area) chart).\n   * - `\"normalize\"` - stacking with normalized domain (for creating [normalized stacked bar and area charts](https://vega.github.io/vega-lite/docs/stack.html#normalized). <br/>\n   * -`\"center\"` - stacking with center baseline (for [streamgraph](https://vega.github.io/vega-lite/docs/stack.html#streamgraph)).\n   * - `null` - No-stacking. This will produce layered [bar](https://vega.github.io/vega-lite/docs/stack.html#layered-bar-chart) and area chart.\n   *\n   * __Default value:__ `zero` for plots with all of the following conditions are true:\n   * (1) the mark is `bar` or `area`;\n   * (2) the stacked measure channel (x or y) has a linear scale;\n   * (3) At least one of non-position channels mapped to an unaggregated field that is different from x and y.  Otherwise, `null` by default.\n   */\n  stack?: StackOffset | null;\n}\n\n/**\n * Field definition of a mark property, which can contain a legend.\n */\nexport interface MarkPropFieldDef<F> extends ScaleFieldDef<F> {\n   /**\n    * An object defining properties of the legend.\n    * If `null`, the legend for the encoding channel will be removed.\n    *\n    * __Default value:__ If undefined, default [legend properties](https://vega.github.io/vega-lite/docs/legend.html) are applied.\n    */\n  legend?: Legend | null;\n}\n\n// Detail\n\n// Order Path have no scale\n\nexport interface OrderFieldDef<F> extends FieldDef<F> {\n  /**\n   * The sort order. One of `\"ascending\"` (default) or `\"descending\"`.\n   */\n  sort?: SortOrder;\n}\n\nexport interface TextFieldDef<F> extends FieldDef<F> {\n  /**\n   * The [formatting pattern](https://vega.github.io/vega-lite/docs/format.html) for a text field. If not defined, this will be determined automatically.\n   */\n  format?: string;\n}\n\nexport type ChannelDef<F> = ChannelDefWithCondition<FieldDef<F>>;\n\nexport function isConditionalDef<F>(channelDef: ChannelDef<F>): channelDef is ChannelDefWithCondition<FieldDef<F>> {\n  return !!channelDef && !!channelDef.condition;\n}\n\n/**\n * Return if a channelDef is a ConditionalValueDef with ConditionFieldDef\n */\nexport function hasConditionalFieldDef<F>(channelDef: ChannelDef<F>): channelDef is (ValueDef & {condition: Conditional<FieldDef<F>>}) {\n  return !!channelDef && !!channelDef.condition && !isArray(channelDef.condition) && isFieldDef(channelDef.condition);\n}\n\nexport function hasConditionalValueDef<F>(channelDef: ChannelDef<F>): channelDef is (ValueDef & {condition: Conditional<ValueDef> | Conditional<ValueDef>[]}) {\n  return !!channelDef && !!channelDef.condition && (\n    isArray(channelDef.condition) || isValueDef(channelDef.condition)\n  );\n}\n\nexport function isFieldDef<F>(channelDef: ChannelDef<F>): channelDef is FieldDef<F> | PositionFieldDef<F> | ScaleFieldDef<F> | MarkPropFieldDef<F> | OrderFieldDef<F> | TextFieldDef<F> {\n  return !!channelDef && (!!channelDef['field'] || channelDef['aggregate'] === 'count');\n}\n\nexport function isStringFieldDef(fieldDef: ChannelDef<string|RepeatRef>): fieldDef is FieldDef<string> {\n  return isFieldDef(fieldDef) && isString(fieldDef.field);\n}\n\nexport function isValueDef<F>(channelDef: ChannelDef<F>): channelDef is ValueDef {\n  return channelDef && 'value' in channelDef && channelDef['value'] !== undefined;\n}\n\nexport function isScaleFieldDef(channelDef: ChannelDef<any>): channelDef is ScaleFieldDef<any> {\n  return !!channelDef && (!!channelDef['scale'] || !!channelDef['sort']);\n}\n\nexport interface FieldRefOption {\n  /** exclude bin, aggregate, timeUnit */\n  nofn?: boolean;\n  /** Wrap the field with datum or parent (e.g., datum['...'] for Vega Expression */\n  expr?: 'datum' | 'parent';\n  /** prepend fn with custom function prefix */\n  prefix?: string;\n  /** append suffix to the field ref for bin (default='start') */\n  binSuffix?: 'end' | 'range' | 'mid';\n  /** append suffix to the field ref (general) */\n  suffix?: string;\n  /** Overrride which aggregate to use. Needed for unaggregated domain. */\n  aggregate?: AggregateOp;\n}\n\nexport function vgField(fieldDef: FieldDefBase<string>, opt: FieldRefOption = {}): string {\n  let field = fieldDef.field;\n  const prefix = opt.prefix;\n  let suffix = opt.suffix;\n\n  if (isCount(fieldDef)) {\n    field = 'count_*';\n  } else {\n    let fn: string = undefined;\n\n    if (!opt.nofn) {\n      if (fieldDef.bin) {\n        fn = binToString(fieldDef.bin);\n        suffix = opt.binSuffix || '';\n      } else if (fieldDef.aggregate) {\n        fn = String(opt.aggregate || fieldDef.aggregate);\n      } else if (fieldDef.timeUnit) {\n        fn = String(fieldDef.timeUnit);\n      }\n    }\n\n    if (fn) {\n      field = `${fn}_${field}`;\n    }\n  }\n\n  if (suffix) {\n    field = `${field}_${suffix}`;\n  }\n\n  if (prefix) {\n    field = `${prefix}_${field}`;\n  }\n\n  if (opt.expr) {\n    field = `${opt.expr}${accessPath(field)}`;\n  }\n\n  return field;\n}\n\nexport function isDiscrete(fieldDef: FieldDef<Field>) {\n  switch (fieldDef.type) {\n    case 'nominal':\n    case 'ordinal':\n    case 'geojson':\n      return true;\n    case 'quantitative':\n      return !!fieldDef.bin;\n    case 'latitude':\n    case 'longitude':\n    case 'temporal':\n      return false;\n  }\n  throw new Error(log.message.invalidFieldType(fieldDef.type));\n}\n\nexport function isContinuous(fieldDef: FieldDef<Field>) {\n  return !isDiscrete(fieldDef);\n}\n\nexport function isCount(fieldDef: FieldDefBase<Field>) {\n  return fieldDef.aggregate === 'count';\n}\n\nexport type FieldTitleFormatter = (fieldDef: FieldDef<string>, config: Config) => string;\n\nexport function verbalTitleFormatter(fieldDef: FieldDef<string>, config: Config) {\n  const {field: field, bin, timeUnit, aggregate} = fieldDef;\n  if (aggregate === 'count') {\n    return config.countTitle;\n  } else if (bin) {\n    return `${field} (binned)`;\n  } else if (timeUnit) {\n    const units = getTimeUnitParts(timeUnit).join('-');\n    return `${field} (${units})`;\n  } else if (aggregate) {\n    return `${titlecase(aggregate)} of ${field}`;\n  }\n  return field;\n}\n\nexport function functionalTitleFormatter(fieldDef: FieldDef<string>, config: Config) {\n  const fn = fieldDef.aggregate || fieldDef.timeUnit || (fieldDef.bin && 'bin');\n  if (fn) {\n    return fn.toUpperCase() + '(' + fieldDef.field + ')';\n  } else {\n    return fieldDef.field;\n  }\n}\n\nexport const defaultTitleFormatter: FieldTitleFormatter = (fieldDef: FieldDef<string>, config: Config) => {\n  switch (config.fieldTitle) {\n    case 'plain':\n      return fieldDef.field;\n    case 'functional':\n      return functionalTitleFormatter(fieldDef, config);\n    default:\n      return verbalTitleFormatter(fieldDef, config);\n  }\n};\n\nlet titleFormatter = defaultTitleFormatter;\n\nexport function setTitleFormatter(formatter: (fieldDef: FieldDef<string>, config: Config) => string) {\n  titleFormatter = formatter;\n}\n\nexport function resetTitleFormatter() {\n  setTitleFormatter(defaultTitleFormatter);\n}\n\nexport function title(fieldDef: FieldDef<string>, config: Config) {\n  return titleFormatter(fieldDef, config);\n}\n\nexport function defaultType(fieldDef: FieldDef<Field>, channel: Channel): Type {\n  if (fieldDef.timeUnit) {\n    return 'temporal';\n  }\n  if (fieldDef.bin) {\n    return 'quantitative';\n  }\n  switch (rangeType(channel)) {\n    case 'continuous':\n      return 'quantitative';\n    case 'discrete':\n      return 'nominal';\n    case 'flexible': // color\n      return 'nominal';\n    default:\n      return 'quantitative';\n  }\n}\n\n/**\n * Returns the fieldDef -- either from the outer channelDef or from the condition of channelDef.\n * @param channelDef\n */\nexport function getFieldDef<F>(channelDef: ChannelDef<F>): FieldDef<F> {\n  if (isFieldDef(channelDef)) {\n    return channelDef;\n  } else if (hasConditionalFieldDef(channelDef)) {\n    return channelDef.condition;\n  }\n  return undefined;\n}\n\n/**\n * Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.\n */\nexport function normalize(channelDef: ChannelDef<string>, channel: Channel): ChannelDef<any> {\n  if (isString(channelDef) || isNumber(channelDef) || isBoolean(channelDef)) {\n    const primitiveType = isString(channelDef) ? 'string' :\n      isNumber(channelDef) ? 'number' : 'boolean';\n    log.warn(log.message.primitiveChannelDef(channel, primitiveType, channelDef));\n    return {value: channelDef};\n  }\n\n  // If a fieldDef contains a field, we need type.\n  if (isFieldDef(channelDef)) {\n    return normalizeFieldDef(channelDef, channel);\n  } else if (hasConditionalFieldDef(channelDef)) {\n    return {\n      ...channelDef,\n      // Need to cast as normalizeFieldDef normally return FieldDef, but here we know that it is definitely Condition<FieldDef>\n      condition: normalizeFieldDef(channelDef.condition, channel) as Conditional<FieldDef<string>>\n    };\n  }\n  return channelDef;\n}\nexport function normalizeFieldDef(fieldDef: FieldDef<string>, channel: Channel) {\n  // Drop invalid aggregate\n  if (fieldDef.aggregate && !isAggregateOp(fieldDef.aggregate)) {\n    const {aggregate, ...fieldDefWithoutAggregate} = fieldDef;\n    log.warn(log.message.invalidAggregate(fieldDef.aggregate));\n    fieldDef = fieldDefWithoutAggregate;\n  }\n\n  // Normalize Time Unit\n  if (fieldDef.timeUnit) {\n    fieldDef = {\n      ...fieldDef,\n      timeUnit: normalizeTimeUnit(fieldDef.timeUnit)\n    };\n  }\n\n  // Normalize bin\n  if (fieldDef.bin) {\n    fieldDef = {\n      ...fieldDef,\n      bin: normalizeBin(fieldDef.bin, channel)\n    };\n  }\n\n  // Normalize Type\n  if (fieldDef.type) {\n    const fullType = getFullName(fieldDef.type);\n    if (fieldDef.type !== fullType) {\n      // convert short type to full type\n      fieldDef = {\n        ...fieldDef,\n        type: fullType\n      };\n    }\n    if (fieldDef.type !== 'quantitative') {\n      if (isCountingAggregateOp(fieldDef.aggregate)) {\n        log.warn(log.message.invalidFieldTypeForCountAggregate(fieldDef.type, fieldDef.aggregate));\n        fieldDef = {\n          ...fieldDef,\n          type: 'quantitative'\n        };\n      }\n    }\n  } else {\n    // If type is empty / invalid, then augment with default type\n    const newType = defaultType(fieldDef, channel);\n    log.warn(log.message.emptyOrInvalidFieldType(fieldDef.type, channel, newType));\n    fieldDef = {\n        ...fieldDef,\n      type: newType\n    };\n  }\n\n  const {compatible, warning} = channelCompatibility(fieldDef, channel);\n  if (!compatible) {\n    log.warn(warning);\n  }\n  return fieldDef;\n}\n\nexport function normalizeBin(bin: BinParams|boolean, channel: Channel) {\n  if (isBoolean(bin)) {\n    return {maxbins: autoMaxBins(channel)};\n  } else if (!bin.maxbins && !bin.step) {\n    return {...bin, maxbins: autoMaxBins(channel)};\n  } else {\n    return bin;\n  }\n}\n\nconst COMPATIBLE = {compatible: true};\nexport function channelCompatibility(fieldDef: FieldDef<Field>, channel: Channel): {compatible: boolean; warning?: string;} {\n  switch (channel) {\n    case 'row':\n    case 'column':\n      if (isContinuous(fieldDef) && !fieldDef.timeUnit) {\n        // TODO:(https://github.com/vega/vega-lite/issues/2011):\n        // with timeUnit it's not always strictly continuous\n        return {\n          compatible: false,\n          warning: log.message.facetChannelShouldBeDiscrete(channel)\n        };\n      }\n      return COMPATIBLE;\n\n    case 'x':\n    case 'y':\n    case 'color':\n    case 'text':\n    case 'detail':\n    case 'tooltip':\n    case 'href':\n      return COMPATIBLE;\n\n    case 'opacity':\n    case 'size':\n    case 'x2':\n    case 'y2':\n      if (isDiscrete(fieldDef) && !fieldDef.bin) {\n        return {\n          compatible: false,\n          warning: `Channel ${channel} should not be used with discrete field.`\n        };\n      }\n      return COMPATIBLE;\n\n    case 'shape':\n      if (fieldDef.type !== 'nominal' && fieldDef.type !== 'geojson') {\n        return {\n          compatible: false,\n          warning: 'Shape channel should be used with nominal data or geojson only'\n        };\n      }\n      return COMPATIBLE;\n\n    case 'order':\n      if (fieldDef.type === 'nominal') {\n        return {\n          compatible: false,\n          warning: `Channel order is inappropriate for nominal field, which has no inherent order.`\n        };\n      }\n      return COMPATIBLE;\n  }\n  throw new Error('channelCompatability not implemented for channel ' + channel);\n}\n\nexport function isNumberFieldDef(fieldDef: FieldDef<any>) {\n  return fieldDef.type === 'quantitative' || !!fieldDef.bin;\n}\n\nexport function isTimeFieldDef(fieldDef: FieldDef<any>) {\n  return fieldDef.type === 'temporal' || !!fieldDef.timeUnit;\n}\n","/**\n * Vega-Lite's singleton logger utility.\n */\n\nimport {logger, LoggerInterface, Warn} from 'vega-util';\nimport {AggregateOp} from './aggregate';\nimport {Channel} from './channel';\nimport {CompositeMark} from './compositemark';\nimport {DateTime, DateTimeExpr} from './datetime';\nimport {FieldDef} from './fielddef';\nimport {Mark} from './mark';\nimport {ScaleType} from './scale';\nimport {Type} from './type';\nimport {stringify} from './util';\nimport {VgSortField} from './vega.schema';\n\n\nexport {LoggerInterface} from 'vega-util';\n\n/**\n * Main (default) Vega Logger instance for Vega-Lite\n */\nconst main = logger(Warn);\nlet current: LoggerInterface = main;\n\n/**\n * Logger tool for checking if the code throws correct warning\n */\nexport class LocalLogger implements LoggerInterface {\n  public warns: any[] = [];\n  public infos: any[] = [];\n  public debugs: any[] = [];\n\n  public level() {\n    return this;\n  }\n\n  public warn(...args: any[]) {\n    this.warns.push(...args);\n    return this;\n  }\n\n  public info(...args: any[]) {\n    this.infos.push(...args);\n    return this;\n  }\n\n  public debug(...args: any[]) {\n    this.debugs.push(...args);\n    return this;\n  }\n}\n\nexport function wrap(f: (logger: LocalLogger) => void) {\n  return () => {\n    current = new LocalLogger();\n    f(current as LocalLogger);\n    reset();\n  };\n}\n\n/**\n * Set the singleton logger to be a custom logger\n */\nexport function set(newLogger: LoggerInterface) {\n  current = newLogger;\n  return current;\n}\n\n/**\n * Reset the main logger to use the default Vega Logger\n */\nexport function reset() {\n  current = main;\n  return current;\n}\n\nexport function warn(..._: any[]) {\n  current.warn.apply(current, arguments);\n}\n\nexport function info(..._: any[]) {\n  current.info.apply(current, arguments);\n}\n\nexport function debug(..._: any[]) {\n  current.debug.apply(current, arguments);\n}\n\n/**\n * Collection of all Vega-Lite Error Messages\n */\nexport namespace message {\n  export const INVALID_SPEC = 'Invalid spec';\n\n  // FIT\n  export const FIT_NON_SINGLE = 'Autosize \"fit\" only works for single views and layered views.';\n\n  export const CANNOT_FIX_RANGE_STEP_WITH_FIT = 'Cannot use a fixed value of \"rangeStep\" when \"autosize\" is \"fit\".';\n\n  // SELECTION\n  export function cannotProjectOnChannelWithoutField(channel: Channel) {\n    return `Cannot project a selection on encoding channel \"${channel}\", which has no field.`;\n  }\n\n  export function nearestNotSupportForContinuous(mark: string) {\n    return `The \"nearest\" transform is not supported for ${mark} marks.`;\n  }\n\n  export function selectionNotFound(name: string) {\n    return `Cannot find a selection named \"${name}\"`;\n  }\n\n  export const SCALE_BINDINGS_CONTINUOUS = 'Scale bindings are currently only supported for scales with unbinned, continuous domains.';\n\n  // REPEAT\n  export function noSuchRepeatedValue(field: string) {\n    return `Unknown repeated value \"${field}\".`;\n  }\n\n  // CONCAT\n  export const CONCAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in concatenated views.';\n\n  // REPEAT\n  export const REPEAT_CANNOT_SHARE_AXIS = 'Axes cannot be shared in repeated views.';\n\n  // TITLE\n  export function cannotSetTitleAnchor(type: string) {\n    return `Cannot set title \"anchor\" for a ${type} spec`;\n  }\n\n  // DATA\n  export function unrecognizedParse(p: string) {\n    return `Unrecognized parse \"${p}\".`;\n  }\n\n  export function differentParse(field: string, local: string, ancestor: string) {\n    return `An ancestor parsed field \"${field}\" as ${ancestor} but a child wants to parse the field as ${local}.`;\n  }\n\n  // TRANSFORMS\n  export function invalidTransformIgnored(transform: any) {\n    return `Ignoring an invalid transform: ${stringify(transform)}.`;\n  }\n\n  export const NO_FIELDS_NEEDS_AS = 'If \"from.fields\" is not specified, \"as\" has to be a string that specifies the key to be used for the the data from the secondary source.';\n\n  // ENCODING & FACET\n\n  export function primitiveChannelDef(channel: Channel, type: 'string' | 'number' | 'boolean', value: string | number | boolean) {\n    return `Channel ${channel} is a ${type}. Converted to {value: ${stringify(value)}}.`;\n  }\n\n  export function invalidFieldType(type: Type) {\n    return `Invalid field type \"${type}\"`;\n  }\n\n  export function invalidFieldTypeForCountAggregate(type: Type, aggregate: string) {\n    return `Invalid field type \"${type}\" for aggregate: \"${aggregate}\", using \"quantitative\" instead.`;\n  }\n\n  export function invalidAggregate(aggregate: AggregateOp | string) {\n    return `Invalid aggregation operator \"${aggregate}\"`;\n  }\n\n  export function emptyOrInvalidFieldType(type: Type | string, channel: Channel, newType: Type) {\n    return `Invalid field type \"${type}\" for channel \"${channel}\", using \"${newType}\" instead.`;\n  }\n\n  export function emptyFieldDef(fieldDef: FieldDef<string>, channel: Channel) {\n    return `Dropping ${stringify(fieldDef)} from channel \"${channel}\" since it does not contain data field or value.`;\n  }\n\n  export function incompatibleChannel(channel: Channel, markOrFacet: Mark | 'facet' | CompositeMark, when?: string) {\n    return `${channel} dropped as it is incompatible with \"${markOrFacet}\"${when ? ` when ${when}` : ''}.`;\n  }\n\n  export function facetChannelShouldBeDiscrete(channel: string) {\n    return `${channel} encoding should be discrete (ordinal / nominal / binned).`;\n  }\n\n  export function discreteChannelCannotEncode(channel: Channel, type: Type) {\n    return `Using discrete channel \"${channel}\" to encode \"${type}\" field can be misleading as it does not encode ${type === 'ordinal' ? 'order' : 'magnitude'}.`;\n  }\n\n  // Mark\n  export const BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL = 'Bar mark should not be used with point scale when rangeStep is null. Please use band scale instead.';\n\n  export function unclearOrientContinuous(mark: Mark) {\n    return `Cannot clearly determine orientation for \"${mark}\" since both x and y channel encode continuous fields. In this case, we use vertical by default`;\n  }\n\n  export function unclearOrientDiscreteOrEmpty(mark: Mark) {\n    return `Cannot clearly determine orientation for \"${mark}\" since both x and y channel encode discrete or empty fields.`;\n  }\n\n  export function orientOverridden(original: string, actual: string) {\n    return `Specified orient \"${original}\" overridden with \"${actual}\"`;\n  }\n\n  // SCALE\n  export const CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN = 'custom domain scale cannot be unioned with default field-based domain';\n\n  export function cannotUseScalePropertyWithNonColor(prop: string) {\n    return `Cannot use the scale property \"${prop}\" with non-color channel.`;\n  }\n\n  export function unaggregateDomainHasNoEffectForRawField(fieldDef: FieldDef<string>) {\n    return `Using unaggregated domain with raw field has no effect (${stringify(fieldDef)}).`;\n  }\n\n  export function unaggregateDomainWithNonSharedDomainOp(aggregate: string) {\n    return `Unaggregated domain not applicable for \"${aggregate}\" since it produces values outside the origin domain of the source data.`;\n  }\n\n  export function unaggregatedDomainWithLogScale(fieldDef: FieldDef<string>) {\n    return `Unaggregated domain is currently unsupported for log scale (${stringify(fieldDef)}).`;\n  }\n\n  export function cannotUseSizeFieldWithBandSize(positionChannel: 'x'|'y') {\n    return `Using size field when ${positionChannel}-channel has a band scale is not supported.`;\n  }\n\n  export function cannotApplySizeToNonOrientedMark(mark: Mark) {\n    return `Cannot apply size to non-oriented mark \"${mark}\".`;\n  }\n\n  export function rangeStepDropped(channel: Channel) {\n    return `rangeStep for \"${channel}\" is dropped as top-level ${\n      channel === 'x' ? 'width' : 'height'} is provided.`;\n  }\n\n  export function scaleTypeNotWorkWithChannel(channel: Channel, scaleType: ScaleType, defaultScaleType: ScaleType) {\n    return `Channel \"${channel}\" does not work with \"${scaleType}\" scale. We are using \"${defaultScaleType}\" scale instead.`;\n  }\n\n  export function scaleTypeNotWorkWithFieldDef(scaleType: ScaleType, defaultScaleType: ScaleType) {\n    return `FieldDef does not work with \"${scaleType}\" scale. We are using \"${defaultScaleType}\" scale instead.`;\n  }\n\n  export function scalePropertyNotWorkWithScaleType(scaleType: ScaleType, propName: string, channel: Channel) {\n    return `${channel}-scale's \"${propName}\" is dropped as it does not work with ${scaleType} scale.`;\n  }\n\n  export function scaleTypeNotWorkWithMark(mark: Mark, scaleType: ScaleType) {\n    return `Scale type \"${scaleType}\" does not work with mark \"${mark}\".`;\n  }\n\n  export function mergeConflictingProperty<T>(property: string, propertyOf: string, v1: T, v2: T) {\n    return `Conflicting ${propertyOf} property \"${property}\" (${stringify(v1)} and ${stringify(v2)}).  Using ${stringify(v1)}.`;\n  }\n\n  export function independentScaleMeansIndependentGuide(channel: Channel) {\n    return `Setting the scale to be independent for \"${channel}\" means we also have to set the guide (axis or legend) to be independent.`;\n  }\n\n  export function conflictedDomain(channel: Channel) {\n    return `Cannot set ${channel}-scale's \"domain\" as it is binned. Please use \"bin\"'s \"extent\" instead.`;\n  }\n\n  export function domainSortDropped(sort: VgSortField) {\n    return `Dropping sort property ${stringify(sort)} as unioned domains only support boolean or op 'count'.`;\n  }\n\n  export const UNABLE_TO_MERGE_DOMAINS = 'Unable to merge domains';\n\n  export const MORE_THAN_ONE_SORT = 'Domains that should be unioned has conflicting sort properties. Sort will be set to true.';\n\n  // AXIS\n  export const INVALID_CHANNEL_FOR_AXIS = 'Invalid channel for axis.';\n\n  // STACK\n  export function cannotStackRangedMark(channel: Channel) {\n    return `Cannot stack \"${channel}\" if there is already \"${channel}2\"`;\n  }\n\n  export function cannotStackNonLinearScale(scaleType: ScaleType) {\n    return `Cannot stack non-linear scale (${scaleType})`;\n  }\n\n  export function stackNonSummativeAggregate(aggregate: string) {\n    return `Stacking is applied even though the aggregate function is non-summative (\"${aggregate}\")`;\n  }\n\n  // TIMEUNIT\n  export function invalidTimeUnit(unitName: string, value: string | number) {\n    return `Invalid ${unitName}: ${stringify(value)}`;\n  }\n\n  export function dayReplacedWithDate(fullTimeUnit: string) {\n    return `Time unit \"${fullTimeUnit}\" is not supported. We are replacing it with ${\n      fullTimeUnit.replace('day', 'date')}.`;\n  }\n\n  export function droppedDay(d: DateTime | DateTimeExpr) {\n    return `Dropping day from datetime ${stringify(d)} as day cannot be combined with other units.`;\n  }\n}\n\n","export type LogicalOperand<T> = LogicalNot<T> | LogicalAnd<T> | LogicalOr<T> | T;\n\nexport interface LogicalOr<T> {\n  or: LogicalOperand<T>[];\n}\n\nexport interface LogicalAnd<T> {\n  and: LogicalOperand<T>[];\n}\n\nexport interface LogicalNot<T> {\n  not: LogicalOperand<T>;\n}\n\nexport function isLogicalOr(op: LogicalOperand<any>): op is LogicalOr<any> {\n  return !!op.or;\n}\n\nexport function isLogicalAnd(op: LogicalOperand<any>): op is LogicalAnd<any> {\n  return !!op.and;\n}\n\nexport function isLogicalNot(op: LogicalOperand<any>): op is LogicalNot<any> {\n  return !!op.not;\n}\n\nexport function forEachLeave<T>(op: LogicalOperand<T>, fn: (op: T) => void) {\n  if (isLogicalNot(op)) {\n    forEachLeave(op.not, fn);\n  } else if (isLogicalAnd(op)) {\n    for (const subop of op.and) {\n      forEachLeave(subop, fn);\n    }\n  } else if (isLogicalOr(op)) {\n    for (const subop of op.or) {\n      forEachLeave(subop, fn);\n    }\n  } else {\n    fn(op);\n  }\n}\n\nexport function normalizeLogicalOperand<T>(op: LogicalOperand<T>, normalizer: (o: T) => T): LogicalOperand<T> {\n  if (isLogicalNot(op)) {\n    return {not: normalizeLogicalOperand(op.not, normalizer)};\n  } else if (isLogicalAnd(op)) {\n    return {and: op.and.map(o => normalizeLogicalOperand(o, normalizer))};\n  } else if (isLogicalOr(op)) {\n    return {or: op.or.map(o => normalizeLogicalOperand(o, normalizer))};\n  } else {\n    return normalizer(op);\n  }\n}\n","import {CompositeMark, CompositeMarkDef} from './compositemark/index';\nimport {flagKeys, toSet} from './util';\nimport {VgMarkConfig} from './vega.schema';\n\nexport namespace Mark {\n  export const AREA: 'area' = 'area';\n  export const BAR: 'bar' = 'bar';\n  export const LINE: 'line' = 'line';\n  export const POINT: 'point' = 'point';\n  export const RECT: 'rect' = 'rect';\n  export const RULE: 'rule' = 'rule';\n  export const TEXT: 'text' = 'text';\n  export const TICK: 'tick' = 'tick';\n  export const CIRCLE: 'circle' = 'circle';\n  export const SQUARE: 'square' = 'square';\n  export const GEOSHAPE: 'geoshape' = 'geoshape';\n}\n\n/**\n * All types of primitive marks.\n */\nexport type Mark = typeof Mark.AREA | typeof Mark.BAR | typeof Mark.LINE | typeof Mark.POINT | typeof Mark.TEXT | typeof Mark.TICK | typeof Mark.RECT | typeof Mark.RULE | typeof Mark.CIRCLE | typeof Mark.SQUARE | typeof Mark.GEOSHAPE;\n\n\nexport const AREA = Mark.AREA;\nexport const BAR = Mark.BAR;\nexport const LINE = Mark.LINE;\nexport const POINT = Mark.POINT;\nexport const TEXT = Mark.TEXT;\nexport const TICK = Mark.TICK;\nexport const RECT = Mark.RECT;\nexport const RULE = Mark.RULE;\nexport const GEOSHAPE = Mark.GEOSHAPE;\n\nexport const CIRCLE = Mark.CIRCLE;\nexport const SQUARE = Mark.SQUARE;\n\n// Using mapped type to declare index, ensuring we always have all marks when we add more.\nconst MARK_INDEX: {[M in Mark]: 1} = {\n  area: 1,\n  bar: 1,\n  line: 1,\n  point: 1,\n  text: 1,\n  tick: 1,\n  rect: 1,\n  geoshape: 1,\n  rule: 1,\n  circle: 1,\n  square: 1\n};\n\nexport function isMark(m: string): m is Mark {\n  return !!MARK_INDEX[m];\n}\n\nexport const PRIMITIVE_MARKS = flagKeys(MARK_INDEX);\n\n\nexport interface MarkConfig extends VgMarkConfig {\n  // ---------- Color ----------\n  /**\n   * Whether the mark's color should be used as fill color instead of stroke color.\n   *\n   * __Default value:__ `true` for all marks except `point` and `false` for `point`.\n   *\n   * __Applicable for:__ `bar`, `point`, `circle`, `square`, and `area` marks.\n   *\n   * __Note:__ This property cannot be used in a [style config](mark.html#style-config).\n   *\n   */\n  filled?: boolean;\n\n  /**\n   * Default color.  Note that `fill` and `stroke` have higher precedence than `color` and will override `color`.\n   *\n   * __Default value:__ <span style=\"color: #4682b4;\">&#9632;</span> `\"#4682b4\"`\n   *\n   * __Note:__ This property cannot be used in a [style config](mark.html#style-config).\n   */\n  color?: string;\n}\n\nexport interface MarkDef extends MarkConfig {\n  /**\n   * The mark type.\n   * One of `\"bar\"`, `\"circle\"`, `\"square\"`, `\"tick\"`, `\"line\"`,\n   * `\"area\"`, `\"point\"`, `\"geoshape\"`, `\"rule\"`, and `\"text\"`.\n   */\n  type: Mark;\n\n  /**\n   *\n   * A string or array of strings indicating the name of custom styles to apply to the mark. A style is a named collection of mark property defaults defined within the [style configuration](mark.html#style-config). If style is an array, later styles will override earlier styles. Any [mark properties](encoding.html#mark-prop) explicitly defined within the `encoding` will override a style default.\n   *\n   * __Default value:__ The mark's name.  For example, a bar mark will have style `\"bar\"` by default.\n   * __Note:__ Any specified style will augment the default style. For example, a bar mark with `\"style\": \"foo\"` will receive from `config.style.bar` and `config.style.foo` (the specified style `\"foo\"` has higher precedence).\n   */\n  style?: string | string[];\n\n  /**\n   * Whether a mark be clipped to the enclosing group’s width and height.\n   */\n  clip?: boolean;\n}\n\n/** @hide */\nexport type HiddenComposite = CompositeMark | CompositeMarkDef;\n\nexport type AnyMark =\n  HiddenComposite |\n  Mark |\n  MarkDef;\n\nexport function isMarkDef(mark: AnyMark): mark is (MarkDef | CompositeMarkDef) {\n  return mark['type'];\n}\n\nconst PRIMITIVE_MARK_INDEX = toSet(PRIMITIVE_MARKS);\n\nexport function isPrimitiveMark(mark: CompositeMark | CompositeMarkDef | Mark | MarkDef): mark is Mark {\n  const markType = isMarkDef(mark) ? mark.type : mark;\n  return markType in PRIMITIVE_MARK_INDEX;\n}\n\nexport const STROKE_CONFIG = ['stroke', 'strokeWidth',\n  'strokeDash', 'strokeDashOffset', 'strokeOpacity'];\n\nexport const FILL_CONFIG = ['fill', 'fillOpacity'];\n\nexport const FILL_STROKE_CONFIG = [].concat(STROKE_CONFIG, FILL_CONFIG);\n\nexport const VL_ONLY_MARK_CONFIG_PROPERTIES: (keyof MarkConfig)[] = ['filled', 'color'];\n\nexport const VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX: {\n  [k in (typeof PRIMITIVE_MARKS[0])]?: (keyof MarkConfigMixins[k])[]\n} = {\n  bar: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],\n  text: ['shortTimeLabels'],\n  tick: ['bandSize', 'thickness']\n};\n\n\n\nexport const defaultMarkConfig: MarkConfig = {\n  color: '#4c78a8',\n};\n\nexport interface MarkConfigMixins {\n  /** Mark Config */\n  mark?: MarkConfig;\n\n  // MARK-SPECIFIC CONFIGS\n  /** Area-Specific Config */\n  area?: MarkConfig;\n\n  /** Bar-Specific Config */\n  bar?: BarConfig;\n\n  /** Circle-Specific Config */\n  circle?: MarkConfig;\n\n  /** Line-Specific Config */\n  line?: MarkConfig;\n\n  /** Point-Specific Config */\n  point?: MarkConfig;\n\n  /** Rect-Specific Config */\n  rect?: MarkConfig;\n\n  /** Rule-Specific Config */\n  rule?: MarkConfig;\n\n  /** Square-Specific Config */\n  square?: MarkConfig;\n\n  /** Text-Specific Config */\n  text?: TextConfig;\n\n  /** Tick-Specific Config */\n  tick?: TickConfig;\n\n  /** Geoshape-Specific Config */\n  geoshape?: MarkConfig;\n}\n\nexport interface BarConfig extends MarkConfig {\n  /**\n   * Offset between bar for binned field.  Ideal value for this is either 0 (Preferred by statisticians) or 1 (Vega-Lite Default, D3 example style).\n   *\n   * __Default value:__ `1`\n   *\n   * @minimum 0\n   */\n  binSpacing?: number;\n  /**\n   * The default size of the bars on continuous scales.\n   *\n   * __Default value:__ `5`\n   *\n   * @minimum 0\n   */\n  continuousBandSize?: number;\n\n  /**\n   * The size of the bars.  If unspecified, the default size is  `bandSize-1`,\n   * which provides 1 pixel offset between bars.\n   * @minimum 0\n   */\n  discreteBandSize?: number;\n}\n\nexport const defaultBarConfig: BarConfig = {\n  binSpacing: 1,\n  continuousBandSize: 5\n};\n\nexport interface TextConfig extends MarkConfig {\n  /**\n   * Whether month names and weekday names should be abbreviated.\n   */\n  shortTimeLabels?: boolean;\n}\n\nexport interface TickConfig extends MarkConfig {\n  /**\n   * The width of the ticks.\n   *\n   * __Default value:__  2/3 of rangeStep.\n   * @minimum 0\n   */\n  bandSize?: number;\n\n  /**\n   * Thickness of the tick mark.\n   *\n   * __Default value:__  `1`\n   *\n   * @minimum 0\n   */\n  thickness?: number;\n}\n\nexport const defaultTickConfig: TickConfig = {\n  thickness: 1\n};\n","import {Channel} from './channel';\nimport {DateTime} from './datetime';\nimport * as log from './log';\nimport {contains, Flag, flagKeys, keys, toSet} from './util';\nimport {ScaleInterpolate, ScaleInterpolateParams} from './vega.schema';\n\nexport namespace ScaleType {\n  // Continuous - Quantitative\n  export const LINEAR: 'linear' = 'linear';\n  export const BIN_LINEAR: 'bin-linear' = 'bin-linear';\n  export const LOG: 'log' = 'log';\n  export const POW: 'pow' = 'pow';\n  export const SQRT: 'sqrt' = 'sqrt';\n  // Continuous - Time\n  export const TIME: 'time' = 'time';\n  export const UTC: 'utc' = 'utc';\n  // sequential\n  export const SEQUENTIAL: 'sequential' = 'sequential';\n\n  // Quantile, Quantize, threshold\n  export const QUANTILE: 'quantile' = 'quantile';\n  export const QUANTIZE: 'quantize' = 'quantize';\n  export const THRESHOLD: 'threshold' = 'threshold';\n\n  export const ORDINAL: 'ordinal' = 'ordinal';\n  export const BIN_ORDINAL: 'bin-ordinal' = 'bin-ordinal';\n  export const POINT: 'point' = 'point';\n  export const BAND: 'band' = 'band';\n}\n\nexport type ScaleType = typeof ScaleType.LINEAR | typeof ScaleType.BIN_LINEAR |\n  typeof ScaleType.LOG | typeof ScaleType.POW | typeof ScaleType.SQRT |\n  typeof ScaleType.TIME | typeof ScaleType.UTC |\n  // TODO: add 'quantize', 'quantile', 'threshold' back when we really support them\n  typeof ScaleType.SEQUENTIAL | // typeof ScaleType.QUANTILE | typeof ScaleType.QUANTIZE | typeof ScaleType.THRESHOLD |\n  typeof ScaleType.ORDINAL | typeof ScaleType.BIN_ORDINAL | typeof ScaleType.POINT | typeof ScaleType.BAND;\n\n\n/**\n * Index for scale categories -- only scale of the same categories can be merged together.\n * Current implementation is trying to be conservative and avoid merging scale type that might not work together\n */\nconst SCALE_CATEGORY_INDEX: {\n  // Using Mapped Type to declare type (https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types)\n  [k in ScaleType]: ScaleType | 'numeric' | 'ordinal-position'\n} = {\n  linear: 'numeric',\n  log: 'numeric',\n  pow: 'numeric',\n  sqrt: 'numeric',\n  'bin-linear': 'bin-linear', // TODO: should bin-linear support merging with other\n  time: 'time',\n  utc: 'time',\n  sequential: 'sequential',\n  ordinal: 'ordinal',\n  'bin-ordinal': 'bin-ordinal', // TODO: should bin-ordinal support merging with other\n  point: 'ordinal-position',\n  band: 'ordinal-position'\n};\n\nexport const SCALE_TYPES = keys(SCALE_CATEGORY_INDEX) as ScaleType[];\n\n/**\n * Whether the two given scale types can be merged together.\n */\nexport function scaleCompatible(scaleType1: ScaleType, scaleType2: ScaleType) {\n  const scaleCategory1 = SCALE_CATEGORY_INDEX[scaleType1];\n  const scaleCategory2 = SCALE_CATEGORY_INDEX[scaleType2];\n  return scaleCategory1 === scaleCategory2 ||\n    (scaleCategory1 === 'ordinal-position' && scaleCategory2 === 'time') ||\n    (scaleCategory2 === 'ordinal-position' && scaleCategory1 === 'time');\n}\n\n/**\n * Index for scale precedence -- high score = higher priority for merging.\n */\nconst SCALE_PRECEDENCE_INDEX: {\n  // Using Mapped Type to declare type (https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types)\n  [k in ScaleType]: number\n} = {\n  // numeric\n  linear: 0,\n  log: 1,\n  pow: 1,\n  sqrt: 1,\n  // time\n  time: 0,\n  utc: 0,\n  // ordinal-position -- these have higher precedence than continuous scales as they support more types of data\n  point: 10,\n  band: 11, // band has higher precedence as it is better for interaction\n  // non grouped types\n  'bin-linear': 0,\n  sequential: 0,\n  ordinal: 0,\n  'bin-ordinal': 0,\n};\n\n/**\n * Return scale categories -- only scale of the same categories can be merged together.\n */\nexport function scaleTypePrecedence(scaleType: ScaleType): number {\n  return SCALE_PRECEDENCE_INDEX[scaleType];\n}\n\nexport const CONTINUOUS_TO_CONTINUOUS_SCALES: ScaleType[] = ['linear', 'bin-linear', 'log', 'pow', 'sqrt', 'time', 'utc'];\nconst CONTINUOUS_TO_CONTINUOUS_INDEX = toSet(CONTINUOUS_TO_CONTINUOUS_SCALES);\n\nexport const CONTINUOUS_DOMAIN_SCALES: ScaleType[] = CONTINUOUS_TO_CONTINUOUS_SCALES.concat(['sequential' /* TODO add 'quantile', 'quantize', 'threshold'*/]);\nconst CONTINUOUS_DOMAIN_INDEX = toSet(CONTINUOUS_DOMAIN_SCALES);\n\nexport const DISCRETE_DOMAIN_SCALES: ScaleType[] = ['ordinal', 'bin-ordinal', 'point', 'band'];\nconst DISCRETE_DOMAIN_INDEX = toSet(DISCRETE_DOMAIN_SCALES);\n\nconst BIN_SCALES_INDEX = toSet(['bin-linear', 'bin-ordinal']);\n\nexport const TIME_SCALE_TYPES: ScaleType[] = ['time', 'utc'];\n\nexport function hasDiscreteDomain(type: ScaleType): type is 'ordinal' | 'bin-ordinal' | 'point' | 'band' {\n  return type in DISCRETE_DOMAIN_INDEX;\n}\n\nexport function isBinScale(type: ScaleType): type is 'bin-linear' | 'bin-ordinal' {\n  return type in BIN_SCALES_INDEX;\n}\n\nexport function hasContinuousDomain(type: ScaleType):\n  type is 'linear' | 'log' | 'pow' | 'sqrt' | 'time' | 'utc'|\n          'sequential' /* TODO add | 'quantile' | 'quantize' | 'threshold' */ {\n  return type in CONTINUOUS_DOMAIN_INDEX;\n}\n\nexport function isContinuousToContinuous(type: ScaleType): type is 'linear' | 'bin-linear' | 'log' | 'pow' | 'sqrt' | 'time' | 'utc' {\n  return type in CONTINUOUS_TO_CONTINUOUS_INDEX;\n}\n\nexport type NiceTime = 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year';\n\nexport interface ScaleConfig {\n  /**\n   * If true, rounds numeric output values to integers.\n   * This can be helpful for snapping to the pixel grid.\n   * (Only available for `x`, `y`, and `size` scales.)\n   */\n  round?: boolean;\n\n  /**\n   * If true, values that exceed the data domain are clamped to either the minimum or maximum range value\n   */\n  clamp?: boolean;\n  /**\n   *  Default range step for `x` band and point scales of text marks.\n   *\n   * __Default value:__ `90`\n   *\n   *  @minimum 0\n   */\n  textXRangeStep?: number; // FIXME: consider if we will rename this \"tableColumnWidth\"\n\n  /**\n   * Default range step for band and point scales of (1) the `y` channel\n   * and (2) the `x` channel when the mark is not `text`.\n   *\n   * __Default value:__ `21`\n   *\n   * @minimum 0\n   */\n  rangeStep?: number | null;\n\n  /**\n   * Default inner padding for `x` and `y` band-ordinal scales.\n   *\n   * __Default value:__ `0.1`\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  bandPaddingInner?: number;\n\n  /**\n   * Default outer padding for `x` and `y` band-ordinal scales.\n   * If not specified, by default, band scale's paddingOuter is paddingInner/2.\n   * @minimum 0\n   * @maximum 1\n   */\n  bandPaddingOuter?: number;\n\n  /**\n   * Default padding for continuous scales.\n   *\n   * __Default:__ `5` for continuous x-scale of a vertical bar and continuous y-scale of a horizontal bar.; `0` otherwise.\n   *\n   * @minimum 0\n   */\n  continuousPadding?: number;\n\n  /**\n   * Default outer padding for `x` and `y` point-ordinal scales.\n   *\n   * __Default value:__ `0.5`\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  pointPadding?: number;\n\n  /**\n   * Use the source data range before aggregation as scale domain instead of aggregated data for aggregate axis.\n   *\n   * This is equivalent to setting `domain` to `\"unaggregate\"` for aggregated _quantitative_ fields by default.\n   *\n   * This property only works with aggregate functions that produce values within the raw data domain (`\"mean\"`, `\"average\"`, `\"median\"`, `\"q1\"`, `\"q3\"`, `\"min\"`, `\"max\"`). For other aggregations that produce values outside of the raw data domain (e.g. `\"count\"`, `\"sum\"`), this property is ignored.\n   *\n   * __Default value:__ `false`\n   */\n  useUnaggregatedDomain?: boolean;\n\n  // nice should depends on type (quantitative or temporal), so\n  // let's not make a config.\n\n  // Configs for Range\n\n  /**\n   * The default max value for mapping quantitative fields to bar's size/bandSize.\n   *\n   * If undefined (default), we will use the scale's `rangeStep` - 1.\n   * @minimum 0\n   */\n  maxBandSize?: number;\n\n  /**\n   * The default min value for mapping quantitative fields to bar and tick's size/bandSize scale with zero=false.\n   *\n   * __Default value:__ `2`\n   *\n   * @minimum 0\n   */\n  minBandSize?: number;\n\n  /**\n   * The default max value for mapping quantitative fields to text's size/fontSize.\n   *\n   * __Default value:__ `40`\n   *\n   * @minimum 0\n   */\n  maxFontSize?: number;\n\n  /**\n   * The default min value for mapping quantitative fields to tick's size/fontSize scale with zero=false\n   *\n   * __Default value:__ `8`\n   *\n   * @minimum 0\n   */\n  minFontSize?: number;\n\n  /**\n   * Default minimum opacity for mapping a field to opacity.\n   *\n   * __Default value:__ `0.3`\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  minOpacity?: number;\n\n  /**\n   * Default max opacity for mapping a field to opacity.\n   *\n   * __Default value:__ `0.8`\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  maxOpacity?: number;\n\n\n  /**\n   * Default minimum value for point size scale with zero=false.\n   *\n   * __Default value:__ `9`\n   *\n   * @minimum 0\n   */\n  minSize?: number;\n\n  /**\n   * Default max value for point size scale.\n   * @minimum 0\n   */\n  maxSize?: number;\n\n  /**\n   * Default minimum strokeWidth for strokeWidth (or rule/line's size) scale with zero=false.\n   *\n   * __Default value:__ `1`\n   *\n   * @minimum 0\n   */\n  minStrokeWidth?: number;\n\n  /**\n   * Default max strokeWidth for strokeWidth  (or rule/line's size) scale.\n   *\n   * __Default value:__ `4`\n   *\n   * @minimum 0\n   */\n  maxStrokeWidth?: number;\n}\n\nexport const defaultScaleConfig = {\n  textXRangeStep: 90,\n  rangeStep: 21,\n  pointPadding: 0.5,\n  bandPaddingInner: 0.1,\n  facetSpacing: 16,\n\n  minBandSize: 2,\n\n  minFontSize: 8,\n  maxFontSize: 40,\n\n  minOpacity: 0.3,\n  maxOpacity: 0.8,\n\n  // FIXME: revise if these *can* become ratios of rangeStep\n  minSize: 9, // Point size is area. For square point, 9 = 3 pixel ^ 2, not too small!\n\n  minStrokeWidth: 1,\n  maxStrokeWidth: 4\n};\n\nexport interface SchemeParams {\n  /**\n   * A color scheme name for sequential/ordinal scales (e.g., `\"category10\"` or `\"viridis\"`).\n   *\n   * For the full list of supported scheme, please refer to the [Vega Scheme](https://vega.github.io/vega/docs/schemes/#reference) reference.\n   */\n  name: string;\n\n  /**\n   * For sequential and diverging schemes only, determines the extent of the color range to use. For example `[0.2, 1]` will rescale the color scheme such that color values in the range _[0, 0.2)_ are excluded from the scheme.\n   */\n  extent?: number[];\n\n  /**\n   * The number of colors to use in the scheme. This can be useful for scale types such as `\"quantize\"`, which use the length of the scale range to determine the number of discrete bins for the scale domain.\n   *\n   * @hide\n   */\n  count?: number;\n}\n\nexport type SelectionDomain = {\n  /**\n   * The name of a selection.\n   */\n  selection: string,\n  /**\n   * The field name to extract selected values for, when a selection is [projected](project.html)\n   * over multiple fields or encodings.\n   */\n  field?: string\n} | {\n  /**\n   * The name of a selection.\n   */\n  selection: string,\n  /**\n   * The encoding channel to extract selected values for, when a selection is [projected](project.html)\n   * over multiple fields or encodings.\n   */\n  encoding?: string\n};\n\nexport type Domain = number[] | string[] | boolean[] | DateTime[] | 'unaggregated' | SelectionDomain;\nexport type Scheme = string | SchemeParams;\n\nexport type Range = number[] | string[] | string;\n\nexport function isExtendedScheme(scheme: string | SchemeParams): scheme is SchemeParams {\n  return scheme && !!scheme['name'];\n}\n\nexport function isSelectionDomain(domain: Domain): domain is SelectionDomain {\n  return domain && domain['selection'];\n}\n\nexport interface Scale {\n  /**\n   * The type of scale.  Vega-Lite supports the following categories of scale types:\n   *\n   * 1) [**Continuous Scales**](scale.html#continuous) -- mapping continuous domains to continuous output ranges ([`\"linear\"`](scale.html#linear), [`\"pow\"`](scale.html#pow), [`\"sqrt\"`](scale.html#sqrt), [`\"log\"`](scale.html#log), [`\"time\"`](scale.html#time), [`\"utc\"`](scale.html#utc), [`\"sequential\"`](scale.html#sequential)).\n   *\n   * 2) [**Discrete Scales**](scale.html#discrete) -- mapping discrete domains to discrete ([`\"ordinal\"`](scale.html#ordinal)) or continuous ([`\"band\"`](scale.html#band) and [`\"point\"`](scale.html#point)) output ranges.\n   *\n   * 3) [**Discretizing Scales**](scale.html#discretizing) -- mapping continuous domains to discrete output ranges ([`\"bin-linear\"`](scale.html#bin-linear) and [`\"bin-ordinal\"`](scale.html#bin-ordinal)).\n   *\n   * __Default value:__ please see the [scale type table](scale.html#type).\n   */\n  type?: ScaleType;\n\n  /**\n   * Customized domain values.\n   *\n   * For _quantitative_ fields, `domain` can take the form of a two-element array with minimum and maximum values.  [Piecewise scales](scale.html#piecewise) can be created by providing a `domain` with more than two entries.\n   * If the input field is aggregated, `domain` can also be a string value `\"unaggregated\"`, indicating that the domain should include the raw data values prior to the aggregation.\n   *\n   * For _temporal_ fields, `domain` can be a two-element array minimum and maximum values, in the form of either timestamps or the [DateTime definition objects](types.html#datetime).\n   *\n   * For _ordinal_ and _nominal_ fields, `domain` can be an array that lists valid input values.\n   *\n   * The `selection` property can be used to [interactively determine](selection.html#scale-domains) the scale domain.\n   */\n  domain?: number[] | string[] | boolean[] | DateTime[] | 'unaggregated' | SelectionDomain;\n\n\n  // Hide because we might not really need this.\n  /**\n   * If true, reverses the order of the scale range.\n   * __Default value:__ `false`.\n   *\n   * @hide\n   */\n  reverse?: boolean;\n\n  /**\n   * The range of the scale. One of:\n   *\n   * - A string indicating a [pre-defined named scale range](scale.html#range-config) (e.g., example, `\"symbol\"`, or `\"diverging\"`).\n   *\n   * - For [continuous scales](scale.html#continuous), two-element array indicating  minimum and maximum values, or an array with more than two entries for specifying a [piecewise scale](scale.html#piecewise).\n   *\n   * - For [discrete](scale.html#discrete) and [discretizing](scale.html#discretizing) scales, an array of desired output values.\n   *\n   * __Notes:__\n   *\n   * 1) For [sequential](scale.html#sequential), [ordinal](scale.html#ordinal), and discretizing color scales, you can also specify a color [`scheme`](scale.html#scheme) instead of `range`.\n   *\n   * 2) Any directly specified `range` for `x` and `y` channels will be ignored. Range can be customized via the view's corresponding [size](size.html) (`width` and `height`) or via [range steps and paddings properties](#range-step) for [band](#band) and [point](#point) scales.\n   */\n  range?: number[] | string[] | string;\n\n  // ordinal\n  /**\n   * The distance between the starts of adjacent bands or points in [band](scale.html#band) and [point](scale.html#point) scales.\n   *\n   * If `rangeStep` is `null` or if the view contains the scale's corresponding [size](size.html) (`width` for `x` scales and `height` for `y` scales), `rangeStep` will be automatically determined to fit the size of the view.\n   *\n   * __Default value:__  derived the [scale config](config.html#scale-config)'s `textXRangeStep` (`90` by default) for x-scales of `text` marks and `rangeStep` (`21` by default) for x-scales of other marks and y-scales.\n   *\n   * __Warning__: If `rangeStep` is `null` and the cardinality of the scale's domain is higher than `width` or `height`, the rangeStep might become less than one pixel and the mark might not appear correctly.\n   *\n   * @minimum 0\n   */\n  rangeStep?: number | null;\n\n  /**\n   * A string indicating a color [scheme](scale.html#scheme) name (e.g., `\"category10\"` or `\"viridis\"`) or a [scheme parameter object](scale.html#scheme-params).\n   *\n   * Discrete color schemes may be used with [discrete](scale.html#discrete) or [discretizing](scale.html#discretizing) scales. Continuous color schemes are intended for use with [sequential](scales.html#sequential) scales.\n   *\n   * For the full list of supported scheme, please refer to the [Vega Scheme](https://vega.github.io/vega/docs/schemes/#reference) reference.\n   */\n  scheme?: string | SchemeParams;\n\n  /**\n   * If `true`, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid.\n   *\n   * __Default value:__ `false`.\n   */\n  round?: boolean;\n\n  /**\n   * For _[continuous](scale.html#continuous)_ scales, expands the scale domain to accommodate the specified number of pixels on each of the scale range. The scale range must represent pixels for this parameter to function as intended. Padding adjustment is performed prior to all other adjustments, including the effects of the zero, nice, domainMin, and domainMax properties.\n   *\n   * For _[band](scale.html#band)_ scales, shortcut for setting `paddingInner` and `paddingOuter` to the same value.\n   *\n   * For _[point](scale.html#point)_ scales, alias for `paddingOuter`.\n   *\n   * __Default value:__ For _continuous_ scales, derived from the [scale config](scale.html#config)'s `continuousPadding`.\n   * For _band and point_ scales, see `paddingInner` and `paddingOuter`.\n   *\n   * @minimum 0\n   */\n  padding?: number;\n\n  /**\n   * The inner padding (spacing) within each band step of band scales, as a fraction of the step size. This value must lie in the range [0,1].\n   *\n   * For point scale, this property is invalid as point scales do not have internal band widths (only step sizes between bands).\n   *\n   * __Default value:__ derived from the [scale config](scale.html#config)'s `bandPaddingInner`.\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  paddingInner?: number;\n\n  /**\n   * The outer padding (spacing) at the ends of the range of band and point scales,\n   * as a fraction of the step size. This value must lie in the range [0,1].\n   *\n   * __Default value:__ derived from the [scale config](scale.html#config)'s `bandPaddingOuter` for band scales and `pointPadding` for point scales.\n   *\n   * @minimum 0\n   * @maximum 1\n   */\n  paddingOuter?: number;\n\n  // typical\n  /**\n   * If `true`, values that exceed the data domain are clamped to either the minimum or maximum range value\n   *\n   * __Default value:__ derived from the [scale config](config.html#scale-config)'s `clamp` (`true` by default).\n   */\n  clamp?: boolean;\n\n  /**\n   * Extending the domain so that it starts and ends on nice round values. This method typically modifies the scale’s domain, and may only extend the bounds to the nearest round value. Nicing is useful if the domain is computed from data and may be irregular. For example, for a domain of _[0.201479…, 0.996679…]_, a nice domain might be _[0.2, 1.0]_.\n   *\n   * For quantitative scales such as linear, `nice` can be either a boolean flag or a number. If `nice` is a number, it will represent a desired tick count. This allows greater control over the step size used to extend the bounds, guaranteeing that the returned ticks will exactly cover the domain.\n   *\n   * For temporal fields with time and utc scales, the `nice` value can be a string indicating the desired time interval. Legal values are `\"millisecond\"`, `\"second\"`, `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`. Alternatively, `time` and `utc` scales can accept an object-valued interval specifier of the form `{\"interval\": \"month\", \"step\": 3}`, which includes a desired number of interval steps. Here, the domain would snap to quarter (Jan, Apr, Jul, Oct) boundaries.\n   *\n   * __Default value:__ `true` for unbinned _quantitative_ fields; `false` otherwise.\n   *\n   */\n  nice?: boolean | number | NiceTime | {interval: string, step: number};\n\n  /**\n   * The logarithm base of the `log` scale (default `10`).\n   */\n  base?: number;\n\n  /**\n   * The exponent of the `pow` scale.\n   */\n  exponent?: number;\n\n  /**\n   * If `true`, ensures that a zero baseline value is included in the scale domain.\n   *\n   * __Default value:__ `true` for x and y channels if the quantitative field is not binned and no custom `domain` is provided; `false` otherwise.\n   *\n   * __Note:__ Log, time, and utc scales do not support `zero`.\n   */\n  zero?: boolean;\n\n  /**\n   * The interpolation method for range values. By default, a general interpolator for numbers, dates, strings and colors (in RGB space) is used. For color ranges, this property allows interpolation in alternative color spaces. Legal values include `rgb`, `hsl`, `hsl-long`, `lab`, `hcl`, `hcl-long`, `cubehelix` and `cubehelix-long` ('-long' variants use longer paths in polar coordinate spaces). If object-valued, this property accepts an object with a string-valued _type_ property and an optional numeric _gamma_ property applicable to rgb and cubehelix interpolators. For more, see the [d3-interpolate documentation](https://github.com/d3/d3-interpolate).\n   *\n   * __Note:__ Sequential scales do not support `interpolate` as they have a fixed interpolator.  Since Vega-Lite uses sequential scales for quantitative fields by default, you have to set the scale `type` to other quantitative scale type such as `\"linear\"` to customize `interpolate`.\n   */\n  interpolate?: ScaleInterpolate | ScaleInterpolateParams;\n}\n\nconst SCALE_PROPERTY_INDEX: Flag<keyof Scale> = {\n  type: 1,\n  domain: 1,\n  range: 1,\n  rangeStep: 1,\n  scheme: 1,\n  // Other properties\n  reverse: 1,\n  round: 1,\n  // quantitative / time\n  clamp: 1,\n  nice: 1,\n  // quantitative\n  base: 1,\n  exponent: 1,\n  interpolate: 1,\n  zero: 1, // zero depends on domain\n  // band/point\n  padding: 1,\n  paddingInner: 1,\n  paddingOuter: 1\n};\n\nexport const SCALE_PROPERTIES = flagKeys(SCALE_PROPERTY_INDEX);\n\nconst {type, domain, range, rangeStep, scheme, ...NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTY_INDEX} = SCALE_PROPERTY_INDEX;\n\nexport const NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES = flagKeys(NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTY_INDEX);\n\nexport function scaleTypeSupportProperty(scaleType: ScaleType, propName: keyof Scale) {\n  switch (propName) {\n    case 'type':\n    case 'domain':\n    case 'reverse':\n    case 'range':\n      return true;\n    case 'scheme':\n      return contains(['sequential', 'ordinal', 'bin-ordinal', 'quantile', 'quantize'], scaleType);\n    case 'interpolate':\n      // FIXME(https://github.com/vega/vega-lite/issues/2902) how about ordinal?\n      return contains(['linear', 'bin-linear', 'pow', 'log', 'sqrt', 'utc', 'time'], scaleType);\n    case 'round':\n      return isContinuousToContinuous(scaleType) || scaleType === 'band' || scaleType === 'point';\n    case 'padding':\n      return isContinuousToContinuous(scaleType) || contains(['point', 'band'], scaleType);\n    case 'paddingOuter':\n    case 'rangeStep':\n      return contains(['point', 'band'], scaleType);\n    case 'paddingInner':\n      return scaleType === 'band';\n    case 'clamp':\n      return isContinuousToContinuous(scaleType) || scaleType === 'sequential';\n    case 'nice':\n      return isContinuousToContinuous(scaleType) || scaleType === 'sequential' || scaleType as any === 'quantize';\n    case 'exponent':\n      return scaleType === 'pow';\n    case 'base':\n      return scaleType === 'log';\n    case 'zero':\n      return hasContinuousDomain(scaleType) && !contains([\n        'log',  // log scale cannot have zero value\n        'time', 'utc', // zero is not meaningful for time\n        'bin-linear', // binning should not automatically add zero\n        'threshold', // threshold requires custom domain so zero does not matter\n        'quantile' // quantile depends on distribution so zero does not matter\n      ], scaleType);\n  }\n  /* istanbul ignore next: should never reach here*/\n  throw new Error(`Invalid scale property ${propName}.`);\n}\n\n/**\n * Returns undefined if the input channel supports the input scale property name\n */\nexport function channelScalePropertyIncompatability(channel: Channel, propName: keyof Scale): string {\n  switch (propName) {\n    case 'interpolate':\n    case 'scheme':\n      if (channel !== 'color') {\n        return log.message.cannotUseScalePropertyWithNonColor(channel);\n      }\n      return undefined;\n    case 'type':\n    case 'domain':\n    case 'range':\n    case 'base':\n    case 'exponent':\n    case 'nice':\n    case 'padding':\n    case 'paddingInner':\n    case 'paddingOuter':\n    case 'rangeStep':\n    case 'reverse':\n    case 'round':\n    case 'clamp':\n    case 'zero':\n      return undefined; // GOOD!\n  }\n  /* istanbul ignore next: it should never reach here */\n  throw new Error(`Invalid scale property \"${propName}\".`);\n}\n\nexport function channelSupportScaleType(channel: Channel, scaleType: ScaleType): boolean {\n  switch (channel) {\n    case Channel.X:\n    case Channel.Y:\n    case Channel.SIZE: // TODO: size and opacity can support ordinal with more modification\n    case Channel.OPACITY:\n      // Although it generally doesn't make sense to use band with size and opacity,\n      // it can also work since we use band: 0.5 to get midpoint.\n      return isContinuousToContinuous(scaleType) || contains(['band', 'point'], scaleType);\n    case Channel.COLOR:\n      return scaleType !== 'band';    // band does not make sense with color\n    case Channel.SHAPE:\n      return scaleType === 'ordinal'; // shape = lookup only\n  }\n  /* istanbul ignore next: it should never reach here */\n  return false;\n}\n","import {COLUMN, ROW, X, X2, Y, Y2} from './channel';\nimport * as compositeMark from './compositemark';\nimport {Config, OverlayConfig} from './config';\nimport {Data} from './data';\nimport {channelHasField, Encoding, EncodingWithFacet, isRanged} from './encoding';\nimport * as vlEncoding from './encoding';\nimport {FacetMapping} from './facet';\nimport {Field, FieldDef, RepeatRef} from './fielddef';\nimport * as log from './log';\nimport {AnyMark, AREA, isPrimitiveMark, LINE, Mark, MarkDef} from './mark';\nimport {Projection} from './projection';\nimport {Repeat} from './repeat';\nimport {Resolve} from './resolve';\nimport {SelectionDef} from './selection';\nimport {stack} from './stack';\nimport {TitleParams} from './title';\nimport {TopLevelProperties} from './toplevelprops';\nimport {Transform} from './transform';\nimport {contains, Dict, duplicate, hash, vals} from './util';\n\n\nexport type TopLevel<S extends BaseSpec> = S & TopLevelProperties & {\n  /**\n   * URL to [JSON schema](http://json-schema.org/) for a Vega-Lite specification. Unless you have a reason to change this, use `https://vega.github.io/schema/vega-lite/v2.json`. Setting the `$schema` property allows automatic validation and autocomplete in editors that support JSON schema.\n   * @format uri\n   */\n  $schema?: string;\n\n  /**\n   * Vega-Lite configuration object.  This property can only be defined at the top-level of a specification.\n   */\n  config?: Config;\n};\n\nexport interface BaseSpec {\n  /**\n   * Title for the plot.\n   */\n  title?: string | TitleParams;\n\n  /**\n   * Name of the visualization for later reference.\n   */\n  name?: string;\n\n  /**\n   * Description of this mark for commenting purpose.\n   */\n  description?: string;\n\n  /**\n   * An object describing the data source\n   */\n  data?: Data;\n\n  /**\n   * An array of data transformations such as filter and new field calculation.\n   */\n  transform?: Transform[];\n}\n\n// TODO(https://github.com/vega/vega-lite/issues/2503): Make this generic so we can support some form of top-down sizing.\nexport interface LayoutSizeMixins {\n  /**\n   * The width of a visualization.\n   *\n   * __Default value:__ This will be determined by the following rules:\n   *\n   * - If a view's [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `\"fit\"` or its x-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n   * - For x-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the width is [determined by the range step, paddings, and the cardinality of the field mapped to x-channel](https://vega.github.io/vega-lite/docs/scale.html#band).   Otherwise, if the `rangeStep` is `null`, the width will be the value of [`config.view.width`](https://vega.github.io/vega-lite/docs/spec.html#config).\n   * - If no field is mapped to `x` channel, the `width` will be the value of [`config.scale.textXRangeStep`](https://vega.github.io/vega-lite/docs/size.html#default-width-and-height) for `text` mark and the value of `rangeStep` for other marks.\n   *\n   * __Note:__ For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the width of a single view.\n   *\n   * __See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.\n   */\n  width?: number;\n\n  /**\n   * The height of a visualization.\n   *\n   * __Default value:__\n   * - If a view's [`autosize`](https://vega.github.io/vega-lite/docs/size.html#autosize) type is `\"fit\"` or its y-channel has a [continuous scale](https://vega.github.io/vega-lite/docs/scale.html#continuous), the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n   * - For y-axis with a band or point scale: if [`rangeStep`](https://vega.github.io/vega-lite/docs/scale.html#band) is a numeric value or unspecified, the height is [determined by the range step, paddings, and the cardinality of the field mapped to y-channel](https://vega.github.io/vega-lite/docs/scale.html#band). Otherwise, if the `rangeStep` is `null`, the height will be the value of [`config.view.height`](https://vega.github.io/vega-lite/docs/spec.html#config).\n   * - If no field is mapped to `y` channel, the `height` will be the value of `rangeStep`.\n   *\n   * __Note__: For plots with [`row` and `column` channels](https://vega.github.io/vega-lite/docs/encoding.html#facet), this represents the height of a single view.\n   *\n   * __See also:__ The documentation for [width and height](https://vega.github.io/vega-lite/docs/size.html) contains more examples.\n   */\n  height?: number;\n}\n\nexport interface GenericUnitSpec<E extends Encoding<any>, M> extends BaseSpec, LayoutSizeMixins {\n\n  /**\n   * A string describing the mark type (one of `\"bar\"`, `\"circle\"`, `\"square\"`, `\"tick\"`, `\"line\"`,\n   * * `\"area\"`, `\"point\"`, `\"rule\"`, `\"geoshape\"`, and `\"text\"`) or a [mark definition object](https://vega.github.io/vega-lite/docs/mark.html#mark-def).\n   */\n  mark: M;\n\n  /**\n   * A key-value mapping between encoding channels and definition of fields.\n   */\n  encoding?: E;\n\n  /**\n   * An object defining properties of geographic projection.\n   *\n   * Works with `\"geoshape\"` marks and `\"point\"` or `\"line\"` marks that have a channel (one or more of `\"X\"`, `\"X2\"`, `\"Y\"`, `\"Y2\"`) with type `\"latitude\"`, or `\"longitude\"`.\n   */\n  projection?: Projection;\n\n  /**\n   * A key-value mapping between selection names and definitions.\n   */\n  selection?: {[name: string]: SelectionDef};\n}\n\nexport type UnitSpec = GenericUnitSpec<Encoding<string | RepeatRef>, Mark | MarkDef>;\n\n/**\n * Unit spec that can have a composite mark.\n */\nexport type CompositeUnitSpec = GenericUnitSpec<Encoding<string | RepeatRef>, AnyMark>;\n\n/**\n * Unit spec that can have a composite mark and row or column channels.\n */\nexport type FacetedCompositeUnitSpec = GenericUnitSpec<EncodingWithFacet<string | RepeatRef>, AnyMark>;\n\nexport interface GenericLayerSpec<U extends GenericUnitSpec<any, any>> extends BaseSpec, LayoutSizeMixins {\n  /**\n   * Layer or single view specifications to be layered.\n   *\n   * __Note__: Specifications inside `layer` cannot use `row` and `column` channels as layering facet specifications is not allowed.\n   */\n  layer: (GenericLayerSpec<U> | U)[];\n\n  /**\n   * Scale, axis, and legend resolutions for layers.\n   */\n  resolve?: Resolve;\n}\n\nexport type LayerSpec = GenericLayerSpec<UnitSpec>;\n\nexport interface GenericFacetSpec<U extends GenericUnitSpec<any, any>> extends BaseSpec {\n  /**\n   * An object that describes mappings between `row` and `column` channels and their field definitions.\n   */\n  facet: FacetMapping<string | RepeatRef>;\n\n  /**\n   * A specification of the view that gets faceted.\n   */\n  spec: GenericLayerSpec<U> | U;\n  // TODO: replace this with GenericSpec<U> once we support all cases;\n\n  /**\n   * Scale, axis, and legend resolutions for facets.\n   */\n  resolve?: Resolve;\n}\n\nexport type FacetSpec = GenericFacetSpec<UnitSpec>;\n\nexport interface GenericRepeatSpec<U extends GenericUnitSpec<any, any>> extends BaseSpec {\n  /**\n   * An object that describes what fields should be repeated into views that are laid out as a `row` or `column`.\n   */\n  repeat: Repeat;\n\n  spec: GenericSpec<U>;\n\n  /**\n   * Scale and legend resolutions for repeated charts.\n   */\n  resolve?: Resolve;\n}\n\nexport type RepeatSpec = GenericRepeatSpec<UnitSpec>;\n\nexport interface GenericVConcatSpec<U extends GenericUnitSpec<any, any>> extends BaseSpec {\n  /**\n   * A list of views that should be concatenated and put into a column.\n   */\n  vconcat: (GenericSpec<U>)[];\n\n  /**\n   * Scale, axis, and legend resolutions for vertically concatenated charts.\n   */\n  resolve?: Resolve;\n}\n\nexport interface GenericHConcatSpec<U extends GenericUnitSpec<any, any>> extends BaseSpec {\n  /**\n   * A list of views that should be concatenated and put into a row.\n   */\n  hconcat: (GenericSpec<U>)[];\n\n  /**\n   * Scale, axis, and legend resolutions for horizontally concatenated charts.\n   */\n  resolve?: Resolve;\n}\n\nexport type ConcatSpec = GenericVConcatSpec<UnitSpec> | GenericHConcatSpec<UnitSpec>;\n\nexport type GenericSpec<U extends GenericUnitSpec<any, any>> = U | GenericLayerSpec<U> | GenericFacetSpec<U> | GenericRepeatSpec<U> | GenericVConcatSpec<U> | GenericHConcatSpec<U>;\n\nexport type Spec = GenericSpec<UnitSpec>;\n\nexport type TopLevelExtendedSpec = TopLevel<FacetedCompositeUnitSpec> | TopLevel<GenericLayerSpec<CompositeUnitSpec>> | TopLevel<GenericFacetSpec<CompositeUnitSpec>> | TopLevel<GenericRepeatSpec<CompositeUnitSpec>> | TopLevel<GenericVConcatSpec<CompositeUnitSpec>> | TopLevel<GenericHConcatSpec<CompositeUnitSpec>>;\n\n/* Custom type guards */\n\n\nexport function isFacetSpec(spec: BaseSpec): spec is GenericFacetSpec<GenericUnitSpec<any, any>> {\n  return spec['facet'] !== undefined;\n}\n\nexport function isUnitSpec(spec: BaseSpec): spec is FacetedCompositeUnitSpec | UnitSpec {\n  return !!spec['mark'];\n}\n\nexport function isLayerSpec(spec: BaseSpec): spec is GenericLayerSpec<GenericUnitSpec<any, any>> {\n  return spec['layer'] !== undefined;\n}\n\nexport function isRepeatSpec(spec: BaseSpec): spec is GenericRepeatSpec<GenericUnitSpec<any, any>> {\n  return spec['repeat'] !== undefined;\n}\n\nexport function isConcatSpec(spec: BaseSpec): spec is GenericVConcatSpec<GenericUnitSpec<any, any>> | GenericHConcatSpec<GenericUnitSpec<any, any>> {\n  return isVConcatSpec(spec) || isHConcatSpec(spec);\n}\n\nexport function isVConcatSpec(spec: BaseSpec): spec is GenericVConcatSpec<GenericUnitSpec<any, any>> {\n  return spec['vconcat'] !== undefined;\n}\n\nexport function isHConcatSpec(spec: BaseSpec): spec is GenericHConcatSpec<GenericUnitSpec<any, any>> {\n  return spec['hconcat'] !== undefined;\n}\n\n/**\n * Decompose extended unit specs into composition of pure unit specs.\n */\n// TODO: consider moving this to another file.  Maybe vl.spec.normalize or vl.normalize\nexport function normalize(spec: TopLevelExtendedSpec, config: Config): Spec {\n  if (isFacetSpec(spec)) {\n    return normalizeFacet(spec, config);\n  }\n  if (isLayerSpec(spec)) {\n    return normalizeLayer(spec, config);\n  }\n  if (isRepeatSpec(spec)) {\n    return normalizeRepeat(spec, config);\n  }\n  if (isVConcatSpec(spec)) {\n    return normalizeVConcat(spec, config);\n  }\n  if (isHConcatSpec(spec)) {\n    return normalizeHConcat(spec, config);\n  }\n  if (isUnitSpec(spec)) {\n    const hasRow = channelHasField(spec.encoding, ROW);\n    const hasColumn = channelHasField(spec.encoding, COLUMN);\n\n    if (hasRow || hasColumn) {\n      return normalizeFacetedUnit(spec, config);\n    }\n    return normalizeNonFacetUnit(spec, config);\n  }\n  throw new Error(log.message.INVALID_SPEC);\n}\n\nfunction normalizeFacet(spec: GenericFacetSpec<CompositeUnitSpec>, config: Config): FacetSpec {\n  const {spec: subspec, ...rest} = spec;\n  return {\n    ...rest,\n    // TODO: remove \"any\" once we support all facet listed in https://github.com/vega/vega-lite/issues/2760\n    spec: normalize(subspec, config) as any\n  };\n}\n\nfunction normalizeLayer(spec: GenericLayerSpec<CompositeUnitSpec>, config: Config): LayerSpec {\n  const {layer: layer, ...rest} = spec;\n  return {\n    ...rest,\n    layer: layer.map((subspec) => isLayerSpec(subspec) ? normalizeLayer(subspec, config) : normalizeNonFacetUnit(subspec, config))\n  };\n}\n\nfunction normalizeRepeat(spec: GenericRepeatSpec<CompositeUnitSpec>, config: Config): RepeatSpec {\n  const {spec: subspec, ...rest} = spec;\n  return {\n    ...rest,\n    spec: normalize(subspec, config)\n  };\n}\n\nfunction normalizeVConcat(spec: GenericVConcatSpec<CompositeUnitSpec>, config: Config): ConcatSpec {\n  const {vconcat: vconcat, ...rest} = spec;\n  return {\n    ...rest,\n    vconcat: vconcat.map((subspec) => normalize(subspec, config))\n  };\n}\n\nfunction normalizeHConcat(spec: GenericHConcatSpec<CompositeUnitSpec>, config: Config): ConcatSpec {\n  const {hconcat: hconcat, ...rest} = spec;\n  return {\n    ...rest,\n    hconcat: hconcat.map((subspec) => normalize(subspec, config))\n  };\n}\n\nfunction normalizeFacetedUnit(spec: FacetedCompositeUnitSpec, config: Config): FacetSpec {\n  // New encoding in the inside spec should not contain row / column\n  // as row/column should be moved to facet\n  const {row: row, column: column, ...encoding} = spec.encoding;\n\n  // Mark and encoding should be moved into the inner spec\n  const {mark, width, projection, height, selection, encoding: _, ...outerSpec} = spec;\n\n  return {\n    ...outerSpec,\n    facet: {\n      ...(row ? {row} : {}),\n      ...(column ? {column}: {}),\n    },\n    spec: normalizeNonFacetUnit({\n      ...(projection ? {projection} : {}),\n      mark,\n      ...(width ? {width} : {}),\n      ...(height ? {height} : {}),\n      encoding,\n      ...(selection ? {selection} : {})\n    }, config)\n  };\n}\n\nfunction isNonFacetUnitSpecWithPrimitiveMark(spec: GenericUnitSpec<Encoding<Field>, AnyMark>):\n  spec is GenericUnitSpec<Encoding<Field>, Mark> {\n    return isPrimitiveMark(spec.mark);\n}\n\n\nfunction normalizeNonFacetUnit(spec: GenericUnitSpec<Encoding<Field>, AnyMark>, config: Config) {\n  if (isNonFacetUnitSpecWithPrimitiveMark(spec)) {\n    // TODO: thoroughly test\n    if (isRanged(spec.encoding)) {\n      return normalizeRangedUnit(spec);\n    }\n\n    const overlayConfig: OverlayConfig = config && config.overlay;\n    const overlayWithLine = overlayConfig && spec.mark === AREA &&\n      contains(['linepoint', 'line'], overlayConfig.area);\n    const overlayWithPoint = overlayConfig && (\n      (overlayConfig.line && spec.mark === LINE) ||\n      (overlayConfig.area === 'linepoint' && spec.mark === AREA)\n    );\n    // TODO: consider moving this to become another case of compositeMark\n    if (overlayWithPoint || overlayWithLine) {\n      return normalizeOverlay(spec, overlayWithPoint, overlayWithLine, config);\n    }\n\n    return spec; // Nothing to normalize\n  } else {\n    return compositeMark.normalize(spec, config);\n  }\n}\n\nfunction normalizeRangedUnit(spec: UnitSpec) {\n  const hasX = channelHasField(spec.encoding, X);\n  const hasY = channelHasField(spec.encoding, Y);\n  const hasX2 = channelHasField(spec.encoding, X2);\n  const hasY2 = channelHasField(spec.encoding, Y2);\n  if ((hasX2 && !hasX) || (hasY2 && !hasY)) {\n    const normalizedSpec = duplicate(spec);\n    if (hasX2 && !hasX) {\n      normalizedSpec.encoding.x = normalizedSpec.encoding.x2;\n      delete normalizedSpec.encoding.x2;\n    }\n    if (hasY2 && !hasY) {\n      normalizedSpec.encoding.y = normalizedSpec.encoding.y2;\n      delete normalizedSpec.encoding.y2;\n    }\n\n    return normalizedSpec;\n  }\n  return spec;\n}\n\n\n// FIXME(#1804): re-design this\nfunction normalizeOverlay(spec: UnitSpec, overlayWithPoint: boolean, overlayWithLine: boolean, config: Config): LayerSpec {\n  // _ is used to denote a dropped property of the unit spec\n  // which should not be carried over to the layer spec\n  const {mark, selection, projection, encoding, ...outerSpec} = spec;\n  const layer = [{mark, encoding} as UnitSpec];\n\n  // Need to copy stack config to overlayed layer\n  const stackProps = stack(mark, encoding, config ? config.stack : undefined);\n\n  let overlayEncoding = encoding;\n  if (stackProps) {\n    const {fieldChannel: stackFieldChannel, offset} = stackProps;\n    overlayEncoding = {\n      ...encoding,\n      [stackFieldChannel]: {\n        ...encoding[stackFieldChannel],\n        ...(offset ? {stack: offset} : {})\n      }\n    };\n  }\n\n  if (overlayWithLine) {\n    layer.push({\n      ...(projection ? {projection} : {}),\n      mark: {\n        type: 'line',\n        style: 'lineOverlay'\n      },\n      ...(selection ? {selection} : {}),\n      encoding: overlayEncoding\n    });\n  }\n  if (overlayWithPoint) {\n    layer.push({\n      ...(projection ? {projection} : {}),\n      mark: {\n        type: 'point',\n        filled: true,\n        style: 'pointOverlay'\n      },\n      ...(selection ? {selection} : {}),\n      encoding: overlayEncoding\n    });\n  }\n\n  return {\n    ...outerSpec,\n    layer\n  };\n}\n\n// TODO: add vl.spec.validate & move stuff from vl.validate to here\n\n/* Accumulate non-duplicate fieldDefs in a dictionary */\nfunction accumulate(dict: any, defs: FieldDef<Field>[]): any {\n  defs.forEach(function(fieldDef) {\n    // Consider only pure fieldDef properties (ignoring scale, axis, legend)\n    const pureFieldDef = ['field', 'type', 'value', 'timeUnit', 'bin', 'aggregate'].reduce((f, key) => {\n      if (fieldDef[key] !== undefined) {\n        f[key] = fieldDef[key];\n      }\n      return f;\n    }, {});\n    const key = hash(pureFieldDef);\n    dict[key] = dict[key] || fieldDef;\n  });\n  return dict;\n}\n\n/* Recursively get fieldDefs from a spec, returns a dictionary of fieldDefs */\nfunction fieldDefIndex<T>(spec: GenericSpec<GenericUnitSpec<any, any>>, dict: Dict<FieldDef<T>> = {}): Dict<FieldDef<T>> {\n  // FIXME(https://github.com/vega/vega-lite/issues/2207): Support fieldDefIndex for repeat\n  if (isLayerSpec(spec)) {\n    spec.layer.forEach(layer => {\n      if (isUnitSpec(layer)) {\n        accumulate(dict, vlEncoding.fieldDefs(layer.encoding));\n      } else {\n        fieldDefIndex(layer, dict);\n      }\n    });\n  } else if (isFacetSpec(spec)) {\n    accumulate(dict, vlEncoding.fieldDefs(spec.facet));\n    fieldDefIndex(spec.spec, dict);\n  } else if (isRepeatSpec(spec)) {\n    fieldDefIndex(spec.spec, dict);\n  } else if (isConcatSpec(spec)) {\n    const childSpec = isVConcatSpec(spec) ? spec.vconcat : spec.hconcat;\n    childSpec.forEach(child => fieldDefIndex(child, dict));\n  } else { // Unit Spec\n    accumulate(dict, vlEncoding.fieldDefs(spec.encoding));\n  }\n  return dict;\n}\n\n/* Returns all non-duplicate fieldDefs in a spec in a flat array */\nexport function fieldDefs(spec: GenericSpec<GenericUnitSpec<any, any>>): FieldDef<any>[] {\n  return vals(fieldDefIndex(spec));\n}\n\nexport function isStacked(spec: TopLevel<FacetedCompositeUnitSpec>, config?: Config): boolean {\n  config = config || spec.config;\n  if (isPrimitiveMark(spec.mark)) {\n    return stack(spec.mark, spec.encoding,\n            config ? config.stack : undefined\n          ) !== null;\n  }\n  return false;\n}\n","import {SUM_OPS} from './aggregate';\nimport {NONPOSITION_CHANNELS, NonPositionChannel, X, X2, Y2} from './channel';\nimport {channelHasField, Encoding} from './encoding';\nimport {Field, FieldDef, getFieldDef, isFieldDef, isStringFieldDef, PositionFieldDef, vgField} from './fielddef';\nimport * as log from './log';\nimport {AREA, BAR, CIRCLE, isMarkDef, LINE, Mark, MarkDef, POINT, RULE, SQUARE, TEXT, TICK} from './mark';\nimport {ScaleType} from './scale';\nimport {contains, Flag, isArray} from './util';\n\n\nexport type StackOffset = 'zero' | 'center' | 'normalize';\n\nconst STACK_OFFSET_INDEX: Flag<StackOffset> = {\n  zero: 1,\n  center: 1,\n  normalize: 1\n};\n\nexport function isStackOffset(s: string): s is StackOffset {\n  return !!STACK_OFFSET_INDEX[s];\n}\n\nexport interface StackProperties {\n  /** Dimension axis of the stack. */\n  groupbyChannel: 'x' | 'y';\n\n  /** Measure axis of the stack. */\n  fieldChannel: 'x' | 'y';\n\n  /** Stack-by fields e.g., color, detail */\n  stackBy: {\n    fieldDef: FieldDef<string>,\n    channel: NonPositionChannel\n  }[];\n\n  /**\n   * See `\"stack\"` property of Position Field Def.\n   */\n  offset: StackOffset;\n\n  /**\n   * Whether this stack will produce impute transform\n   */\n  impute: boolean;\n}\n\nexport const STACKABLE_MARKS = [BAR, AREA, RULE, POINT, CIRCLE, SQUARE, LINE, TEXT, TICK];\nexport const STACK_BY_DEFAULT_MARKS = [BAR, AREA];\n\n\nfunction potentialStackedChannel(encoding: Encoding<Field>): 'x' | 'y' | undefined {\n  const xDef = encoding.x;\n  const yDef = encoding.y;\n\n  if (isFieldDef(xDef) && isFieldDef(yDef)) {\n    if (xDef.type === 'quantitative' && yDef.type === 'quantitative') {\n      if (xDef.stack) {\n        return 'x';\n      } else if (yDef.stack) {\n        return 'y';\n      }\n      // if there is no explicit stacking, only apply stack if there is only one aggregate for x or y\n      if ((!!xDef.aggregate) !== (!!yDef.aggregate)) {\n        return xDef.aggregate ? 'x' : 'y';\n      }\n    } else if (xDef.type === 'quantitative') {\n      return 'x';\n    } else if (yDef.type === 'quantitative') {\n      return 'y';\n    }\n  } else if (isFieldDef(xDef) && xDef.type === 'quantitative') {\n    return 'x';\n  } else if (isFieldDef(yDef) && yDef.type === 'quantitative') {\n    return 'y';\n  }\n  return undefined;\n}\n\n// Note: CompassQL uses this method and only pass in required properties of each argument object.\n// If required properties change, make sure to update CompassQL.\nexport function stack(m: Mark | MarkDef, encoding: Encoding<Field>, stackConfig: StackOffset): StackProperties {\n  const mark = isMarkDef(m) ? m.type : m;\n  // Should have stackable mark\n  if (!contains(STACKABLE_MARKS, mark)) {\n    return null;\n  }\n\n  const fieldChannel = potentialStackedChannel(encoding);\n  if (!fieldChannel) {\n    return null;\n  }\n\n  const stackedFieldDef = encoding[fieldChannel] as PositionFieldDef<string>;\n  const stackedField = isStringFieldDef(stackedFieldDef) ? vgField(stackedFieldDef, {}) : undefined;\n\n  const dimensionChannel = fieldChannel === 'x' ? 'y' : 'x';\n  const dimensionDef = encoding[dimensionChannel];\n  const dimensionField = isStringFieldDef(dimensionDef) ? vgField(dimensionDef, {}) : undefined;\n\n  // Should have grouping level of detail that is different from the dimension field\n  const stackBy = NONPOSITION_CHANNELS.reduce((sc, channel) => {\n    if (channelHasField(encoding, channel)) {\n      const channelDef = encoding[channel];\n      (isArray(channelDef) ? channelDef : [channelDef]).forEach((cDef) => {\n        const fieldDef = getFieldDef(cDef);\n        if (fieldDef.aggregate) {\n          return;\n        }\n\n        // Check whether the channel's field is identical to x/y's field or if the channel is a repeat\n        const f = isStringFieldDef(fieldDef) ? vgField(fieldDef, {}) : undefined;\n        if (\n          // if fielddef is a repeat, just include it in the stack by\n          !f ||\n          // otherwise, the field must be different from x and y fields.\n          (f !== dimensionField && f !== stackedField)\n        ) {\n          sc.push({channel, fieldDef});\n        }\n      });\n    }\n    return sc;\n  }, []);\n\n  if (stackBy.length === 0) {\n    return null;\n  }\n\n  // Automatically determine offset\n  let offset: StackOffset = undefined;\n  if (stackedFieldDef.stack !== undefined) {\n    offset = stackedFieldDef.stack;\n  } else if (contains(STACK_BY_DEFAULT_MARKS, mark)) {\n    // Bar and Area with sum ops are automatically stacked by default\n    offset = stackConfig === undefined ? 'zero' : stackConfig;\n  } else {\n    offset = stackConfig;\n  }\n\n  if (!offset || !isStackOffset(offset)) {\n    return null;\n  }\n\n  // If stacked, check scale type if it is linear\n  if (stackedFieldDef.scale && stackedFieldDef.scale.type && stackedFieldDef.scale.type !== ScaleType.LINEAR) {\n    log.warn(log.message.cannotStackNonLinearScale(stackedFieldDef.scale.type));\n    return null;\n  }\n\n  // Check if it is a ranged mark\n  if (channelHasField(encoding, fieldChannel === X ? X2 : Y2)) {\n    log.warn(log.message.cannotStackRangedMark(fieldChannel));\n    return null;\n  }\n\n  // Warn if stacking summative aggregate\n  if (stackedFieldDef.aggregate && !contains(SUM_OPS, stackedFieldDef.aggregate)) {\n    log.warn(log.message.stackNonSummativeAggregate(stackedFieldDef.aggregate));\n  }\n\n  return {\n    groupbyChannel: dimensionDef ? dimensionChannel : undefined,\n    fieldChannel,\n    impute: contains(['area', 'line'], mark),\n    stackBy,\n    offset\n  };\n}\n","import {DateTimeExpr, dateTimeExpr} from './datetime';\nimport * as log from './log';\nimport {accessPath, Flag, flagKeys} from './util';\n\nexport namespace TimeUnit {\n  export const YEAR: 'year' = 'year';\n  export const MONTH: 'month' = 'month';\n  export const DAY: 'day' = 'day';\n  export const DATE: 'date' = 'date';\n  export const HOURS: 'hours' = 'hours';\n  export const MINUTES: 'minutes' = 'minutes';\n  export const SECONDS: 'seconds' = 'seconds';\n  export const MILLISECONDS: 'milliseconds' = 'milliseconds';\n  export const YEARMONTH: 'yearmonth' = 'yearmonth';\n  export const YEARMONTHDATE: 'yearmonthdate' = 'yearmonthdate';\n  export const YEARMONTHDATEHOURS: 'yearmonthdatehours' = 'yearmonthdatehours';\n  export const YEARMONTHDATEHOURSMINUTES: 'yearmonthdatehoursminutes' = 'yearmonthdatehoursminutes';\n  export const YEARMONTHDATEHOURSMINUTESSECONDS: 'yearmonthdatehoursminutesseconds' = 'yearmonthdatehoursminutesseconds';\n\n  // MONTHDATE always include 29 February since we use year 0th (which is a leap year);\n  export const MONTHDATE: 'monthdate' = 'monthdate';\n  export const HOURSMINUTES: 'hoursminutes' = 'hoursminutes';\n  export const HOURSMINUTESSECONDS: 'hoursminutesseconds' = 'hoursminutesseconds';\n  export const MINUTESSECONDS: 'minutesseconds' = 'minutesseconds';\n  export const SECONDSMILLISECONDS: 'secondsmilliseconds' = 'secondsmilliseconds';\n  export const QUARTER: 'quarter' = 'quarter';\n  export const YEARQUARTER: 'yearquarter' = 'yearquarter';\n  export const QUARTERMONTH: 'quartermonth' = 'quartermonth';\n  export const YEARQUARTERMONTH: 'yearquartermonth' = 'yearquartermonth';\n  export const UTCYEAR: 'utcyear' = 'utcyear';\n  export const UTCMONTH: 'utcmonth' = 'utcmonth';\n  export const UTCDAY: 'utcday' = 'utcday';\n  export const UTCDATE: 'utcdate' = 'utcdate';\n  export const UTCHOURS: 'utchours' = 'utchours';\n  export const UTCMINUTES: 'utcminutes' = 'utcminutes';\n  export const UTCSECONDS: 'utcseconds' = 'utcseconds';\n  export const UTCMILLISECONDS: 'utcmilliseconds' = 'utcmilliseconds';\n  export const UTCYEARMONTH: 'utcyearmonth' = 'utcyearmonth';\n  export const UTCYEARMONTHDATE: 'utcyearmonthdate' = 'utcyearmonthdate';\n  export const UTCYEARMONTHDATEHOURS: 'utcyearmonthdatehours' = 'utcyearmonthdatehours';\n  export const UTCYEARMONTHDATEHOURSMINUTES: 'utcyearmonthdatehoursminutes' = 'utcyearmonthdatehoursminutes';\n  export const UTCYEARMONTHDATEHOURSMINUTESSECONDS: 'utcyearmonthdatehoursminutesseconds' = 'utcyearmonthdatehoursminutesseconds';\n\n  // MONTHDATE always include 29 February since we use year 0th (which is a leap year);\n  export const UTCMONTHDATE: 'utcmonthdate' = 'utcmonthdate';\n  export const UTCHOURSMINUTES: 'utchoursminutes' = 'utchoursminutes';\n  export const UTCHOURSMINUTESSECONDS: 'utchoursminutesseconds' = 'utchoursminutesseconds';\n  export const UTCMINUTESSECONDS: 'utcminutesseconds' = 'utcminutesseconds';\n  export const UTCSECONDSMILLISECONDS: 'utcsecondsmilliseconds' = 'utcsecondsmilliseconds';\n  export const UTCQUARTER: 'utcquarter' = 'utcquarter';\n  export const UTCYEARQUARTER: 'utcyearquarter' = 'utcyearquarter';\n  export const UTCQUARTERMONTH: 'utcquartermonth' = 'utcquartermonth';\n  export const UTCYEARQUARTERMONTH: 'utcyearquartermonth' = 'utcyearquartermonth';\n}\n\nexport type LocalSingleTimeUnit =\n  typeof TimeUnit.YEAR |\n  typeof TimeUnit.QUARTER |\n  typeof TimeUnit.MONTH |\n  typeof TimeUnit.DAY |\n  typeof TimeUnit.DATE |\n  typeof TimeUnit.HOURS |\n  typeof TimeUnit.MINUTES |\n  typeof TimeUnit.SECONDS |\n  typeof TimeUnit.MILLISECONDS;\n\n/** Time Unit that only corresponds to only one part of Date objects. */\nconst LOCAL_SINGLE_TIMEUNIT_INDEX: Flag<LocalSingleTimeUnit> = {\n  year: 1,\n  quarter: 1,\n  month: 1,\n  day: 1,\n  date: 1,\n  hours: 1,\n  minutes: 1,\n  seconds: 1,\n  milliseconds: 1\n};\n\nexport const TIMEUNIT_PARTS = flagKeys(LOCAL_SINGLE_TIMEUNIT_INDEX);\n\nexport function isLocalSingleTimeUnit(timeUnit: string): timeUnit is LocalSingleTimeUnit {\n  return !!LOCAL_SINGLE_TIMEUNIT_INDEX[timeUnit];\n}\n\nexport type UtcSingleTimeUnit =\n  typeof TimeUnit.UTCYEAR |\n  typeof TimeUnit.UTCQUARTER |\n  typeof TimeUnit.UTCMONTH |\n  typeof TimeUnit.UTCDAY |\n  typeof TimeUnit.UTCDATE |\n  typeof TimeUnit.UTCHOURS |\n  typeof TimeUnit.UTCMINUTES |\n  typeof TimeUnit.UTCSECONDS |\n  typeof TimeUnit.UTCMILLISECONDS;\n\nconst UTC_SINGLE_TIMEUNIT_INDEX: Flag<UtcSingleTimeUnit> = {\n  utcyear: 1,\n  utcquarter: 1,\n  utcmonth: 1,\n  utcday: 1,\n  utcdate: 1,\n  utchours: 1,\n  utcminutes: 1,\n  utcseconds: 1,\n  utcmilliseconds: 1\n};\n\nexport function isUtcSingleTimeUnit(timeUnit: string): timeUnit is UtcSingleTimeUnit {\n  return !!UTC_SINGLE_TIMEUNIT_INDEX[timeUnit];\n}\n\nexport type SingleTimeUnit = LocalSingleTimeUnit | UtcSingleTimeUnit;\n\nexport type LocalMultiTimeUnit =\n  // Local Time\n  typeof TimeUnit.YEARQUARTER | typeof TimeUnit.YEARQUARTERMONTH |\n  typeof TimeUnit.YEARMONTH | typeof TimeUnit.YEARMONTHDATE | typeof TimeUnit.YEARMONTHDATEHOURS | typeof TimeUnit.YEARMONTHDATEHOURSMINUTES| typeof TimeUnit.YEARMONTHDATEHOURSMINUTESSECONDS |\n  typeof TimeUnit.QUARTERMONTH |\n  typeof TimeUnit.MONTHDATE |\n  typeof TimeUnit.HOURSMINUTES | typeof TimeUnit.HOURSMINUTESSECONDS |\n  typeof TimeUnit.MINUTESSECONDS |\n  typeof TimeUnit.SECONDSMILLISECONDS;\n\nconst LOCAL_MULTI_TIMEUNIT_INDEX: Flag<LocalMultiTimeUnit> = {\n  yearquarter: 1,\n  yearquartermonth: 1,\n\n  yearmonth: 1,\n  yearmonthdate: 1,\n  yearmonthdatehours: 1,\n  yearmonthdatehoursminutes: 1,\n  yearmonthdatehoursminutesseconds: 1,\n\n  quartermonth: 1,\n\n  monthdate: 1,\n\n  hoursminutes: 1,\n  hoursminutesseconds: 1,\n\n  minutesseconds: 1,\n\n  secondsmilliseconds: 1\n};\n\nexport type UtcMultiTimeUnit =\n  typeof TimeUnit.UTCYEARQUARTER | typeof TimeUnit.UTCYEARQUARTERMONTH |\n  typeof TimeUnit.UTCYEARMONTH | typeof TimeUnit.UTCYEARMONTHDATE | typeof TimeUnit.UTCYEARMONTHDATEHOURS | typeof TimeUnit.UTCYEARMONTHDATEHOURSMINUTES| typeof TimeUnit.UTCYEARMONTHDATEHOURSMINUTESSECONDS |\n  typeof TimeUnit.UTCQUARTERMONTH |\n  typeof TimeUnit.UTCMONTHDATE |\n  typeof TimeUnit.UTCHOURSMINUTES | typeof TimeUnit.UTCHOURSMINUTESSECONDS |\n  typeof TimeUnit.UTCMINUTESSECONDS |\n  typeof TimeUnit.UTCSECONDSMILLISECONDS;\n\nconst UTC_MULTI_TIMEUNIT_INDEX: Flag<UtcMultiTimeUnit> = {\n  utcyearquarter: 1,\n  utcyearquartermonth: 1,\n\n  utcyearmonth: 1,\n  utcyearmonthdate: 1,\n  utcyearmonthdatehours: 1,\n  utcyearmonthdatehoursminutes: 1,\n  utcyearmonthdatehoursminutesseconds: 1,\n\n  utcquartermonth: 1,\n\n  utcmonthdate: 1,\n\n  utchoursminutes: 1,\n  utchoursminutesseconds: 1,\n\n  utcminutesseconds: 1,\n\n  utcsecondsmilliseconds: 1\n};\n\nexport type MultiTimeUnit = LocalMultiTimeUnit | UtcMultiTimeUnit;\n\n\nexport type LocalTimeUnit = LocalSingleTimeUnit | LocalMultiTimeUnit;\nexport type UtcTimeUnit = UtcSingleTimeUnit | UtcMultiTimeUnit;\n\nconst UTC_TIMEUNIT_INDEX: Flag<UtcTimeUnit> = {\n  ...UTC_SINGLE_TIMEUNIT_INDEX,\n  ...UTC_MULTI_TIMEUNIT_INDEX\n};\n\nexport function isUTCTimeUnit(t: string): t is UtcTimeUnit {\n  return !!UTC_TIMEUNIT_INDEX[t];\n}\n\nexport function getLocalTimeUnit(t: UtcTimeUnit): LocalTimeUnit {\n  return t.substr(3) as LocalTimeUnit;\n}\n\nexport type TimeUnit = SingleTimeUnit | MultiTimeUnit;\n\nconst TIMEUNIT_INDEX: Flag<TimeUnit> = {\n  ...LOCAL_SINGLE_TIMEUNIT_INDEX,\n  ...UTC_SINGLE_TIMEUNIT_INDEX,\n  ...LOCAL_MULTI_TIMEUNIT_INDEX,\n  ...UTC_MULTI_TIMEUNIT_INDEX\n};\n\nexport const TIMEUNITS = flagKeys(TIMEUNIT_INDEX);\n\nexport function isTimeUnit(t: string): t is TimeUnit {\n  return !!TIMEUNIT_INDEX[t];\n}\n\ntype DateMethodName = keyof Date;\n\nconst SET_DATE_METHOD: Record<LocalSingleTimeUnit, DateMethodName> = {\n  year: 'setFullYear',\n  month: 'setMonth',\n  date: 'setDate',\n  hours: 'setHours',\n  minutes: 'setMinutes',\n  seconds: 'setSeconds',\n  milliseconds: 'setMilliseconds',\n  // Day and quarter have their own special cases\n  quarter: null,\n  day: null,\n};\n\n/**\n * Converts a date to only have the measurements relevant to the specified unit\n * i.e. ('yearmonth', '2000-12-04 07:58:14') -> '2000-12-01 00:00:00'\n * Note: the base date is Jan 01 1900 00:00:00\n */\nexport function convert(unit: TimeUnit, date: Date): Date {\n  const isUTC = isUTCTimeUnit(unit);\n  const result: Date = isUTC ?\n    // start with uniform date\n    new Date(Date.UTC(0, 0, 1, 0, 0, 0, 0)) :\n    new Date(0, 0, 1, 0, 0, 0, 0);\n    for (const timeUnitPart of TIMEUNIT_PARTS) {\n    if (containsTimeUnit(unit, timeUnitPart)) {\n      switch (timeUnitPart) {\n        case TimeUnit.DAY:\n          throw new Error('Cannot convert to TimeUnits containing \\'day\\'');\n        case TimeUnit.QUARTER: {\n          const {getDateMethod, setDateMethod} = dateMethods('month', isUTC);\n          // indicate quarter by setting month to be the first of the quarter i.e. may (4) -> april (3)\n          result[setDateMethod]((Math.floor(date[getDateMethod]() / 3)) * 3);\n          break;\n        }\n        default:\n          const {getDateMethod, setDateMethod} = dateMethods(timeUnitPart, isUTC);\n          result[setDateMethod](date[getDateMethod]());\n      }\n    }\n  }\n  return result;\n}\n\nfunction dateMethods(singleUnit: SingleTimeUnit, isUtc: boolean) {\n  const rawSetDateMethod = SET_DATE_METHOD[singleUnit];\n  const setDateMethod = isUtc ? 'setUTC' + rawSetDateMethod.substr(3) : rawSetDateMethod;\n  const getDateMethod = 'get' + (isUtc ? 'UTC' : '') + rawSetDateMethod.substr(3);\n  return {setDateMethod, getDateMethod};\n}\n\nexport function getTimeUnitParts(timeUnit: TimeUnit) {\n  return TIMEUNIT_PARTS.reduce((parts, part) => {\n    if (containsTimeUnit(timeUnit, part)) {\n      return parts.concat(part);\n    }\n    return parts;\n  }, []);\n}\n\n/** Returns true if fullTimeUnit contains the timeUnit, false otherwise. */\nexport function containsTimeUnit(fullTimeUnit: TimeUnit, timeUnit: TimeUnit) {\n  const index = fullTimeUnit.indexOf(timeUnit);\n  return index > -1 &&\n    (\n      timeUnit !== TimeUnit.SECONDS ||\n      index === 0 ||\n      fullTimeUnit.charAt(index-1) !== 'i' // exclude milliseconds\n    );\n}\n\n/**\n * Returns Vega expresssion for a given timeUnit and fieldRef\n */\nexport function fieldExpr(fullTimeUnit: TimeUnit, field: string): string {\n  const fieldRef = `datum${accessPath(field)}`;\n\n  const utc = isUTCTimeUnit(fullTimeUnit) ? 'utc' : '';\n  function func(timeUnit: TimeUnit) {\n    if (timeUnit === TimeUnit.QUARTER) {\n      // quarter starting at 0 (0,3,6,9).\n      return `(${utc}quarter(${fieldRef})-1)`;\n    } else {\n      return `${utc}${timeUnit}(${fieldRef})`;\n    }\n  }\n\n  const d = TIMEUNIT_PARTS.reduce((dateExpr: DateTimeExpr, tu: TimeUnit) => {\n    if (containsTimeUnit(fullTimeUnit, tu)) {\n      dateExpr[tu] = func(tu);\n    }\n    return dateExpr;\n  }, {} as {[key in SingleTimeUnit]: string});\n\n  return dateTimeExpr(d);\n}\n\n/**\n * returns the signal expression used for axis labels for a time unit\n */\nexport function formatExpression(timeUnit: TimeUnit, field: string, shortTimeLabels: boolean, isUTCScale: boolean): string {\n  if (!timeUnit) {\n    return undefined;\n  }\n\n  const dateComponents: string[] = [];\n  let expression = '';\n  const hasYear = containsTimeUnit(timeUnit, TimeUnit.YEAR);\n\n  if (containsTimeUnit(timeUnit, TimeUnit.QUARTER)) {\n   // special expression for quarter as prefix\n    expression = `'Q' + quarter(${field})`;\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.MONTH)) {\n    // By default use short month name\n    dateComponents.push(shortTimeLabels !== false ? '%b' : '%B');\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.DAY)) {\n    dateComponents.push(shortTimeLabels ? '%a' : '%A');\n  } else if (containsTimeUnit(timeUnit, TimeUnit.DATE)) {\n    dateComponents.push('%d' + (hasYear ? ',' : '')); // add comma if there is year\n  }\n\n  if (hasYear) {\n    dateComponents.push(shortTimeLabels ? '%y' : '%Y');\n  }\n\n  const timeComponents: string[] = [];\n\n  if (containsTimeUnit(timeUnit, TimeUnit.HOURS)) {\n    timeComponents.push('%H');\n  }\n  if (containsTimeUnit(timeUnit, TimeUnit.MINUTES)) {\n    timeComponents.push('%M');\n  }\n  if (containsTimeUnit(timeUnit, TimeUnit.SECONDS)) {\n    timeComponents.push('%S');\n  }\n  if (containsTimeUnit(timeUnit, TimeUnit.MILLISECONDS)) {\n    timeComponents.push('%L');\n  }\n\n  const dateTimeComponents: string[] = [];\n  if (dateComponents.length > 0) {\n    dateTimeComponents.push(dateComponents.join(' '));\n  }\n  if (timeComponents.length > 0) {\n    dateTimeComponents.push(timeComponents.join(':'));\n  }\n\n  if (dateTimeComponents.length > 0) {\n    if (expression) {\n      // Add space between quarter and main time format\n      expression += ` + ' ' + `;\n    }\n\n    // We only use utcFormat for utc scale\n    // For utc time units, the data is already converted as a part of timeUnit transform.\n    // Thus, utc time units should use timeFormat to avoid shifting the time twice.\n    if (isUTCScale) {\n      expression += `utcFormat(${field}, '${dateTimeComponents.join(' ')}')`;\n    } else {\n      expression += `timeFormat(${field}, '${dateTimeComponents.join(' ')}')`;\n    }\n  }\n\n  // If expression is still an empty string, return undefined instead.\n  return expression || undefined;\n}\n\nexport function normalizeTimeUnit(timeUnit: TimeUnit): TimeUnit {\n  if (timeUnit !== 'day' && timeUnit.indexOf('day') >= 0) {\n    log.warn(log.message.dayReplacedWithDate(timeUnit));\n    return timeUnit.replace('day', 'date') as TimeUnit;\n  }\n  return timeUnit;\n}\n","import {Flag} from './util';\n/** Constants and utilities for data type */\n/** Data type based on level of measurement */\n\nexport namespace Type {\n  export const QUANTITATIVE: 'quantitative' = 'quantitative';\n  export const ORDINAL: 'ordinal' = 'ordinal';\n  export const TEMPORAL: 'temporal' = 'temporal';\n  export const NOMINAL: 'nominal' = 'nominal';\n\n  export const LATITUDE: 'latitude' = 'latitude';\n  export const LONGITUDE: 'longitude' = 'longitude';\n  export const GEOJSON: 'geojson' = 'geojson';\n}\nexport type BasicType = typeof Type.QUANTITATIVE | typeof Type.ORDINAL | typeof Type.TEMPORAL | typeof Type.NOMINAL;\nexport type GeoType = typeof Type.LATITUDE | typeof Type.LONGITUDE | typeof Type.GEOJSON;\n\nexport type Type = BasicType | GeoType;\n\nconst TYPE_INDEX: Flag<Type> = {\n  quantitative: 1,\n  ordinal: 1,\n  temporal: 1,\n  nominal: 1,\n  latitude: 1,\n  longitude: 1,\n  geojson: 1\n};\n\nexport function isType(t: any): t is Type {\n  return !!TYPE_INDEX[t];\n}\n\nexport const QUANTITATIVE = Type.QUANTITATIVE;\nexport const ORDINAL = Type.ORDINAL;\nexport const TEMPORAL = Type.TEMPORAL;\nexport const NOMINAL = Type.NOMINAL;\n\nexport const LATITUDE = Type.LATITUDE;\nexport const LONGITUDE = Type.LONGITUDE;\nexport const GEOJSON = Type.GEOJSON;\n\n/**\n * Get full, lowercase type name for a given type.\n * @param  type\n * @return Full type name.\n */\nexport function getFullName(type: Type|string): Type {\n  if (type) {\n    type = type.toLowerCase();\n    switch (type) {\n      case 'q':\n      case QUANTITATIVE:\n        return 'quantitative';\n      case 't':\n      case TEMPORAL:\n        return 'temporal';\n      case 'o':\n      case ORDINAL:\n        return 'ordinal';\n      case 'n':\n      case NOMINAL:\n        return 'nominal';\n      case LATITUDE:\n        return 'latitude';\n      case LONGITUDE:\n        return 'longitude';\n      case GEOJSON:\n        return 'geojson';\n    }\n  }\n  // If we get invalid input, return undefined type.\n  return undefined;\n}\n","import * as stableStringify from 'json-stable-stringify';\nimport {isArray, isNumber, isString, splitAccessPath, stringValue} from 'vega-util';\nimport {isLogicalAnd, isLogicalNot, isLogicalOr, LogicalOperand} from './logical';\n\n\nexport {isArray, isObject, isNumber, isString, truncate, toSet, stringValue, splitAccessPath} from 'vega-util';\n\n/**\n * Creates an object composed of the picked object properties.\n *\n * Example:  (from lodash)\n *\n * var object = {'a': 1, 'b': '2', 'c': 3};\n * pick(object, ['a', 'c']);\n * // → {'a': 1, 'c': 3}\n *\n */\nexport function pick(obj: object, props: string[]) {\n  const copy = {};\n  for (const prop of props) {\n    if (obj.hasOwnProperty(prop)) {\n      copy[prop] = obj[prop];\n    }\n  }\n  return copy;\n}\n\n/**\n * The opposite of _.pick; this method creates an object composed of the own\n * and inherited enumerable string keyed properties of object that are not omitted.\n */\nexport function omit(obj: object, props: string[]) {\n  const copy = duplicate(obj);\n  for (const prop of props) {\n    delete copy[prop];\n  }\n  return copy;\n}\n\n/**\n * Converts any object into a string representation that can be consumed by humans.\n */\nexport const stringify = stableStringify;\n\n/**\n * Converts any object into a string of limited size, or a number.\n */\nexport function hash(a: any) {\n  if (isNumber(a)) {\n    return a;\n  }\n\n  const str = isString(a) ? a : stableStringify(a);\n\n  // short strings can be used as hash directly, longer strings are hashed to reduce memory usage\n  if (str.length < 100) {\n    return str;\n  }\n\n  // from http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n  let h = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    h = ((h<<5)-h)+char;\n    h = h & h; // Convert to 32bit integer\n  }\n  return h;\n}\n\nexport function contains<T>(array: T[], item: T) {\n  return array.indexOf(item) > -1;\n}\n\n/** Returns the array without the elements in item */\nexport function without<T>(array: T[], excludedItems: T[]) {\n  return array.filter(item => !contains(excludedItems, item));\n}\n\nexport function union<T>(array: T[], other: T[]) {\n  return array.concat(without(other, array));\n}\n\n/**\n * Returns true if any item returns true.\n */\nexport function some<T>(arr: T[], f: (d: T, k?: any, i?: any) => boolean) {\n  let i = 0;\n  for (let k = 0; k<arr.length; k++) {\n    if (f(arr[k], k, i++)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Returns true if all items return true.\n */\n export function every<T>(arr: T[], f: (d: T, k?: any, i?: any) => boolean) {\n  let i = 0;\n  for (let k = 0; k<arr.length; k++) {\n    if (!f(arr[k], k, i++)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function flatten(arrays: any[]) {\n  return [].concat.apply([], arrays);\n}\n\n/**\n * recursively merges src into dest\n */\nexport function mergeDeep<T>(dest: T, ...src: Partial<T>[]): T {\n  for (const s of src) {\n    dest = deepMerge_(dest, s);\n  }\n  return dest;\n}\n\n// recursively merges src into dest\nfunction deepMerge_(dest: any, src: any) {\n  if (typeof src !== 'object' || src === null) {\n    return dest;\n  }\n\n  for (const p in src) {\n    if (!src.hasOwnProperty(p)) {\n      continue;\n    }\n    if (src[p] === undefined) {\n      continue;\n    }\n    if (typeof src[p] !== 'object' || isArray(src[p]) || src[p] === null) {\n      dest[p] = src[p];\n    } else if (typeof dest[p] !== 'object' || dest[p] === null) {\n      dest[p] = mergeDeep(isArray(src[p].constructor) ? [] : {}, src[p]);\n    } else {\n      mergeDeep(dest[p], src[p]);\n    }\n  }\n  return dest;\n}\n\nexport function unique<T>(values: T[], f: (item: T) => string | number): T[] {\n  const results: any[] = [];\n  const u = {};\n  let v: string | number;\n  for (const val of values) {\n    v = f(val);\n    if (v in u) {\n      continue;\n    }\n    u[v] = 1;\n    results.push(val);\n  }\n  return results;\n}\n\nexport interface Dict<T> {\n  [key: string]: T;\n}\n\nexport type StringSet = Dict<true>;\n\n/**\n * Returns true if the two dictionaries disagree. Applies only to defined values.\n */\nexport function differ<T>(dict: Dict<T>, other: Dict<T>) {\n  for (const key in dict) {\n    if (dict.hasOwnProperty(key)) {\n      if (other[key] && dict[key] && other[key] !== dict[key]) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function hasIntersection(a: StringSet, b: StringSet) {\n  for (const key in a) {\n    if (key in b) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function isNumeric(num: string | number) {\n  return !isNaN(num as any);\n}\n\nexport function differArray<T>(array: T[], other: T[]) {\n  if (array.length !== other.length) {\n    return true;\n  }\n\n  array.sort();\n  other.sort();\n\n  for (let i = 0; i < array.length; i++) {\n    if (other[i] !== array[i]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// This is a stricter version of Object.keys but with better types. See https://github.com/Microsoft/TypeScript/pull/12253#issuecomment-263132208\nexport const keys = Object.keys as <T>(o: T) => (keyof T)[];\n\nexport function vals<T>(x: {[key: string]: T}): T[] {\n  const _vals: T[] = [];\n  for (const k in x) {\n    if (x.hasOwnProperty(k)) {\n      _vals.push(x[k]);\n    }\n  }\n  return _vals;\n}\n\n// Using mapped type to declare a collect of flags for a string literal type S\n// https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types\nexport type Flag<S extends string> = {\n  [K in S]: 1\n};\n\nexport function flagKeys<S extends string>(f: Flag<S>): S[] {\n  return keys(f) as S[];\n}\n\nexport function duplicate<T>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport function isBoolean(b: any): b is boolean {\n  return b === true || b === false;\n}\n\n/**\n * Convert a string into a valid variable name\n */\nexport function varName(s: string): string {\n  // Replace non-alphanumeric characters (anything besides a-zA-Z0-9_) with _\n  const alphanumericS = s.replace(/\\W/g, '_');\n\n  // Add _ if the string has leading numbers.\n  return (s.match(/^\\d+/) ? '_' : '') + alphanumericS;\n}\n\nexport function logicalExpr<T>(op: LogicalOperand<T>, cb: Function): string {\n  if (isLogicalNot(op)) {\n    return '!(' + logicalExpr(op.not, cb) + ')';\n  } else if (isLogicalAnd(op)) {\n    return '(' + op.and.map((and: LogicalOperand<T>) => logicalExpr(and, cb)).join(') && (') + ')';\n  } else if (isLogicalOr(op)) {\n    return '(' + op.or.map((or: LogicalOperand<T>) => logicalExpr(or, cb)).join(') || (') + ')';\n  } else {\n    return cb(op);\n  }\n}\n\n// Omit from http://ideasintosoftware.com/typescript-advanced-tricks/\nexport type Diff<T extends string, U extends string> = ({[P in T]: P } & {[P in U]: never } & { [x: string]: never })[T];\nexport type Omit<T, K extends keyof T> = {[P in Diff<keyof T, K>]: T[P]};\n\n/**\n * Delete nested property of an object, and delete the ancestors of the property if they become empty.\n */\nexport function deleteNestedProperty(obj: any, orderedProps: string[]) {\n  let isEmpty = true;\n  while (orderedProps.length > 0 && isEmpty) {\n    let o = obj;\n    for (let i=0; i < orderedProps.length-1; i++) {\n      o = o[orderedProps[i]];\n    }\n    delete o[orderedProps.pop()];\n    if (keys(o).length !== 0) {\n      isEmpty = false;\n    }\n  }\n}\n\nexport function titlecase(s: string) {\n  return s.charAt(0).toUpperCase() + s.substr(1);\n}\n\n/**\n * Converts a path to an access path.\n */\nexport function accessPath(path: string) {\n  return `[${splitAccessPath(path).map(stringValue).join('][')}]`;\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.vega = global.vega || {})));\n}(this, (function (exports) { 'use strict';\n\nvar accessor = function(fn, fields, name) {\n  fn.fields = fields || [];\n  fn.fname = name;\n  return fn;\n};\n\nfunction accessorName(fn) {\n  return fn == null ? null : fn.fname;\n}\n\nfunction accessorFields(fn) {\n  return fn == null ? null : fn.fields;\n}\n\nvar error = function(message) {\n  throw Error(message);\n};\n\nvar splitAccessPath = function(p) {\n  var path = [],\n      q = null,\n      b = 0,\n      n = p.length,\n      s = '',\n      i, j, c;\n\n  p = p + '';\n\n  function push() {\n    path.push(s + p.substring(i, j));\n    s = '';\n    i = j + 1;\n  }\n\n  for (i=j=0; j<n; ++j) {\n    c = p[j];\n    if (c === '\\\\') {\n      s += p.substring(i, j);\n      i = ++j;\n    } else if (c === q) {\n      push();\n      q = null;\n      b = -1;\n    } else if (q) {\n      continue;\n    } else if (i === b && c === '\"') {\n      i = j + 1;\n      q = c;\n    } else if (i === b && c === \"'\") {\n      i = j + 1;\n      q = c;\n    } else if (c === '.' && !b) {\n      if (j > i) {\n        push();\n      } else {\n        i = j + 1;\n      }\n    } else if (c === '[') {\n      if (j > i) push();\n      b = i = j + 1;\n    } else if (c === ']') {\n      if (!b) error('Access path missing open bracket: ' + p);\n      if (b > 0) push();\n      b = 0;\n      i = j + 1;\n    }\n  }\n\n  if (b) error('Access path missing closing bracket: ' + p);\n  if (q) error('Access path missing closing quote: ' + p);\n\n  if (j > i) {\n    j++;\n    push();\n  }\n\n  return path;\n};\n\nvar isArray = Array.isArray;\n\nvar isObject = function(_) {\n  return _ === Object(_);\n};\n\nvar isString = function(_) {\n  return typeof _ === 'string';\n};\n\nfunction $(x) {\n  return isArray(x) ? '[' + x.map($) + ']'\n    : isObject(x) || isString(x) ?\n      // Output valid JSON and JS source strings.\n      // See http://timelessrepo.com/json-isnt-a-javascript-subset\n      JSON.stringify(x).replace('\\u2028','\\\\u2028').replace('\\u2029', '\\\\u2029')\n    : x;\n}\n\nvar field = function(field, name) {\n  var path = splitAccessPath(field),\n      code = 'return _[' + path.map($).join('][') + '];';\n\n  return accessor(\n    Function('_', code),\n    [(field = path.length===1 ? path[0] : field)],\n    name || field\n  );\n};\n\nvar empty = [];\n\nvar id = field('id');\n\nvar identity = accessor(function(_) { return _; }, empty, 'identity');\n\nvar zero = accessor(function() { return 0; }, empty, 'zero');\n\nvar one = accessor(function() { return 1; }, empty, 'one');\n\nvar truthy = accessor(function() { return true; }, empty, 'true');\n\nvar falsy = accessor(function() { return false; }, empty, 'false');\n\nfunction log(method, level, input) {\n  var args = [level].concat([].slice.call(input));\n  console[method].apply(console, args); // eslint-disable-line no-console\n}\n\nvar None  = 0;\nvar Error$1 = 1;\nvar Warn  = 2;\nvar Info  = 3;\nvar Debug = 4;\n\nvar logger = function(_) {\n  var level = _ || None;\n  return {\n    level: function(_) {\n      if (arguments.length) {\n        level = +_;\n        return this;\n      } else {\n        return level;\n      }\n    },\n    error: function() {\n      if (level >= Error$1) log('error', 'ERROR', arguments);\n      return this;\n    },\n    warn: function() {\n      if (level >= Warn) log('warn', 'WARN', arguments);\n      return this;\n    },\n    info: function() {\n      if (level >= Info) log('log', 'INFO', arguments);\n      return this;\n    },\n    debug: function() {\n      if (level >= Debug) log('log', 'DEBUG', arguments);\n      return this;\n    }\n  }\n};\n\nvar peek = function(array) {\n  return array[array.length - 1];\n};\n\nvar toNumber = function(_) {\n  return _ == null || _ === '' ? null : +_;\n};\n\nfunction exp(sign) {\n  return function(x) { return sign * Math.exp(x); };\n}\n\nfunction log$1(sign) {\n  return function(x) { return Math.log(sign * x); };\n}\n\nfunction pow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction pan(domain, delta, lift, ground) {\n  var d0 = lift(domain[0]),\n      d1 = lift(peek(domain)),\n      dd = (d1 - d0) * delta;\n\n  return [\n    ground(d0 - dd),\n    ground(d1 - dd)\n  ];\n}\n\nfunction panLinear(domain, delta) {\n  return pan(domain, delta, toNumber, identity);\n}\n\nfunction panLog(domain, delta) {\n  var sign = Math.sign(domain[0]);\n  return pan(domain, delta, log$1(sign), exp(sign));\n}\n\nfunction panPow(domain, delta, exponent) {\n  return pan(domain, delta, pow(exponent), pow(1/exponent));\n}\n\nfunction zoom(domain, anchor, scale, lift, ground) {\n  var d0 = lift(domain[0]),\n      d1 = lift(peek(domain)),\n      da = anchor != null ? lift(anchor) : (d0 + d1) / 2;\n\n  return [\n    ground(da + (d0 - da) * scale),\n    ground(da + (d1 - da) * scale)\n  ];\n}\n\nfunction zoomLinear(domain, anchor, scale) {\n  return zoom(domain, anchor, scale, toNumber, identity);\n}\n\nfunction zoomLog(domain, anchor, scale) {\n  var sign = Math.sign(domain[0]);\n  return zoom(domain, anchor, scale, log$1(sign), exp(sign));\n}\n\nfunction zoomPow(domain, anchor, scale, exponent) {\n  return zoom(domain, anchor, scale, pow(exponent), pow(1/exponent));\n}\n\nvar array = function(_) {\n  return _ != null ? (isArray(_) ? _ : [_]) : [];\n};\n\nvar isFunction = function(_) {\n  return typeof _ === 'function';\n};\n\nvar compare = function(fields, orders) {\n  var idx = [],\n      cmp = (fields = array(fields)).map(function(f, i) {\n        if (f == null) {\n          return null;\n        } else {\n          idx.push(i);\n          return isFunction(f) ? f\n            : splitAccessPath(f).map($).join('][');\n        }\n      }),\n      n = idx.length - 1,\n      ord = array(orders),\n      code = 'var u,v;return ',\n      i, j, f, u, v, d, t, lt, gt;\n\n  if (n < 0) return null;\n\n  for (j=0; j<=n; ++j) {\n    i = idx[j];\n    f = cmp[i];\n\n    if (isFunction(f)) {\n      d = 'f' + i;\n      u = '(u=this.' + d + '(a))';\n      v = '(v=this.' + d + '(b))';\n      (t = t || {})[d] = f;\n    } else {\n      u = '(u=a['+f+'])';\n      v = '(v=b['+f+'])';\n    }\n\n    d = '((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))';\n\n    if (ord[i] !== 'descending') {\n      gt = 1;\n      lt = -1;\n    } else {\n      gt = -1;\n      lt = 1;\n    }\n\n    code += '(' + u+'<'+v+'||u==null)&&v!=null?' + lt\n      + ':(u>v||v==null)&&u!=null?' + gt\n      + ':'+d+'!==u&&v===v?' + lt\n      + ':v!==v&&u===u?' + gt\n      + (i < n ? ':' : ':0');\n  }\n\n  f = Function('a', 'b', code + ';');\n  if (t) f = f.bind(t);\n\n  fields = fields.reduce(function(map, field) {\n    if (isFunction(field)) {\n      (accessorFields(field) || []).forEach(function(_) { map[_] = 1; });\n    } else if (field != null) {\n      map[field + ''] = 1;\n    }\n    return map;\n  }, {});\n\n  return accessor(f, Object.keys(fields));\n};\n\nvar constant = function(_) {\n  return isFunction(_) ? _ : function() { return _; };\n};\n\nvar debounce = function(delay, handler) {\n  var tid, evt;\n\n  function callback() {\n    handler(evt);\n    tid = evt = null;\n  }\n\n  return function(e) {\n    evt = e;\n    if (tid) clearTimeout(tid);\n    tid = setTimeout(callback, delay);\n  };\n};\n\nvar extend = function(_) {\n  for (var x, k, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (k in x) { _[k] = x[k]; }\n  }\n  return _;\n};\n\nvar extentIndex = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a, b, c, u, v;\n\n  if (f == null) {\n    while (++i < n) {\n      b = array[i];\n      if (b != null && b >= b) {\n        a = c = b;\n        break;\n      }\n    }\n    u = v = i;\n    while (++i < n) {\n      b = array[i];\n      if (b != null) {\n        if (a > b) {\n          a = b;\n          u = i;\n        }\n        if (c < b) {\n          c = b;\n          v = i;\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      b = f(array[i], i, array);\n      if (b != null && b >= b) {\n        a = c = b;\n        break;\n      }\n    }\n    u = v = i;\n    while (++i < n) {\n      b = f(array[i], i, array);\n      if (b != null) {\n        if (a > b) {\n          a = b;\n          u = i;\n        }\n        if (c < b) {\n          c = b;\n          v = i;\n        }\n      }\n    }\n  }\n\n  return [u, v];\n};\n\nvar NULL = {};\n\nvar fastmap = function(input) {\n  var obj = {},\n      map,\n      test;\n\n  function has(key) {\n    return obj.hasOwnProperty(key) && obj[key] !== NULL;\n  }\n\n  map = {\n    size: 0,\n    empty: 0,\n    object: obj,\n    has: has,\n    get: function(key) {\n      return has(key) ? obj[key] : undefined;\n    },\n    set: function(key, value) {\n      if (!has(key)) {\n        ++map.size;\n        if (obj[key] === NULL) --map.empty;\n      }\n      obj[key] = value;\n      return this;\n    },\n    delete: function(key) {\n      if (has(key)) {\n        --map.size;\n        ++map.empty;\n        obj[key] = NULL;\n      }\n      return this;\n    },\n    clear: function() {\n      map.size = map.empty = 0;\n      map.object = obj = {};\n    },\n    test: function(_) {\n      if (arguments.length) {\n        test = _;\n        return map;\n      } else {\n        return test;\n      }\n    },\n    clean: function() {\n      var next = {},\n          size = 0,\n          key, value;\n      for (key in obj) {\n        value = obj[key];\n        if (value !== NULL && (!test || !test(value))) {\n          next[key] = value;\n          ++size;\n        }\n      }\n      map.size = size;\n      map.empty = 0;\n      map.object = (obj = next);\n    }\n  };\n\n  if (input) Object.keys(input).forEach(function(key) {\n    map.set(key, input[key]);\n  });\n\n  return map;\n};\n\nvar inherits = function(child, parent) {\n  var proto = (child.prototype = Object.create(parent.prototype));\n  proto.constructor = child;\n  return proto;\n};\n\nvar isBoolean = function(_) {\n  return typeof _ === 'boolean';\n};\n\nvar isDate = function(_) {\n  return Object.prototype.toString.call(_) === '[object Date]';\n};\n\nvar isNumber = function(_) {\n  return typeof _ === 'number';\n};\n\nvar isRegExp = function(_) {\n  return Object.prototype.toString.call(_) === '[object RegExp]';\n};\n\nvar key = function(fields, flat) {\n  if (fields) {\n    fields = flat\n      ? array(fields).map(function(f) { return f.replace(/\\\\(.)/g, '$1'); })\n      : array(fields);\n  }\n\n  var fn = !(fields && fields.length)\n    ? function() { return ''; }\n    : Function('_', 'return \\'\\'+' +\n        fields.map(function(f) {\n          return '_[' + (flat\n              ? $(f)\n              : splitAccessPath(f).map($).join('][')\n            ) + ']';\n        }).join('+\\'|\\'+') + ';');\n\n  return accessor(fn, fields, 'key');\n};\n\nvar merge = function(compare, array0, array1, output) {\n  var n0 = array0.length,\n      n1 = array1.length;\n\n  if (!n1) return array0;\n  if (!n0) return array1;\n\n  var merged = output || new array0.constructor(n0 + n1),\n      i0 = 0, i1 = 0, i = 0;\n\n  for (; i0<n0 && i1<n1; ++i) {\n    merged[i] = compare(array0[i0], array1[i1]) > 0\n       ? array1[i1++]\n       : array0[i0++];\n  }\n\n  for (; i0<n0; ++i0, ++i) {\n    merged[i] = array0[i0];\n  }\n\n  for (; i1<n1; ++i1, ++i) {\n    merged[i] = array1[i1];\n  }\n\n  return merged;\n};\n\nvar repeat = function(str, reps) {\n  var s = '';\n  while (--reps >= 0) s += str;\n  return s;\n};\n\nvar pad = function(str, length, padchar, align) {\n  var c = padchar || ' ',\n      s = str + '',\n      n = length - s.length;\n\n  return n <= 0 ? s\n    : align === 'left' ? repeat(c, n) + s\n    : align === 'center' ? repeat(c, ~~(n/2)) + s + repeat(c, Math.ceil(n/2))\n    : s + repeat(c, n);\n};\n\nvar toBoolean = function(_) {\n  return _ == null || _ === '' ? null : !_ || _ === 'false' || _ === '0' ? false : !!_;\n};\n\nfunction defaultParser(_) {\n  return isNumber(_) ? _ : isDate(_) ? _ : Date.parse(_);\n}\n\nvar toDate = function(_, parser) {\n  parser = parser || defaultParser;\n  return _ == null || _ === '' ? null : parser(_);\n};\n\nvar toString = function(_) {\n  return _ == null || _ === '' ? null : _ + '';\n};\n\nvar toSet = function(_) {\n  for (var s={}, i=0, n=_.length; i<n; ++i) s[_[i]] = true;\n  return s;\n};\n\nvar truncate = function(str, length, align, ellipsis) {\n  var e = ellipsis != null ? ellipsis : '\\u2026',\n      s = str + '',\n      n = s.length,\n      l = Math.max(0, length - e.length);\n\n  return n <= length ? s\n    : align === 'left' ? e + s.slice(n - l)\n    : align === 'center' ? s.slice(0, Math.ceil(l/2)) + e + s.slice(n - ~~(l/2))\n    : s.slice(0, l) + e;\n};\n\nvar visitArray = function(array, filter, visitor) {\n  if (array) {\n    var i = 0, n = array.length, t;\n    if (filter) {\n      for (; i<n; ++i) {\n        if (t = filter(array[i])) visitor(t, i, array);\n      }\n    } else {\n      array.forEach(visitor);\n    }\n  }\n};\n\nexports.accessor = accessor;\nexports.accessorName = accessorName;\nexports.accessorFields = accessorFields;\nexports.id = id;\nexports.identity = identity;\nexports.zero = zero;\nexports.one = one;\nexports.truthy = truthy;\nexports.falsy = falsy;\nexports.logger = logger;\nexports.None = None;\nexports.Error = Error$1;\nexports.Warn = Warn;\nexports.Info = Info;\nexports.Debug = Debug;\nexports.panLinear = panLinear;\nexports.panLog = panLog;\nexports.panPow = panPow;\nexports.zoomLinear = zoomLinear;\nexports.zoomLog = zoomLog;\nexports.zoomPow = zoomPow;\nexports.array = array;\nexports.compare = compare;\nexports.constant = constant;\nexports.debounce = debounce;\nexports.error = error;\nexports.extend = extend;\nexports.extentIndex = extentIndex;\nexports.fastmap = fastmap;\nexports.field = field;\nexports.inherits = inherits;\nexports.isArray = isArray;\nexports.isBoolean = isBoolean;\nexports.isDate = isDate;\nexports.isFunction = isFunction;\nexports.isNumber = isNumber;\nexports.isObject = isObject;\nexports.isRegExp = isRegExp;\nexports.isString = isString;\nexports.key = key;\nexports.merge = merge;\nexports.pad = pad;\nexports.peek = peek;\nexports.repeat = repeat;\nexports.splitAccessPath = splitAccessPath;\nexports.stringValue = $;\nexports.toBoolean = toBoolean;\nexports.toDate = toDate;\nexports.toNumber = toNumber;\nexports.toString = toString;\nexports.toSet = toSet;\nexports.truncate = truncate;\nexports.visitArray = visitArray;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import {format as d3NumberFormat} from 'd3-format';\nimport {timeDay, timeHour, timeMinute, timeMonth, timeSecond, timeWeek, timeYear} from 'd3-time';\nimport {timeFormat} from 'd3-time-format';\nimport {isDate, isFunction, isNumber, isString} from 'vega-util';\nimport {FormatCallback, ScenegraphPrimitive} from './options';\n\n/**\n * Format value using formatType and format\n * @param value - a field value to be formatted\n * @param formatType - the formatType can be: \"time\", \"number\", or \"string\"\n * @param format - a time time format specifier, or a time number format specifier, or undefined\n * @return the formatted value, or undefined if value or formatType is missing\n */\nexport function customFormat(value: ScenegraphPrimitive, formatType: string, format: string | FormatCallback): string | undefined {\n  if (value === undefined || value === null) {\n    return undefined;\n  }\n  if (!formatType && !format) {\n    return undefined;\n  }\n\n  if (isString(format)) {\n    switch (formatType) {\n      case 'time':\n        return format ? timeFormat(format)(value as Date) : autoTimeFormat(value as Date);\n      case 'number':\n        return format ? d3NumberFormat(format)(value as number) : autoNumberFormat(value as number);\n      case 'string':\n      default:\n        return value as string;\n    }\n  }\n\n  if (isFunction(format)) {\n    return format(value);\n  }\n\n  return undefined;\n}\n\n/**\n * Automatically format a time, number or string value\n * @return the formatted time, number or string value\n */\nexport function autoFormat(value: ScenegraphPrimitive): string {\n  if (isNumber(value)) {\n    return autoNumberFormat(value);\n  } else if (isDate(value)) {\n    return autoTimeFormat(value);\n  } else {\n    return value;\n  }\n}\n\n/**\n * Automatically format a number based on its decimal.\n * @param value number to be formatted\n * @return If it's a decimal number, return a fixed two points precision.\n * If it's a whole number, return the original value without any format.\n */\nexport function autoNumberFormat(value: number) {\n  return value % 1 === 0 ? d3NumberFormat(',')(value) : d3NumberFormat(',.2f')(value);\n}\n\n/**\n * Automatically format a time based on its date.\n * @param date object to be formatted\n * @return a formatted time string depending on the time. For example,\n * the start of February is formatted as \"February\", while February second is formatted as \"Feb 2\".\n */\nexport function autoTimeFormat(date: Date) {\n  const formatMillisecond = timeFormat('.%L'),\n    formatSecond = timeFormat(':%S'),\n    formatMinute = timeFormat('%I:%M'),\n    formatHour = timeFormat('%I %p'),\n    formatDay = timeFormat('%a %d'),\n    formatWeek = timeFormat('%b %d'),\n    formatMonth = timeFormat('%B'),\n    formatYear = timeFormat('%Y');\n\n  return (timeSecond(date) < date ? formatMillisecond\n    : timeMinute(date) < date ? formatSecond\n      : timeHour(date) < date ? formatMinute\n        : timeDay(date) < date ? formatHour\n          : timeMonth(date) < date ? (timeWeek(date) < date ? formatDay : formatWeek)\n            : timeYear(date) < date ? formatMonth\n              : formatYear)(date);\n}\n","import {select} from 'd3-selection';\nimport {TopLevelExtendedSpec} from 'vega-lite/build/src/spec';\nimport {DELAY, Option, Scenegraph, VgView} from './options';\nimport {getTooltipData} from './parseOption';\nimport {supplementOptions} from './supplementField';\nimport {bindData, clearColorTheme, clearData, clearPosition, getTooltipPlaceholder, updateColorTheme, updatePosition} from './tooltipDisplay';\n\nlet tooltipPromise: number = undefined;\nlet tooltipActive = false;\n\n/**\n * Export API for Vega visualizations: vg.tooltip(vgView, options)\n * options can specify whether to show all fields or to show only custom fields\n * It can also provide custom title and format for fields\n */\nexport function vega(vgView: VgView, options: Option = {showAllFields: true, isComposition: false}) {\n  start(vgView, copyOptions(options));\n\n  return {\n    destroy: function () {\n      // remove event listeners\n      vgView.removeEventListener('mouseover.tooltipInit');\n      vgView.removeEventListener('mousemove.tooltipUpdate');\n      vgView.removeEventListener('mouseout.tooltipRemove');\n\n      cancelPromise(); // clear tooltip promise\n    }\n  };\n}\n\nexport function vegaLite(vgView: VgView, vlSpec: TopLevelExtendedSpec, options: Option = {showAllFields: true, isComposition: false}) {\n  options = supplementOptions(copyOptions(options), vlSpec);\n  start(vgView, copyOptions(options));\n\n  return {\n    destroy: function () {\n      // remove event listeners\n      vgView.removeEventListener('mouseover.tooltipInit');\n      vgView.removeEventListener('mousemove.tooltipUpdate');\n      vgView.removeEventListener('mouseout.tooltipRemove');\n\n      cancelPromise(); // clear tooltip promise\n    }\n  };\n}\n\nfunction start(vgView: VgView, options: Option) {\n  // initialize tooltip with item data and options on mouse over\n  vgView.addEventListener('mouseover.tooltipInit', function (event: MouseEvent, item: Scenegraph) {\n    if (shouldShowTooltip(item)) {\n      // clear existing promise because mouse can only point at one thing at a time\n      cancelPromise();\n\n      const delay = isNaN(options.delay) ? DELAY : options.delay;\n      if (delay) {\n        // make a new promise with time delay for tooltip\n        tooltipPromise = window.setTimeout(function () {\n          init(event, item, options);\n        }, delay);\n      } else {\n        init(event, item, options);\n      }\n    }\n  });\n\n  // update tooltip position on mouse move\n  // (important for large marks e.g. bars)\n  vgView.addEventListener('mousemove.tooltipUpdate', function (event: MouseEvent, item: Scenegraph) {\n    if (shouldShowTooltip(item) && tooltipActive) {\n      update(event, item, options);\n    }\n  });\n\n  // clear tooltip on mouse out\n  vgView.addEventListener('mouseout.tooltipRemove', function (event: MouseEvent, item: Scenegraph) {\n    if (shouldShowTooltip(item)) {\n      cancelPromise();\n\n      if (tooltipActive) {\n        clear(event, item, options);\n      }\n    }\n  });\n}\n\n/* Cancel tooltip promise */\nfunction cancelPromise() {\n  /* We don't check if tooltipPromise is valid because passing\n   an invalid ID to clearTimeout does not have any effect\n   (and doesn't throw an exception). */\n  window.clearTimeout(tooltipPromise);\n  tooltipPromise = undefined;\n}\n\n/* Initialize tooltip with data */\nfunction init(event: MouseEvent, item: Scenegraph, options: Option): void {\n  // get tooltip HTML placeholder\n  const tooltipPlaceholder = getTooltipPlaceholder();\n\n  // prepare data for tooltip\n  const tooltipData = getTooltipData(item, options);\n  if (!tooltipData || tooltipData.length === 0) {\n    return undefined;\n  }\n\n  // bind data to tooltip HTML placeholder\n  bindData(tooltipPlaceholder, tooltipData);\n\n  updatePosition(event, options);\n  updateColorTheme(options);\n  select('#vis-tooltip').style('visibility', 'visible');\n  tooltipActive = true;\n\n  // invoke user-provided callback\n  if (options.onAppear) {\n    options.onAppear(event, item);\n  }\n}\n\n/* Update tooltip position on mousemove */\nfunction update(event: MouseEvent, item: Scenegraph, options: Option): void {\n  if (!shouldShowTooltip(item)) {\n    return undefined;\n  }\n  updatePosition(event, options);\n\n  // invoke user-provided callback\n  if (options.onMove) {\n    options.onMove(event, item);\n  }\n}\n\n/* Clear tooltip */\nfunction clear(event: MouseEvent, item: Scenegraph, options: Option): void {\n  if (!shouldShowTooltip(item)) {\n    return undefined;\n  }\n  // visibility hidden instead of display none\n  // because we need computed tooltip width and height to best position it\n  select('#vis-tooltip').style('visibility', 'hidden');\n\n  tooltipActive = false;\n  clearData();\n  clearColorTheme();\n  clearPosition();\n\n  // invoke user-provided callback\n  if (options.onDisappear) {\n    options.onDisappear(event, item);\n  }\n}\n\n/* Decide if a Scenegraph item deserves tooltip */\nfunction shouldShowTooltip(item: Scenegraph) {\n  // no data, no show\n  if (!item || !item.datum) {\n    return false;\n  }\n  // (small multiples) avoid showing tooltip for a facet's background\n  if (item.datum._facetID) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Copy options into new objects to prevent causing side-effect to original object\n */\nfunction copyOptions(options: Option) {\n  const newOptions: Option = {};\n  for (const field in options) {\n    if (options.hasOwnProperty(field)) {\n      newOptions[field] = options[field];\n    }\n  }\n  return newOptions;\n}\n","import {ScenegraphData} from './options';\n\nexport type SortCallback = (datum: TooltipData) => number;\nexport interface Option {\n  showAllFields?: boolean;\n  fields?: FieldOption[];\n  delay?: number;\n  offset?: {\n    x: number,\n    y: number\n  };\n  onAppear?(event: Event, item: object): void;\n  onMove?(event: Event, item: object): void;\n  onDisappear?(event: Event, item: object): void;\n  colorTheme?: 'light' | 'dark';\n  isComposition?: boolean;\n  sort?: 'title' | 'value' | SortCallback;\n}\n\nexport type TitleAccessor = (item: ScenegraphData) => string;\nexport type FormatCallback = (value: ScenegraphPrimitive) => string;\nexport type ValueAccessor = (item: ScenegraphData) => ScenegraphPrimitive;\nexport type RowRenderer = (title: string, value: string | number) => Element;\nexport interface FieldOption {\n  field?: string;\n  title?: string | TitleAccessor;\n  formatType?: 'number' | 'time' | 'string';\n  format?: string | FormatCallback;\n  valueAccessor?: ValueAccessor;\n  aggregate?: string;\n  bin?: boolean;\n  render?: RowRenderer;\n}\n\nexport interface SupplementedFieldOption extends FieldOption {\n  removeOriginalTemporalField?: string;\n  bin?: boolean;\n}\n\nexport type ScenegraphPrimitive = string | number | Date;\nexport interface ScenegraphData {\n  [key: string]: ScenegraphPrimitive | ScenegraphData;\n}\n\nexport type TooltipData = {\n  title: string,\n  value: string | number,\n  rawValue: string | number | Date,\n  render?: RowRenderer\n};\n\nexport type Scenegraph = {\n  datum: ScenegraphData,\n  mark: {\n    marktype: string,\n    items: object,\n    name: string\n  }\n};\n\nexport type TemporaryFieldOption = {\n  [key: string]: FieldOption\n};\n\nexport type VgView = any;\n\nexport const DELAY = 100;\n","import {isDate, isFunction, isNumber, isString} from 'vega-util';\nimport {autoFormat, customFormat} from './formatFieldValue';\nimport {FieldOption, Option, Scenegraph, ScenegraphData, SupplementedFieldOption, TemporaryFieldOption, TooltipData} from './options';\n\n/**\n * Prepare data for the tooltip\n * @return An array of tooltip data [{ title: ..., value: ...}]\n */\n// TODO: add marktype\nexport function getTooltipData(item: Scenegraph, options: Option) {\n  // ignore data from group marks\n  if (item.mark.marktype === 'group') {\n    return undefined;\n  }\n\n  // this array will be bind to the tooltip element\n  let tooltipData: TooltipData[];\n  const itemData: ScenegraphData = {};\n  for (const field in item.datum) {\n    if (item.datum.hasOwnProperty(field)) {\n      itemData[field] = item.datum[field];\n    }\n  }\n\n  const removeKeys = [\n    'width', 'height', 'count_start', 'count_end',\n    'layout_start', 'layout_mid', 'layout_end', 'layout_path', 'layout_x', 'layout_y'\n  ];\n  removeFields(itemData, removeKeys);\n\n  // remove duplicate time fields (if any)\n  removeDuplicateTimeFields(itemData, options.fields);\n\n  // combine multiple rows of a binned field into a single row\n  combineBinFields(itemData, options.fields);\n\n  // TODO(zening): use Vega-Lite layering to support tooltip on line and area charts (#1)\n  dropFieldsForLineArea(item.mark.marktype, itemData);\n  if (options.showAllFields === true) {\n    tooltipData = prepareAllFieldsData(itemData, options);\n  } else {\n    tooltipData = prepareCustomFieldsData(itemData, options);\n  }\n\n  if (options.sort) {\n    const sortStr =\n      options.sort === 'title' ? 'title' :\n      options.sort === 'value' ? 'rawValue' :\n      null;\n    const sortFn = sortStr ? defaultSort(sortStr) : isFunction(options.sort) && options.sort;\n    if (sortFn) {\n      tooltipData = tooltipData.sort(sortFn);\n    }\n  }\n\n  return tooltipData;\n}\n\n/**\n * Prepare custom fields data for tooltip. This function formats\n * field titles and values and returns an array of formatted fields.\n *\n * @param {time.map} itemData - a map of item.datum\n * @param {Object} options - user-provided options\n * @return An array of formatted fields specified by options [{ title: ..., value: ...}]\n */\nexport function prepareCustomFieldsData(itemData: ScenegraphData, options: Option = {}) {\n  const tooltipData: TooltipData[] = [];\n\n  options.fields.forEach(function (fieldOption) {\n    const titleStr = isString(fieldOption.title) ? fieldOption.title : undefined;\n    const titleFn =  isFunction(fieldOption.title)  ? fieldOption.title : undefined;\n\n    // prepare field title\n    const title =\n      (titleFn && titleFn(itemData)) ||\n      titleStr ||\n      fieldOption.field;\n\n    // get (raw) field value\n    const value =\n      (fieldOption.valueAccessor && fieldOption.valueAccessor(itemData)) ||\n      getValue(itemData, fieldOption.field, options.isComposition);\n    if (value === undefined) {\n      return undefined;\n    }\n\n    // format value\n    const formattedValue = customFormat(value, fieldOption.formatType, fieldOption.format) || autoFormat(value);\n\n    // add formatted data to tooltipData\n    tooltipData.push({\n      title: title,\n      value: formattedValue,\n      rawValue: value,\n      render: fieldOption.render\n    });\n  });\n\n  return tooltipData;\n}\n\n/**\n * Get a field value from a data map.\n * @param {time.map} itemData - a map of item.datum\n * @param {string} field - the name of the field. It can contain \".\" to specify\n * that the field is not a direct child of item.datum\n * @return the field value on success, undefined otherwise\n */\nexport function getValue(itemData: ScenegraphData, field: string, isComposition: boolean) {\n  if (!field) {\n      // `field` is not required when using `valueAccessor`, and if\n      // `valueAccessor` returns a falsy value this path will throw\n      // and break the tooltip. Exit here instead.\n      return undefined;\n  }\n  \n  let value: string | number | Date | ScenegraphData;\n\n  const accessors: string[] = field.split('.');\n\n  // get the first accessor and remove it from the array\n  const firstAccessor: string = accessors[0];\n  accessors.shift();\n  if (itemData[firstAccessor]) {\n    value = itemData[firstAccessor];\n\n    // if we still have accessors, use them to get the value\n    accessors.forEach(function (a) {\n      value = value as ScenegraphData;\n      if (value[a]) {\n        value = value[a];\n      }\n    });\n  }\n\n  if (value === undefined) {\n    if (!isComposition) {\n      console.warn('[Tooltip] Cannot find field ' + field + ' in data.');\n    }\n    return undefined;\n  } else {\n    return value as string | number | Date;\n  }\n}\n\n\n/**\n * Prepare data for all fields in itemData for tooltip. This function\n * formats field titles and values and returns an array of formatted fields.\n *\n * @param {time.map} itemData - a map of item.datum\n * @param {Object} options - user-provided options\n * @return All fields in itemData, formatted, in the form of an array: [{ title: ..., value: ...}]\n *\n * Please note that this function expects itemData to be simple {field:value} pairs.\n * It will not try to parse value if it is an object. If value is an object, please\n * use prepareCustomFieldsData() instead.\n */\nexport function prepareAllFieldsData(itemData: ScenegraphData, options: Option = {}) {\n  const tooltipData: TooltipData[] = [];\n\n  // here, fieldOptions still provides format\n  const fieldOptions: TemporaryFieldOption = {};\n  if (options && options.fields) {\n    for (const optionField of options.fields) {\n      fieldOptions[optionField.field] = optionField;\n    }\n  }\n\n  for (const field in itemData) {\n    if (itemData.hasOwnProperty(field)) {\n      const value = itemData[field] as number | string | Date;\n      let title;\n      if (fieldOptions[field] && fieldOptions[field].title) {\n        title = fieldOptions[field].title;\n      } else {\n        title = field;\n      }\n\n      let formatType;\n      let format;\n      // format value\n      if (fieldOptions[field]) {\n        formatType = fieldOptions[field].formatType;\n        format = fieldOptions[field].format;\n      }\n      const formattedValue = customFormat(value, formatType, format) || autoFormat(value);\n\n      // add formatted data to tooltipData\n      tooltipData.push({title: title, value: formattedValue, rawValue: value});\n    }\n  }\n  return tooltipData;\n}\n\n/**\n * Remove multiple fields from a tooltip data map, using removeKeys\n *\n * Certain meta data fields (e.g. \"_id\", \"_prev\") should be hidden in the tooltip\n * by default. This function can be used to remove these fields from tooltip data.\n * @param {time.map} dataMap - the data map that contains tooltip data.\n * @param {string[]} removeKeys - the fields that should be removed from dataMap.\n */\nexport function removeFields(dataMap: ScenegraphData, removeKeys: string[]) {\n  removeKeys.forEach(function (key) {\n    delete dataMap[key];\n  });\n}\n\n/**\n * When a temporal field has timeUnit, itemData will give us duplicated fields\n * (e.g., Year and YEAR(Year)). In tooltip want to display the field WITH the\n * timeUnit and remove the field that doesn't have timeUnit.\n */\nexport function removeDuplicateTimeFields(itemData: ScenegraphData, optFields: SupplementedFieldOption[]): void {\n  if (!optFields) {\n    return undefined;\n  }\n\n  optFields.forEach(function (optField) {\n    if (optField.removeOriginalTemporalField) {\n      removeFields(itemData, [optField.removeOriginalTemporalField]);\n    }\n  });\n}\n\n/**\n * Combine multiple binned fields in itemData into one field. The value of the field\n * is a string that describes the bin range.\n *\n * @param {Object} itemData - an object of item.datum\n * @param {Object[]} fieldOptions - a list of field options (i.e. options.fields[])\n * @return itemData with combined bin fields\n */\nexport function combineBinFields(itemData: ScenegraphData, fieldOptions: FieldOption[]) {\n  if (!fieldOptions) {\n    return undefined;\n  }\n\n  fieldOptions.forEach(function (fieldOption) {\n    if (fieldOption.bin === true) {\n      // get binned field names\n      const binFieldRange = fieldOption.field;\n      const binFieldStart = binFieldRange;\n      const binFieldMid = binFieldRange.concat('_mid');\n      const binFieldEnd = binFieldRange.concat('_end');\n\n      // use start value and end value to compute range\n      // save the computed range in binFieldStart\n      const startValue = itemData[binFieldStart];\n      const endValue = itemData[binFieldEnd];\n      if ((startValue !== undefined) && (endValue !== undefined)) {\n        const range = startValue + '-' + endValue;\n        itemData[binFieldRange] = range;\n      }\n\n      // remove binFieldMid, binFieldEnd, and binFieldRange from itemData\n      const binRemoveKeys = [binFieldMid, binFieldEnd];\n      removeFields(itemData, binRemoveKeys);\n    }\n  });\n\n  return itemData;\n}\n\n/**\n * Drop fields for line and area marks.\n *\n * Lines and areas are defined by a series of datum. We overlay point marks\n * on top of lines and areas to allow tooltip to show all data in the series.\n * For the line marks and area marks underneath, we only show nominal fields\n * in tooltip. This is because line / area marks only give us the last datum\n * in their series. It only make sense to show the nominal fields (e.g., symbol\n * = APPL, AMZN, GOOG, IBM, MSFT) because these fields don't tend to change along\n * the line / area border.\n */\nexport function dropFieldsForLineArea(marktype: string, itemData: ScenegraphData) {\n  if (marktype === 'line' || marktype === 'area') {\n    const quanKeys: string[] = [];\n    for (const key in itemData) {\n      if (itemData.hasOwnProperty(key)) {\n        const value = itemData[key];\n        if (isDate(value)) {\n          quanKeys.push(key);\n        }\n      }\n    }\n    removeFields(itemData, quanKeys);\n  }\n}\n\nfunction defaultSort(field: string) {\n  return (a, b) => {\n    if (isNumber(a[field]) && isNumber(b[field])) {\n      // numeric comparison: descending\n      return b[field] - a[field];\n    } else if (isString(a[field]) && isString(b[field])) {\n      // string comparison: ascending\n      return a[field].localeCompare(b[field]);\n    } else if (isDate(a[field]) && isDate(b[field])) {\n        // date comparison; ascending\n        return a[field] - b[field];\n      }\n\n    // dates first\n    if (isDate(a[field])) { return -1; }\n    if (isDate(b[field])) { return 1; }\n    // numbers second\n    if (isNumber(a[field])) { return -1; }\n    if (isNumber(b[field])) { return 1; }\n    // strings last\n    return 1;\n  };\n}\n","import * as vl from 'vega-lite';\nimport {FieldDef, MarkPropFieldDef, PositionFieldDef} from 'vega-lite/build/src/fielddef';\nimport {isConcatSpec, isFacetSpec, isLayerSpec, isRepeatSpec, normalize, TopLevelExtendedSpec} from 'vega-lite/build/src/spec';\nimport {TEMPORAL} from 'vega-lite/build/src/type';\nimport {FieldOption, Option, SupplementedFieldOption} from './options';\n\n/* mapping from fieldDef.type to formatType */\nconst formatTypeMap: { [type: string]: 'number' | 'time' } = {\n  'quantitative': 'number',\n  'temporal': 'time',\n  'ordinal': undefined,\n  'nominal': undefined\n};\n\n/**\n * (Vega-Lite only) Supplement options with vlSpec\n *\n * @param options - user-provided options\n * @param vlSpec - vega-lite spec\n * @return the vlSpec-supplemented options object\n *\n * if options.showAllFields is true or undefined, vlSpec will supplement\n * options.fields with all fields in the spec\n * if options.showAllFields is false, vlSpec will only supplement existing fields\n * in options.fields\n */\nexport function supplementOptions(options: Option, vlSpec: TopLevelExtendedSpec) {\n  // fields to be supplemented by vlSpec\n  const supplementedFields: FieldOption[] = [];\n  vlSpec = normalize(vlSpec, {});\n\n  // if showAllFields is true or undefined, supplement all fields in vlSpec\n  if (options.showAllFields !== false) {\n    vl.spec.fieldDefs(vlSpec).forEach(function (fieldDef: FieldDef<any>) {\n      // get a fieldOption in options that matches the fieldDef\n      const fieldOption = getFieldOption(options.fields, fieldDef);\n\n      // supplement the fieldOption with fieldDef and config\n      const supplementedFieldOption = supplementFieldOption(fieldOption, fieldDef, vlSpec);\n\n      supplementedFields.push(supplementedFieldOption);\n    });\n  } else { // if showAllFields is false, only supplement existing fields in options.fields\n    if (options.fields) {\n      options.fields.forEach(function (fieldOption: FieldOption) {\n        // get the fieldDef in vlSpec that matches the fieldOption\n        const fieldDef = getFieldDef(vl.spec.fieldDefs(vlSpec), fieldOption);\n\n        // supplement the fieldOption with fieldDef and config\n        const supplementedFieldOption = supplementFieldOption(fieldOption, fieldDef, vlSpec);\n\n        supplementedFields.push(supplementedFieldOption);\n      });\n    }\n  }\n\n  if (isComposition(vlSpec)) {\n    options.isComposition = true;\n  }\n\n  options.fields = supplementedFields;\n\n  return options;\n}\n\n/**\n * Find a fieldOption in fieldOptions that matches a fieldDef\n *\n * @param {Object[]} fieldOptionss - a list of field options (i.e. options.fields[])\n * @param {Object} fieldDef - from vlSpec\n * @return the matching fieldOption, or undefined if no match was found\n *\n * If the fieldDef is aggregated, find a fieldOption that matches the field name and\n * the aggregation of the fieldDef.\n * If the fieldDef is not aggregated, find a fieldOption that matches the field name.\n */\nexport function getFieldOption(fieldOptions: FieldOption[], fieldDef: FieldDef<any>) {\n  if (!fieldDef || !fieldOptions || fieldOptions.length <= 0) {\n    return undefined;\n  }\n\n  // if aggregate, match field name and aggregate operation\n  if (fieldDef.aggregate) {\n    // try find the perfect match: field name equals, aggregate operation equals\n    for (const item of fieldOptions) {\n      if (item.field === fieldDef.field && item.aggregate === fieldDef.aggregate) {\n        return item;\n      }\n    }\n\n    // try find the second-best match: field name equals, field.aggregate is not specified\n    for (const item of fieldOptions) {\n      if (item.field === fieldDef.field && !item.aggregate) {\n        return item;\n      }\n    }\n\n    // return undefined if no match was found\n    return undefined;\n  } else { // if not aggregate, just match field name\n    for (const item of fieldOptions) {\n      if (item.field === fieldDef.field) {\n        return item;\n      }\n    }\n\n    // return undefined if no match was found\n    return undefined;\n  }\n}\n\n/**\n * Find a fieldDef that matches a fieldOption\n *\n * @param {Object} fieldOption - a field option (a member in options.fields[])\n * @return the matching fieldDef, or undefined if no match was found\n *\n * A matching fieldDef should have the same field name as fieldOption.\n * If the matching fieldDef is aggregated, the aggregation should not contradict\n * with that of the fieldOption.\n */\nexport function getFieldDef(fieldDefs: FieldDef<any>[], fieldOption: FieldOption): FieldDef<any> {\n  if (!fieldOption || !fieldOption.field || !fieldDefs) {\n    return undefined;\n  }\n\n  // field name should match, aggregation should not disagree\n  for (const item of fieldDefs) {\n    if (item.field === fieldOption.field) {\n      if (item.aggregate) {\n        if (item.aggregate === fieldOption.aggregate || !fieldOption.aggregate) {\n          return item;\n        }\n      } else {\n        return item;\n      }\n    }\n  }\n\n  // return undefined if no match was found\n  return undefined;\n}\n\n/**\n * Supplement a fieldOption (from options.fields[]) with a fieldDef, config\n * (which provides timeFormat, numberFormat, countTitle)\n * Either fieldOption or fieldDef can be undefined, but they cannot both be undefined.\n * config (and its members timeFormat, numberFormat and countTitle) can be undefined.\n * @return the supplemented fieldOption, or undefined on error\n */\nexport function supplementFieldOption(fieldOption: FieldOption, fieldDef: FieldDef<any>, vlSpec: TopLevelExtendedSpec) {\n  // many specs don't have config\n  const config = {...vlSpec.config};\n\n  // at least one of fieldOption and fieldDef should exist\n  if (!fieldOption && !fieldDef) {\n    console.error('[Tooltip] Cannot supplement a field when field and fieldDef are both empty.');\n    return undefined;\n  }\n\n  // if either one of fieldOption and fieldDef is undefined, make it an empty object\n  if (!fieldOption && fieldDef) {\n    fieldOption = {};\n  }\n  if (fieldOption && !fieldDef) {\n    fieldDef = {} as any;  // type will be added later, TODO: refactor this\n  }\n\n  // the supplemented field option\n  const supplementedFieldOption: SupplementedFieldOption = {};\n\n  // supplement a user-provided field name with underscore prefixes and suffixes to\n  // match the field names in item.datum\n  // for aggregation, this will add prefix \"mean_\" etc.\n  // for timeUnit, this will add prefix \"yearmonth_\" etc.\n  // for bin, this will add prefix \"bin_\" and suffix \"_start\". Later we will replace \"_start\" with \"_range\".\n\n  if (fieldDef.bin) {\n    fieldDef.bin = vl.fieldDef.normalizeBin(fieldDef.bin, undefined);\n  }\n  supplementedFieldOption.field = vl.fieldDef.vgField(fieldDef) || fieldOption.field;\n\n  // If a fieldDef is a (TIMEUNIT)T, we check if the original T is present in the vlSpec.\n  // If only (TIMEUNIT)T is present in vlSpec, we set `removeOriginalTemporalField` to T,\n  // which will cause function removeDuplicateTimeFields() to remove T and only keep (TIMEUNIT)T\n  // in item data.\n  // If both (TIMEUNIT)T and T are in vlSpec, we set `removeOriginalTemporalField` to undefined,\n  // which will leave both T and (TIMEUNIT)T in item data.\n  // Note: user should never have to provide this boolean in options\n  if (fieldDef.type === TEMPORAL && fieldDef.timeUnit) {\n    // in most cases, if it's a (TIMEUNIT)T, we remove original T\n    const originalTemporalField = fieldDef.field;\n    supplementedFieldOption.removeOriginalTemporalField = originalTemporalField;\n\n    // handle corner case: if T is present in vlSpec, then we keep both T and (TIMEUNIT)T\n    const fieldDefs = vl.spec.fieldDefs(vlSpec);\n    for (const items of fieldDefs) {\n      if (items.field === originalTemporalField && !items.timeUnit) {\n        supplementedFieldOption.removeOriginalTemporalField = undefined;\n        break;\n      }\n    }\n  }\n\n  // supplement title\n  if (!config.countTitle) {\n    config.countTitle = vl.config.defaultConfig.countTitle; // use vl default countTitle\n  }\n  let defaultTitle = vl.fieldDef.title(fieldDef, config);\n  if (isPositionFieldDef(fieldDef)) {\n    if (fieldDef.axis && fieldDef.axis.title) {\n      defaultTitle = fieldDef.axis.title;\n    }\n  }\n  if (isMarkPropFieldDef(fieldDef)) {\n    if (fieldDef.legend && fieldDef.legend.title) {\n      defaultTitle = fieldDef.legend.title;\n    }\n  }\n\n  supplementedFieldOption.title = fieldOption.title || defaultTitle;\n\n  // supplement formatType\n  supplementedFieldOption.formatType = fieldOption.formatType || formatTypeMap[fieldDef.type];\n\n  // supplement format\n  if (fieldOption.format) {\n    supplementedFieldOption.format = fieldOption.format;\n  } else { // when user doesn't provide format, supplement format using timeUnit, timeFormat, and numberFormat\n    switch (supplementedFieldOption.formatType) {\n      case 'time':\n        supplementedFieldOption.format = fieldDef.timeUnit ?\n          // TODO(zening): use template for all time fields, to be consistent with Vega-Lite\n          vl.timeUnit.formatExpression(fieldDef.timeUnit, '', false, false).split(\"'\")[1]\n          : config.timeFormat || vl.config.defaultConfig.timeFormat;\n        break;\n      case 'number':\n        supplementedFieldOption.format = config.numberFormat;\n        break;\n      case 'string':\n      default:\n    }\n  }\n\n  // supplement bin from fieldDef, user should never have to provide bin in options\n  if (fieldDef.bin) {\n    supplementedFieldOption.field = supplementedFieldOption.field.replace('_start', '_range'); // replace suffix\n    supplementedFieldOption.bin = true;\n    supplementedFieldOption.formatType = 'string'; // we show bin range as string (e.g. \"5-10\")\n  }\n\n  return supplementedFieldOption;\n}\n\n/**\n * Typeguard function for PositionFieldDef interface\n */\nfunction isPositionFieldDef(fd: FieldDef<any>): fd is PositionFieldDef<any> {\n  // the fieldDef may still be a PositionFieldDef even if it doesn't have an axis\n  return 'axis' in fd;\n}\n\n/**\n * Typeguard function for MarkPropFieldDef interface\n */\nfunction isMarkPropFieldDef(fd: FieldDef<any>): fd is MarkPropFieldDef<any> {\n  // the fieldDef may still be a MarkPropFieldDef even if it doesn't have a legend\n  return 'legend' in fd;\n}\n\n/**\n * Returns true if the spec is composition (one of concat, facet, layer or repeat), false otherwise\n * @param vlSpec Vega-lite spec\n */\nfunction isComposition(vlSpec: TopLevelExtendedSpec) {\n  return isConcatSpec(vlSpec) || isFacetSpec(vlSpec) || isLayerSpec(vlSpec) || isRepeatSpec(vlSpec);\n}\n","import {EnterElement, select, Selection} from 'd3-selection';\nimport {Option, TooltipData} from './options';\n\n/**\n * Get the tooltip HTML placeholder by id selector \"#vis-tooltip\"\n * If none exists, create a placeholder.\n * @returns the HTML placeholder for tooltip\n */\nexport function getTooltipPlaceholder() {\n  let tooltipPlaceholder;\n\n  if (select('#vis-tooltip').empty()) {\n    tooltipPlaceholder = select('body').append('div')\n      .attr('id', 'vis-tooltip')\n      .attr('class', 'vg-tooltip');\n  } else {\n    tooltipPlaceholder = select('#vis-tooltip');\n  }\n\n  return tooltipPlaceholder;\n}\n\n/**\n * Bind tooltipData to the tooltip placeholder\n */\nexport function bindData(tooltipPlaceholder: Selection<Element | EnterElement | Document | Window, {}, HTMLElement, any>, tooltipData: TooltipData[]) {\n  tooltipPlaceholder.selectAll('table').remove();\n  const tooltipRows = tooltipPlaceholder.append('table').selectAll('.tooltip-row')\n    .data(tooltipData);\n\n  tooltipRows.exit().remove();\n\n  tooltipRows.enter().append('tr')\n    .attr('class', 'tooltip-row')\n    .each(function(d) {\n      const sel = select(this);\n      if (d.render) {\n        sel.append('td')\n          .attr('colspan', '2')\n          .append(() => d.render(d.title, d.value));\n      } else {\n        sel.append('td').attr('class', 'key').text(function (data: TooltipData) { return data.title + ':'; });\n        sel.append('td').attr('class', 'value').text(function (data: TooltipData) { return data.value; });\n      }\n    });\n}\n\n/**\n * Clear tooltip data\n */\nexport function clearData() {\n  select('#vis-tooltip').selectAll('.tooltip-row').data([])\n    .exit().remove();\n}\n\n/**\n * Update tooltip position\n * Default position is 10px right of and 10px below the cursor. This can be\n * overwritten by options.offset\n */\nexport function updatePosition(event: MouseEvent, options: Option) {\n  // determine x and y offsets, defaults are 10px\n  let offsetX = 10;\n  let offsetY = 10;\n  if (options && options.offset && (options.offset.x !== undefined) && (options.offset.x !== null)) {\n    offsetX = options.offset.x;\n  }\n  if (options && options.offset && (options.offset.y !== undefined) && (options.offset.y !== null)) {\n    offsetY = options.offset.y;\n  }\n\n  // TODO: use the correct time type\n  select('#vis-tooltip')\n    .style('top', function (this: HTMLElement) {\n      // by default: put tooltip 10px below cursor\n      // if tooltip is close to the bottom of the window, put tooltip 10px above cursor\n      const tooltipHeight = this.getBoundingClientRect().height;\n      if (event.clientY + tooltipHeight + offsetY < window.innerHeight) {\n        return '' + (event.clientY + offsetY) + 'px';\n      } else {\n        return '' + (event.clientY - tooltipHeight - offsetY) + 'px';\n      }\n    })\n    .style('left', function (this: HTMLElement) {\n      // by default: put tooltip 10px to the right of cursor\n      // if tooltip is close to the right edge of the window, put tooltip 10 px to the left of cursor\n      const tooltipWidth = this.getBoundingClientRect().width;\n      if (event.clientX + tooltipWidth + offsetX < window.innerWidth) {\n        return '' + (event.clientX + offsetX) + 'px';\n      } else {\n        return '' + (event.clientX - tooltipWidth - offsetX) + 'px';\n      }\n    });\n}\n\n/* Clear tooltip position */\nexport function clearPosition() {\n  select('#vis-tooltip')\n    .style('top', '-9999px')\n    .style('left', '-9999px');\n}\n\n/**\n * Update tooltip color theme according to options.colorTheme\n *\n * If colorTheme === \"dark\", apply dark theme to tooltip.\n * Otherwise apply light color theme.\n */\nexport function updateColorTheme(options: Option) {\n  clearColorTheme();\n\n  if (options && options.colorTheme === 'dark') {\n    select('#vis-tooltip').classed('dark-theme', true);\n  } else {\n    select('#vis-tooltip').classed('light-theme', true);\n  }\n}\n\n/* Clear color themes */\nexport function clearColorTheme() {\n  select('#vis-tooltip').classed('dark-theme light-theme', false);\n}\n"]}